7850eb4bdd50c7c1291d19e9e1979ac1
"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _BasePage2 = require("../core/BasePage.js");
var _workoutDataService = require("../services/workoutDataService.js");
var _helpers = require("../utils/helpers.js");
var _constants = require("../utils/constants.js");
var _authManager = require("../modules/authManager.js");
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == _typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); } // calendarPage.js - カレンダーページの機能
var CalendarPage = /*#__PURE__*/function (_BasePage) {
  function CalendarPage() {
    var _this;
    _classCallCheck(this, CalendarPage);
    _this = _callSuper(this, CalendarPage);
    _this.currentDate = new Date();
    _this.workoutData = [];
    _this.plannedWorkouts = [];
    _this.selectedDate = null;
    _this.isLoading = false;
    return _this;
  }

  /**
   * カレンダーページの初期化（MPAInitializerから呼ばれる）
   */
  _inherits(CalendarPage, _BasePage);
  return _createClass(CalendarPage, [{
    key: "initialize",
    value: (function () {
      var _initialize = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {
        return _regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              // 認証チェックをスキップしてカレンダーを表示
              console.log('Calendar page initializing without auth check');

              // DOMの読み込みを待つ
              if (!(document.readyState === 'loading')) {
                _context.n = 1;
                break;
              }
              _context.n = 1;
              return new Promise(function (resolve) {
                document.addEventListener('DOMContentLoaded', resolve);
              });
            case 1:
              // カレンダーインターフェースを設定
              this.setupCalendarInterface();

              // データを読み込み
              _context.n = 2;
              return this.loadWorkoutData();
            case 2:
              // イベントリスナーを設定
              this.setupEventListeners();

              // カレンダーをレンダリング
              _context.n = 3;
              return this.renderCalendar();
            case 3:
              return _context.a(2);
          }
        }, _callee, this);
      }));
      function initialize() {
        return _initialize.apply(this, arguments);
      }
      return initialize;
    }()
    /**
     * カレンダーページ固有の初期化処理
     * BasePageの認証チェック後に実行される
     */
    )
  }, {
    key: "onInitialize",
    value: (function () {
      var _onInitialize = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {
        var _this2 = this;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              console.log('Calendar page initialized - User authenticated');

              // DOMの読み込みを待つ
              if (!(document.readyState === 'loading')) {
                _context3.n = 1;
                break;
              }
              _context3.n = 1;
              return new Promise(function (resolve) {
                document.addEventListener('DOMContentLoaded', resolve);
              });
            case 1:
              // 少し遅延してからカレンダーインターフェースを設定
              setTimeout(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {
                return _regenerator().w(function (_context2) {
                  while (1) switch (_context2.n) {
                    case 0:
                      _this2.setupCalendarInterface();

                      // データを読み込み
                      _context2.n = 1;
                      return _this2.loadWorkoutData();
                    case 1:
                      // イベントリスナーを設定
                      _this2.setupEventListeners();
                      _this2.setupAuthButton();

                      // カレンダーをレンダリング
                      _context2.n = 2;
                      return _this2.renderCalendar();
                    case 2:
                      return _context2.a(2);
                  }
                }, _callee2);
              })), 100);
            case 2:
              return _context3.a(2);
          }
        }, _callee3);
      }));
      function onInitialize() {
        return _onInitialize.apply(this, arguments);
      }
      return onInitialize;
    }()
    /**
     * ワークアウトデータを読み込み
     */
    )
  }, {
    key: "loadWorkoutData",
    value: (function () {
      var _loadWorkoutData = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {
        var _iterator, _step, workout, _t, _t2;
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.p = _context4.n) {
            case 0:
              _context4.p = 0;
              this.isLoading = true;

              // ワークアウトデータサービスから読み込み
              _context4.n = 1;
              return _workoutDataService.workoutDataService.loadWorkouts({
                limit: 1000
              });
            case 1:
              this.workoutData = _context4.v;
              // 予定されたワークアウトを読み込み
              this.plannedWorkouts = JSON.parse(localStorage.getItem('plannedWorkouts') || '[]');

              // データが無い場合はサンプルデータを生成
              if (!(this.workoutData.length === 0)) {
                _context4.n = 8;
                break;
              }
              console.log('No workout data found, generating sample data...');
              this.workoutData = this.generateSampleWorkoutData();

              // サンプルデータを保存
              _iterator = _createForOfIteratorHelper(this.workoutData);
              _context4.p = 2;
              _iterator.s();
            case 3:
              if ((_step = _iterator.n()).done) {
                _context4.n = 5;
                break;
              }
              workout = _step.value;
              _context4.n = 4;
              return _workoutDataService.workoutDataService.saveWorkout(workout);
            case 4:
              _context4.n = 3;
              break;
            case 5:
              _context4.n = 7;
              break;
            case 6:
              _context4.p = 6;
              _t = _context4.v;
              _iterator.e(_t);
            case 7:
              _context4.p = 7;
              _iterator.f();
              return _context4.f(7);
            case 8:
              console.log("Loaded ".concat(this.workoutData.length, " workouts and ").concat(this.plannedWorkouts.length, " planned workouts"));
              _context4.n = 10;
              break;
            case 9:
              _context4.p = 9;
              _t2 = _context4.v;
              console.error('Error loading workout data:', _t2);
              this.workoutData = this.generateSampleWorkoutData();
              this.plannedWorkouts = [];
              (0, _helpers.showNotification)('ワークアウトデータの読み込みに失敗しました', 'error');
            case 10:
              _context4.p = 10;
              this.isLoading = false;
              return _context4.f(10);
            case 11:
              return _context4.a(2);
          }
        }, _callee4, this, [[2, 6, 7, 8], [0, 9, 10, 11]]);
      }));
      function loadWorkoutData() {
        return _loadWorkoutData.apply(this, arguments);
      }
      return loadWorkoutData;
    }()
    /**
     * サンプルワークアウトデータを生成
     * @returns {Array} サンプルワークアウトデータ配列
     */
    )
  }, {
    key: "generateSampleWorkoutData",
    value: function generateSampleWorkoutData() {
      var today = new Date();
      var sampleData = [];

      // 過去30日分のサンプルデータを生成
      for (var i = 0; i < 30; i++) {
        var date = new Date(today);
        date.setDate(date.getDate() - i);

        // 3日に1回の頻度でワークアウトを生成
        if (i % 3 === 0) {
          var muscleGroups = ['胸', '背中', '肩', '腕', '脚', '腹筋'];
          var randomMuscles = muscleGroups.sort(function () {
            return 0.5 - Math.random();
          }).slice(0, 2);
          sampleData.push({
            id: "sample-".concat(i),
            date: date.toISOString().split('T')[0],
            muscle_groups: randomMuscles,
            exercises: [{
              name: 'ベンチプレス',
              sets: 3,
              reps: 10,
              weight: 80
            }, {
              name: 'プッシュアップ',
              sets: 3,
              reps: 15,
              weight: 0
            }],
            duration: 45,
            notes: 'サンプルワークアウト'
          });
        }
      }
      return sampleData;
    }

    /**
     * 予定されたワークアウトを読み込み（将来の機能拡張用）
     * @returns {Array} 予定されたワークアウト配列
     */
  }, {
    key: "loadPlannedWorkouts",
    value: (function () {
      var _loadPlannedWorkouts = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5() {
        var _t3;
        return _regenerator().w(function (_context5) {
          while (1) switch (_context5.p = _context5.n) {
            case 0:
              _context5.p = 0;
              return _context5.a(2, JSON.parse(localStorage.getItem('plannedWorkouts') || '[]'));
            case 1:
              _context5.p = 1;
              _t3 = _context5.v;
              console.error('Error loading planned workouts:', _t3);
              return _context5.a(2, []);
          }
        }, _callee5, null, [[0, 1]]);
      }));
      function loadPlannedWorkouts() {
        return _loadPlannedWorkouts.apply(this, arguments);
      }
      return loadPlannedWorkouts;
    }()
    /**
     * ログインプロンプトを表示
     */
    )
  }, {
    key: "showLoginPrompt",
    value: function showLoginPrompt() {
      var mainContent = document.querySelector('main');
      if (mainContent) {
        var _document$getElementB;
        mainContent.innerHTML = "\n                <div class=\"text-center py-12\">\n                    <i class=\"fas fa-lock text-4xl text-gray-400 mb-4\"></i>\n                    <h2 class=\"text-2xl font-bold text-gray-900 mb-2\">\u30ED\u30B0\u30A4\u30F3\u304C\u5FC5\u8981\u3067\u3059</h2>\n                    <p class=\"text-gray-600 mb-6\">\u30AB\u30EC\u30F3\u30C0\u30FC\u3092\u8868\u793A\u3059\u308B\u306B\u306F\u30ED\u30B0\u30A4\u30F3\u3057\u3066\u304F\u3060\u3055\u3044</p>\n                    <button id=\"login-btn\" data-action=\"login\" class=\"bg-blue-600 text-white px-6 py-3 rounded-md hover:bg-blue-700\">\n                        \u30ED\u30B0\u30A4\u30F3\n                    </button>\n                </div>\n            ";
        (_document$getElementB = document.getElementById('login-btn')) === null || _document$getElementB === void 0 || _document$getElementB.addEventListener('click', function () {
          _authManager.authManager.showAuthModal('login');
        });
      }
    }

    /**
     * 認証ボタンを設定
     */
  }, {
    key: "setupAuthButton",
    value: function setupAuthButton() {
      var authButton = document.getElementById('auth-button');
      if (authButton) {
        authButton.addEventListener('click', function () {
          _authManager.authManager.showAuthModal('login');
        });
      }
    }

    /**
     * カレンダーインターフェースを設定
     */
  }, {
    key: "setupCalendarInterface",
    value: function setupCalendarInterface() {
      var _this3 = this;
      var container = document.getElementById('calendar-container');
      if (!container) {
        console.error('Calendar container not found');
        // 少し遅延してから再試行
        setTimeout(function () {
          var retryContainer = document.getElementById('calendar-container');
          if (retryContainer) {
            console.log('Calendar container found on retry');
            _this3.setupCalendarInterface();
          } else {
            console.error('Calendar container still not found after retry');
          }
        }, 200);
        return;
      }
      container.innerHTML = "\n            <div class=\"space-y-6\">\n                <!-- \u30AB\u30EC\u30F3\u30C0\u30FC\u30D8\u30C3\u30C0\u30FC -->\n                <div class=\"bg-white rounded-lg shadow-md p-6\">\n                    <div class=\"flex items-center justify-between mb-4\">\n                        <h2 class=\"text-xl font-bold text-gray-800\">\n                            <i class=\"fas fa-calendar text-blue-500 mr-2\"></i>\n                            \u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u30AB\u30EC\u30F3\u30C0\u30FC\n                        </h2>\n                        <div class=\"flex items-center space-x-2\">\n                            <button id=\"prev-month\" \n                                    class=\"p-2 text-gray-600 hover:text-gray-800 \n                                           hover:bg-gray-100 rounded-lg transition-colors\">\n                                <i class=\"fas fa-chevron-left\"></i>\n                            </button>\n                            <span id=\"current-month\" \n                                  class=\"text-lg font-semibold min-w-[200px] text-center\">\n                            </span>\n                            <button id=\"next-month\" \n                                    class=\"p-2 text-gray-600 hover:text-gray-800 \n                                           hover:bg-gray-100 rounded-lg transition-colors\">\n                                <i class=\"fas fa-chevron-right\"></i>\n                            </button>\n                        </div>\n                    </div>\n\n                    <!-- \u30AB\u30EC\u30F3\u30C0\u30FC\u30B0\u30EA\u30C3\u30C9 -->\n                    <div class=\"calendar-wrapper\">\n                        <!-- \u66DC\u65E5\u30D8\u30C3\u30C0\u30FC -->\n                        <div class=\"calendar-weekday-header\">\n                            <div class=\"calendar-weekday sunday\">\u65E5</div>\n                            <div class=\"calendar-weekday\">\u6708</div>\n                            <div class=\"calendar-weekday\">\u706B</div>\n                            <div class=\"calendar-weekday\">\u6C34</div>\n                            <div class=\"calendar-weekday\">\u6728</div>\n                            <div class=\"calendar-weekday\">\u91D1</div>\n                            <div class=\"calendar-weekday saturday\">\u571F</div>\n                        </div>\n                        \n                        <!-- \u65E5\u4ED8\u30B0\u30EA\u30C3\u30C9 -->\n                        <div class=\"calendar-grid\">\n                            <div id=\"calendar-dates\" class=\"calendar-dates-container\">\n                                <!-- \u30ED\u30FC\u30C7\u30A3\u30F3\u30B0\u8868\u793A -->\n                                <div id=\"calendar-loading\" class=\"col-span-7 text-center py-8 hidden\">\n                                    <i class=\"fas fa-spinner fa-spin text-2xl text-gray-400 mb-2\"></i>\n                                    <p class=\"text-gray-500\">\u30AB\u30EC\u30F3\u30C0\u30FC\u3092\u8AAD\u307F\u8FBC\u307F\u4E2D...</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- \u30AB\u30EC\u30F3\u30C0\u30FC\u51E1\u4F8B -->\n                <div class=\"bg-white rounded-lg shadow-md p-6\">\n                    <h3 class=\"text-lg font-bold text-gray-800 mb-4\">\n                        <i class=\"fas fa-palette text-purple-500 mr-2\"></i>\n                        \u90E8\u4F4D\u5225\u8272\u5206\u3051\n                    </h3>\n                    <div class=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-3\">\n                        ".concat(_constants.MUSCLE_GROUPS.map(function (group) {
        return "\n                            <div class=\"flex items-center space-x-2 p-2 rounded-lg ".concat(group.bgColor, "\">\n                                <div class=\"w-4 h-4 ").concat(group.color, " rounded-full\"></div>\n                                <span class=\"text-sm font-medium ").concat(group.textColor, "\">").concat(group.name, "</span>\n                            </div>\n                        ");
      }).join(''), "\n                    </div>\n                    <div class=\"mt-4 text-sm text-gray-600\">\n                        <p><i class=\"fas fa-info-circle mr-1\"></i>\u5404\u65E5\u4ED8\u306E\u8272\u4ED8\u304D\u30C9\u30C3\u30C8\u306F\u3001\u305D\u306E\u65E5\u306B\u884C\u3063\u305F\u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u90E8\u4F4D\u3092\u8868\u3057\u307E\u3059</p>\n                    </div>\n                </div>\n\n                <!-- \u6708\u9593\u7D71\u8A08 -->\n                <div class=\"bg-white rounded-lg shadow-md p-6\">\n                    <h3 class=\"text-lg font-bold text-gray-800 mb-4\">\n                        <i class=\"fas fa-chart-bar text-purple-500 mr-2\"></i>\n                        \u6708\u9593\u7D71\u8A08\n                    </h3>\n                    <div id=\"monthly-stats\" class=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                    </div>\n                </div>\n\n                <!-- \u90E8\u4F4D\u5225\u7D71\u8A08 -->\n                <div class=\"bg-white rounded-lg shadow-md p-6\">\n                    <h3 class=\"text-lg font-bold text-gray-800 mb-4\">\n                        <i class=\"fas fa-dumbbell text-orange-500 mr-2\"></i>\n                        \u90E8\u4F4D\u5225\u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u56DE\u6570\n                    </h3>\n                    <div id=\"muscle-stats\" class=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n                    </div>\n                </div>\n            </div>\n        ");
    }

    /**
     * イベントリスナーを設定
     */
  }, {
    key: "setupEventListeners",
    value: function setupEventListeners() {
      var _this4 = this;
      // 月移動ボタン
      var prevBtn = document.getElementById('prev-month');
      var nextBtn = document.getElementById('next-month');
      if (prevBtn) {
        prevBtn.addEventListener('click', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6() {
          return _regenerator().w(function (_context6) {
            while (1) switch (_context6.n) {
              case 0:
                _this4.currentDate.setMonth(_this4.currentDate.getMonth() - 1);
                console.log('Previous month clicked');
                _context6.n = 1;
                return _this4.renderCalendar();
              case 1:
                return _context6.a(2);
            }
          }, _callee6);
        })));
      }
      if (nextBtn) {
        nextBtn.addEventListener('click', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee7() {
          return _regenerator().w(function (_context7) {
            while (1) switch (_context7.n) {
              case 0:
                _this4.currentDate.setMonth(_this4.currentDate.getMonth() + 1);
                console.log('Next month clicked');
                _context7.n = 1;
                return _this4.renderCalendar();
              case 1:
                return _context7.a(2);
            }
          }, _callee7);
        })));
      }
    }

    /**
     * カレンダーをレンダリング
     */
  }, {
    key: "renderCalendar",
    value: (function () {
      var _renderCalendar = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee9() {
        var _this5 = this;
        return _regenerator().w(function (_context9) {
          while (1) switch (_context9.n) {
            case 0:
              console.log('Rendering calendar...');
              this.updateMonthDisplay();
              this.renderCalendarDates();

              // 統計の表示を少し遅延させて確実に実行
              setTimeout(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee8() {
                return _regenerator().w(function (_context8) {
                  while (1) switch (_context8.n) {
                    case 0:
                      _context8.n = 1;
                      return _this5.renderMonthlyStats();
                    case 1:
                      _context8.n = 2;
                      return _this5.renderMuscleStats();
                    case 2:
                      return _context8.a(2);
                  }
                }, _callee8);
              })), 100);
            case 1:
              return _context9.a(2);
          }
        }, _callee9, this);
      }));
      function renderCalendar() {
        return _renderCalendar.apply(this, arguments);
      }
      return renderCalendar;
    }()
    /**
     * 月表示を更新
     */
    )
  }, {
    key: "updateMonthDisplay",
    value: function updateMonthDisplay() {
      var monthElement = document.getElementById('current-month');
      if (!monthElement) {
        return;
      }
      var year = this.currentDate.getFullYear();
      var month = this.currentDate.getMonth() + 1;
      monthElement.textContent = "".concat(year, "\u5E74").concat(month, "\u6708");
    }

    /**
     * カレンダーの日付をレンダリング
     */
  }, {
    key: "renderCalendarDates",
    value: function renderCalendarDates() {
      var _this6 = this;
      var datesContainer = (0, _helpers.safeGetElement)('#calendar-dates');
      var loadingElement = (0, _helpers.safeGetElement)('#calendar-loading');
      if (!datesContainer) {
        console.error('Calendar dates container not found');
        // 少し遅延してから再試行
        setTimeout(function () {
          var retryContainer = (0, _helpers.safeGetElement)('#calendar-dates');
          if (retryContainer) {
            console.log('Calendar dates container found on retry');
            _this6.renderCalendarDates();
          } else {
            console.error('Calendar dates container still not found after retry');
          }
        }, 200);
        return;
      }

      // ローディング表示
      if (this.isLoading && loadingElement) {
        loadingElement.classList.remove('hidden');
        return;
      } else if (loadingElement) {
        loadingElement.classList.add('hidden');
      }
      var year = this.currentDate.getFullYear();
      var month = this.currentDate.getMonth();

      // 月の最初の日
      var firstDay = new Date(year, month, 1);

      // 最初の週の開始日（日曜日から）
      var startDate = new Date(firstDay);
      startDate.setDate(startDate.getDate() - firstDay.getDay());
      var dates = [];
      var currentDate = new Date(startDate);

      // 6週間分の日付を生成
      for (var week = 0; week < 6; week++) {
        for (var day = 0; day < 7; day++) {
          var dateStr = this.formatDateString(currentDate);
          var workouts = this.getWorkoutsForDate(dateStr);
          var plannedWorkouts = this.getPlannedWorkoutsForDate(dateStr);
          var isCurrentMonth = currentDate.getMonth() === month;
          var isToday = this.isToday(currentDate);
          var isFuture = (0, _helpers.isFutureDate)(dateStr);
          var isPast = (0, _helpers.isPastDate)(dateStr);
          var isSunday = currentDate.getDay() === 0;
          var isSaturday = currentDate.getDay() === 6;
          dates.push({
            date: new Date(currentDate),
            dateStr: dateStr,
            day: currentDate.getDate(),
            workouts: workouts,
            plannedWorkouts: plannedWorkouts,
            isCurrentMonth: isCurrentMonth,
            isToday: isToday,
            isFuture: isFuture,
            isPast: isPast,
            isSunday: isSunday,
            isSaturday: isSaturday
          });
          currentDate.setDate(currentDate.getDate() + 1);
        }
      }

      // 日付セルをレンダリング
      datesContainer.innerHTML = dates.map(function (dateInfo) {
        // 実際のワークアウトドット
        var workoutDots = dateInfo.workouts.map(function (workout) {
          var muscles = Array.isArray(workout.muscle_groups) ? workout.muscle_groups : [workout.muscle_groups || 'chest'];
          return muscles.map(function (muscle) {
            var _workout$exercises;
            var color = (0, _helpers.getMuscleColor)(muscle);
            return "<div class=\"workout-dot ".concat(color, "\" title=\"").concat(muscle, " - ").concat(((_workout$exercises = workout.exercises) === null || _workout$exercises === void 0 ? void 0 : _workout$exercises.length) || 0, "\u7A2E\u76EE\"></div>");
          }).join('');
        }).join('');

        // 予定されたワークアウトドット
        var plannedDots = dateInfo.plannedWorkouts.map(function (workout) {
          var muscles = Array.isArray(workout.muscle_groups) ? workout.muscle_groups : [workout.muscle_groups || 'chest'];
          return muscles.map(function (muscle) {
            var color = (0, _helpers.getMuscleColor)(muscle);
            return "<div class=\"workout-dot ".concat(color, " opacity-50\" title=\"\u4E88\u5B9A: ").concat(muscle, "\"></div>");
          }).join('');
        }).join('');

        // セルの背景色とスタイル
        var cellClasses = 'calendar-date-cell';
        if (!dateInfo.isCurrentMonth) {
          cellClasses += ' other-month';
        } else if (dateInfo.isToday) {
          cellClasses += ' today';
        }

        // 日曜日と土曜日の色分け
        var dayTextColor = dateInfo.isCurrentMonth ? 'text-gray-800' : 'text-gray-400';
        if (dateInfo.isToday) {
          dayTextColor = 'text-blue-600 font-bold';
        } else if (dateInfo.isSunday && dateInfo.isCurrentMonth) {
          dayTextColor = 'text-red-500';
        } else if (dateInfo.isSaturday && dateInfo.isCurrentMonth) {
          dayTextColor = 'text-blue-500';
        }
        return "\n                <div class=\"".concat(cellClasses, "\" data-date=\"").concat(dateInfo.dateStr, "\">\n                    <div class=\"date-number ").concat(dayTextColor, "\">\n                        ").concat(dateInfo.day, "\n                    </div>\n                    <div class=\"workout-dots\">\n                        ").concat(workoutDots, "\n                        ").concat(plannedDots, "\n                    </div>\n                    ").concat(dateInfo.workouts.length > 0 || dateInfo.plannedWorkouts.length > 0 ? "\n                        <div class=\"text-xs text-gray-500 mt-1 truncate\">\n                            ".concat(dateInfo.workouts.length > 0 ? "".concat(dateInfo.workouts.length, "\u4EF6") : '', "\n                            ").concat(dateInfo.plannedWorkouts.length > 0 ? " \u4E88".concat(dateInfo.plannedWorkouts.length, "\u4EF6") : '', "\n                        </div>\n                    ") : '', "\n                    ").concat(dateInfo.workouts.length > 0 ? "\n                        <div class=\"text-xs text-gray-400 mt-1\">\n                            ".concat(Math.floor(dateInfo.workouts.reduce(function (sum, w) {
          return sum + (w.duration || 0);
        }, 0) / 60), "\u5206\n                        </div>\n                    ") : '', "\n                </div>\n            ");
      }).join('');

      // 日付セルのクリックイベント
      document.querySelectorAll('.calendar-date-cell').forEach(function (cell) {
        cell.addEventListener('click', function () {
          var dateStr = cell.dataset.date;
          _this6.selectDate(dateStr);
        });
      });
    }

    /**
     * 指定日のワークアウトを取得
     * @param {string} dateStr - 日付文字列 (YYYY-MM-DD)
     * @returns {Array} ワークアウト配列
     */
  }, {
    key: "getWorkoutsForDate",
    value: function getWorkoutsForDate(dateStr) {
      var _this7 = this;
      return this.workoutData.filter(function (workout) {
        var workoutDate = workout.date || workout.startTime || workout.workout_date;
        if (!workoutDate) {
          return false;
        }
        var date = new Date(workoutDate);
        return _this7.formatDateString(date) === dateStr;
      });
    }

    /**
     * 指定日の予定されたワークアウトを取得
     * @param {string} dateStr - 日付文字列 (YYYY-MM-DD)
     * @returns {Array} 予定されたワークアウト配列
     */
  }, {
    key: "getPlannedWorkoutsForDate",
    value: function getPlannedWorkoutsForDate(dateStr) {
      var _this8 = this;
      return this.plannedWorkouts.filter(function (workout) {
        var plannedDate = workout.planned_date || workout.date;
        if (!plannedDate) {
          return false;
        }
        var date = new Date(plannedDate);
        return _this8.formatDateString(date) === dateStr;
      });
    }

    /**
     * 日付を選択してモーダルを表示
     * @param {string} dateStr - 日付文字列
     */
  }, {
    key: "selectDate",
    value: function selectDate(dateStr) {
      this.selectedDate = dateStr;
      var workouts = this.getWorkoutsForDate(dateStr);
      var plannedWorkouts = this.getPlannedWorkoutsForDate(dateStr);

      // 既存のモーダルを削除
      var existingModal = document.getElementById('calendar-modal');
      if (existingModal) {
        existingModal.remove();
      }

      // 新しいモーダルを作成
      var modalHTML = (0, _helpers.createCalendarModalHTML)(dateStr, workouts, plannedWorkouts);
      document.body.insertAdjacentHTML('beforeend', modalHTML);

      // モーダルのクリックイベント（背景クリックで閉じる）
      var modal = document.getElementById('calendar-modal');
      if (modal) {
        modal.addEventListener('click', function (e) {
          if (e.target === modal) {
            modal.remove();
          }
        });

        // ESCキーで閉じる
        var _handleEscape = function handleEscape(e) {
          if (e.key === 'Escape') {
            modal.remove();
            document.removeEventListener('keydown', _handleEscape);
          }
        };
        document.addEventListener('keydown', _handleEscape);
      }
    }

    /**
     * 部位別統計を計算
     * @param {Object} muscleGroups - 筋肉部位別カウント
     * @param {Object} muscleGroupDuration - 部位別時間データ
     * @param {Object} muscleGroupSets - 部位別セット数データ
     * @returns {Object} 部位別統計データ
     */
  }, {
    key: "calculateMuscleGroupStats",
    value: function calculateMuscleGroupStats(muscleGroups) {
      var muscleGroupDuration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var muscleGroupSets = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var muscleGroupNames = {
        chest: '胸',
        back: '背中',
        shoulders: '肩',
        arms: '腕',
        legs: '脚',
        core: '腹筋'
      };
      var stats = {};
      Object.entries(muscleGroups).forEach(function (_ref5) {
        var _ref6 = _slicedToArray(_ref5, 2),
          muscleGroup = _ref6[0],
          count = _ref6[1];
        var displayName = muscleGroupNames[muscleGroup] || muscleGroup;
        var duration = Math.round(muscleGroupDuration[muscleGroup] || 0);
        var sets = muscleGroupSets[muscleGroup] || 0;
        stats[muscleGroup] = {
          name: displayName,
          count: count,
          duration: duration,
          sets: sets,
          percentage: 0 // 後で計算
        };
      });

      // パーセンテージを計算
      var totalCount = Object.values(stats).reduce(function (sum, stat) {
        return sum + stat.count;
      }, 0);
      Object.values(stats).forEach(function (stat) {
        stat.percentage = totalCount > 0 ? Math.round(stat.count / totalCount * 100) : 0;
      });
      return stats;
    }

    /**
     * 部位別統計をレンダリング
     * @param {Object} muscleGroupStats - 部位別統計データ
     */
  }, {
    key: "renderMuscleGroupStats",
    value: (function () {
      var _renderMuscleGroupStats = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee0(muscleGroupStats) {
        var muscleStatsContainer, muscleGroupColors;
        return _regenerator().w(function (_context0) {
          while (1) switch (_context0.n) {
            case 0:
              muscleStatsContainer = document.getElementById('muscle-stats');
              if (muscleStatsContainer) {
                _context0.n = 1;
                break;
              }
              console.log('Muscle stats container not found');
              return _context0.a(2);
            case 1:
              if (!(Object.keys(muscleGroupStats).length === 0)) {
                _context0.n = 2;
                break;
              }
              muscleStatsContainer.innerHTML = "\n        <div class=\"text-center col-span-6\">\n          <div class=\"text-gray-500\">\n            <i class=\"fas fa-info-circle mr-2\"></i>\n            \u90E8\u4F4D\u5225\u7D71\u8A08\u30C7\u30FC\u30BF\u304C\u3042\u308A\u307E\u305B\u3093\n          </div>\n        </div>\n      ";
              return _context0.a(2);
            case 2:
              muscleGroupColors = {
                chest: 'bg-red-50 text-red-600',
                back: 'bg-blue-50 text-blue-600',
                shoulders: 'bg-green-50 text-green-600',
                arms: 'bg-yellow-50 text-yellow-600',
                legs: 'bg-purple-50 text-purple-600',
                core: 'bg-pink-50 text-pink-600'
              };
              muscleStatsContainer.innerHTML = Object.entries(muscleGroupStats).sort(function (_ref7, _ref8) {
                var _ref9 = _slicedToArray(_ref7, 2),
                  a = _ref9[1];
                var _ref0 = _slicedToArray(_ref8, 2),
                  b = _ref0[1];
                return b.count - a.count;
              }).map(function (_ref1) {
                var _ref10 = _slicedToArray(_ref1, 2),
                  muscleGroup = _ref10[0],
                  stat = _ref10[1];
                var colorClass = muscleGroupColors[muscleGroup] || 'bg-gray-50 text-gray-600';
                return "\n          <div class=\"text-center p-3 ".concat(colorClass, " rounded-lg relative group\">\n            <div class=\"text-xl font-bold\">\n              ").concat(stat.count, "\n            </div>\n            <div class=\"text-sm\">\n              ").concat(stat.name, "\n            </div>\n            <div class=\"text-xs mt-1 opacity-75\">\n              ").concat(stat.percentage, "%\n            </div>\n            <div class=\"text-xs mt-1 opacity-60\">\n              ").concat(stat.duration, "\u5206\n            </div>\n            <div class=\"text-xs mt-1 opacity-60\">\n              ").concat(stat.sets, "\u30BB\u30C3\u30C8\n            </div>\n            <div class=\"absolute top-1 right-1 opacity-0 group-hover:opacity-100 transition-opacity\">\n              <i class=\"fas fa-info-circle text-xs cursor-help\" \n                 title=\"\u56DE\u6570: ").concat(stat.count, "\u56DE, \u6642\u9593: ").concat(stat.duration, "\u5206, \u30BB\u30C3\u30C8\u6570: ").concat(stat.sets, "\u30BB\u30C3\u30C8\"></i>\n            </div>\n          </div>\n        ");
              }).join('');
            case 3:
              return _context0.a(2);
          }
        }, _callee0);
      }));
      function renderMuscleGroupStats(_x) {
        return _renderMuscleGroupStats.apply(this, arguments);
      }
      return renderMuscleGroupStats;
    }()
    /**
     * 月間統計をレンダリング
     */
    )
  }, {
    key: "renderMonthlyStats",
    value: (function () {
      var _renderMonthlyStats = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee1() {
        var statsContainer, year, month, stats, muscleGroupStats, _t4;
        return _regenerator().w(function (_context1) {
          while (1) switch (_context1.p = _context1.n) {
            case 0:
              statsContainer = document.getElementById('monthly-stats');
              if (statsContainer) {
                _context1.n = 1;
                break;
              }
              console.log('Monthly stats container not found');
              return _context1.a(2);
            case 1:
              year = this.currentDate.getFullYear();
              month = this.currentDate.getMonth();
              _context1.p = 2;
              console.log("Calculating stats for ".concat(year, "-").concat(month + 1));

              // ワークアウトデータサービスから統計を取得
              _context1.n = 3;
              return _workoutDataService.workoutDataService.getMonthlyStats(year, month);
            case 3:
              stats = _context1.v;
              console.log('Monthly stats:', stats);

              // データが無い場合の表示
              if (!(stats.totalWorkouts === 0)) {
                _context1.n = 4;
                break;
              }
              statsContainer.innerHTML = "\n            <div class=\"text-center col-span-4\">\n                <div class=\"text-gray-500\">\n                    <i class=\"fas fa-info-circle mr-2\"></i>\n                    \u3053\u306E\u6708\u306E\u30EF\u30FC\u30AF\u30A2\u30A6\u30C8\u30C7\u30FC\u30BF\u304C\u3042\u308A\u307E\u305B\u3093\n                </div>\n            </div>\n        ";
              return _context1.a(2);
            case 4:
              // 部位別統計を計算（時間とセット数も含む）
              muscleGroupStats = this.calculateMuscleGroupStats(stats.muscleGroups, stats.muscleGroupDuration, stats.muscleGroupSets);
              statsContainer.innerHTML = "\n            <div class=\"text-center p-4 bg-blue-50 rounded-lg\">\n                <div class=\"text-2xl font-bold text-blue-600\">".concat(stats.totalWorkouts, "</div>\n                <div class=\"text-sm text-gray-600\">\u7DCF\u30EF\u30FC\u30AF\u30A2\u30A6\u30C8\u6570</div>\n            </div>\n            <div class=\"text-center p-4 bg-green-50 rounded-lg\">\n                <div class=\"text-2xl font-bold text-green-600\">").concat(stats.workoutDaysCount, "</div>\n                <div class=\"text-sm text-gray-600\">\u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u65E5\u6570</div>\n            </div>\n            <div class=\"text-center p-4 bg-purple-50 rounded-lg\">\n                <div class=\"text-2xl font-bold text-purple-600\">\n                    ").concat(Math.floor(stats.totalDuration / 3600), "h ").concat(Math.floor(stats.totalDuration % 3600 / 60), "m\n                </div>\n                <div class=\"text-sm text-gray-600\">\u7DCF\u6642\u9593</div>\n            </div>\n            <div class=\"text-center p-4 bg-orange-50 rounded-lg\">\n                <div class=\"text-2xl font-bold text-orange-600\">").concat(Math.floor(stats.averageDuration / 60), "\u5206</div>\n                <div class=\"text-sm text-gray-600\">\u5E73\u5747\u6642\u9593</div>\n            </div>\n        ");

              // 部位別統計を表示
              _context1.n = 5;
              return this.renderMuscleGroupStats(muscleGroupStats);
            case 5:
              _context1.n = 7;
              break;
            case 6:
              _context1.p = 6;
              _t4 = _context1.v;
              console.error('Error rendering monthly stats:', _t4);
              statsContainer.innerHTML = "\n            <div class=\"text-center col-span-4\">\n                <div class=\"text-red-500\">\n                    <i class=\"fas fa-exclamation-triangle mr-2\"></i>\n                    \u7D71\u8A08\u30C7\u30FC\u30BF\u306E\u8AAD\u307F\u8FBC\u307F\u306B\u5931\u6557\u3057\u307E\u3057\u305F\n                </div>\n            </div>\n        ";
            case 7:
              return _context1.a(2);
          }
        }, _callee1, this, [[2, 6]]);
      }));
      function renderMonthlyStats() {
        return _renderMonthlyStats.apply(this, arguments);
      }
      return renderMonthlyStats;
    }()
    /**
     * 部位別統計をレンダリング
     */
    )
  }, {
    key: "renderMuscleStats",
    value: (function () {
      var _renderMuscleStats = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee10() {
        var statsContainer, year, month, muscleStats, _t5;
        return _regenerator().w(function (_context10) {
          while (1) switch (_context10.p = _context10.n) {
            case 0:
              statsContainer = document.getElementById('muscle-stats');
              if (statsContainer) {
                _context10.n = 1;
                break;
              }
              console.log('Muscle stats container not found');
              return _context10.a(2);
            case 1:
              year = this.currentDate.getFullYear();
              month = this.currentDate.getMonth();
              _context10.p = 2;
              console.log("Calculating muscle stats for ".concat(year, "-").concat(month + 1));

              // ワークアウトデータサービスから部位別統計を取得
              _context10.n = 3;
              return _workoutDataService.workoutDataService.getMuscleGroupStats(year, month);
            case 3:
              muscleStats = _context10.v;
              console.log('Muscle stats:', muscleStats);

              // MUSCLE_GROUPSの順序で表示
              statsContainer.innerHTML = _constants.MUSCLE_GROUPS.map(function (group) {
                var stats = muscleStats[group.id] || {
                  count: 0,
                  totalDuration: 0,
                  exercises: []
                };
                return "\n            <div class=\"text-center p-3 ".concat(group.bgColor, " rounded-lg hover:shadow-md transition-shadow\">\n                <div class=\"text-xl font-bold ").concat(group.textColor, "\">\n                    ").concat(stats.count, "\n                </div>\n                <div class=\"text-sm ").concat(group.textColor, " font-medium\">\n                    ").concat(group.name, "\n                </div>\n                ").concat(stats.count > 0 ? "\n                    <div class=\"text-xs ".concat(group.textColor, " opacity-75 mt-1\">\n                        ").concat(Math.floor(stats.totalDuration / 60), "\u5206\n                    </div>\n                ") : "\n                    <div class=\"text-xs ".concat(group.textColor, " opacity-50 mt-1\">\n                        \u672A\u5B9F\u65BD\n                    </div>\n                "), "\n            </div>\n        ");
              }).join('');
              _context10.n = 5;
              break;
            case 4:
              _context10.p = 4;
              _t5 = _context10.v;
              console.error('Error rendering muscle stats:', _t5);
              statsContainer.innerHTML = "\n            <div class=\"text-center col-span-6\">\n                <div class=\"text-red-500\">\n                    <i class=\"fas fa-exclamation-triangle mr-2\"></i>\n                    \u90E8\u4F4D\u5225\u7D71\u8A08\u306E\u8AAD\u307F\u8FBC\u307F\u306B\u5931\u6557\u3057\u307E\u3057\u305F\n                </div>\n            </div>\n        ";
            case 5:
              return _context10.a(2);
          }
        }, _callee10, this, [[2, 4]]);
      }));
      function renderMuscleStats() {
        return _renderMuscleStats.apply(this, arguments);
      }
      return renderMuscleStats;
    }()
    /**
     * 日付を文字列にフォーマット
     * @param {Date} date - 日付オブジェクト
     * @returns {string} YYYY-MM-DD形式の文字列
     */
    )
  }, {
    key: "formatDateString",
    value: function formatDateString(date) {
      var year = date.getFullYear();
      var month = String(date.getMonth() + 1).padStart(2, '0');
      var day = String(date.getDate()).padStart(2, '0');
      return "".concat(year, "-").concat(month, "-").concat(day);
    }

    /**
     * 今日かどうかチェック
     * @param {Date} date - チェックする日付
     * @returns {boolean} 今日かどうか
     */
  }, {
    key: "isToday",
    value: function isToday(date) {
      var today = new Date();
      return this.formatDateString(date) === this.formatDateString(today);
    }

    /**
     * 予定されたワークアウトを追加
     * @param {string} dateStr - 日付文字列
     * @param {Object} workoutData - ワークアウトデータ
     */
  }, {
    key: "addPlannedWorkout",
    value: (function () {
      var _addPlannedWorkout = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee11(dateStr, workoutData) {
        var plannedWorkout;
        return _regenerator().w(function (_context11) {
          while (1) switch (_context11.n) {
            case 0:
              try {
                plannedWorkout = {
                  id: "planned_".concat(Date.now()),
                  planned_date: dateStr,
                  name: workoutData.name || 'トレーニング予定',
                  muscle_groups: workoutData.muscle_groups || ['chest'],
                  created_at: new Date().toISOString()
                };
                this.plannedWorkouts.push(plannedWorkout);

                // ローカルストレージに保存
                localStorage.setItem('plannedWorkouts', JSON.stringify(this.plannedWorkouts));

                // カレンダーを再描画
                this.renderCalendar();
                (0, _helpers.showNotification)('トレーニング予定を追加しました', 'success');
              } catch (error) {
                console.error('Error adding planned workout:', error);
                (0, _helpers.showNotification)('予定の追加に失敗しました', 'error');
              }
            case 1:
              return _context11.a(2);
          }
        }, _callee11, this);
      }));
      function addPlannedWorkout(_x2, _x3) {
        return _addPlannedWorkout.apply(this, arguments);
      }
      return addPlannedWorkout;
    }()
    /**
     * 予定されたワークアウトを削除
     * @param {string} plannedWorkoutId - 予定ID
     */
    )
  }, {
    key: "removePlannedWorkout",
    value: (function () {
      var _removePlannedWorkout = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee12(plannedWorkoutId) {
        return _regenerator().w(function (_context12) {
          while (1) switch (_context12.n) {
            case 0:
              try {
                this.plannedWorkouts = this.plannedWorkouts.filter(function (workout) {
                  return workout.id !== plannedWorkoutId;
                });

                // ローカルストレージを更新
                localStorage.setItem('plannedWorkouts', JSON.stringify(this.plannedWorkouts));

                // カレンダーを再描画
                this.renderCalendar();
                (0, _helpers.showNotification)('予定を削除しました', 'success');
              } catch (error) {
                console.error('Error removing planned workout:', error);
                (0, _helpers.showNotification)('予定の削除に失敗しました', 'error');
              }
            case 1:
              return _context12.a(2);
          }
        }, _callee12, this);
      }));
      function removePlannedWorkout(_x4) {
        return _removePlannedWorkout.apply(this, arguments);
      }
      return removePlannedWorkout;
    }())
  }]);
}(_BasePage2.BasePage); // グローバル関数として予定追加機能を公開
window.addPlannedWorkout = /*#__PURE__*/function () {
  var _ref11 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee13(dateStr) {
    var workoutName, muscleGroups, muscles, calendarPage, modal;
    return _regenerator().w(function (_context13) {
      while (1) switch (_context13.n) {
        case 0:
          _context13.n = 1;
          return (0, _helpers.showInputDialog)('トレーニング名を入力してください:', 'トレーニング');
        case 1:
          workoutName = _context13.v;
          if (workoutName) {
            _context13.n = 2;
            break;
          }
          return _context13.a(2);
        case 2:
          _context13.n = 3;
          return (0, _helpers.showInputDialog)('対象部位を入力してください (例: chest,back):', 'chest');
        case 3:
          muscleGroups = _context13.v;
          muscles = muscleGroups ? muscleGroups.split(',').map(function (m) {
            return m.trim();
          }) : ['chest'];
          calendarPage = window.calendarPageInstance;
          if (calendarPage) {
            calendarPage.addPlannedWorkout(dateStr, {
              name: workoutName,
              muscle_groups: muscles
            });

            // モーダルを閉じる
            modal = document.getElementById('calendar-modal');
            if (modal) {
              modal.remove();
            }
          }
        case 4:
          return _context13.a(2);
      }
    }, _callee13);
  }));
  return function (_x5) {
    return _ref11.apply(this, arguments);
  };
}();

// ページが読み込まれた時に自動初期化
document.addEventListener('DOMContentLoaded', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee14() {
  var calendarPage;
  return _regenerator().w(function (_context14) {
    while (1) switch (_context14.n) {
      case 0:
        console.log('Calendar page DOM loaded');
        calendarPage = new CalendarPage();
        _context14.n = 1;
        return calendarPage.initialize();
      case 1:
        window.calendarPageInstance = calendarPage;
      case 2:
        return _context14.a(2);
    }
  }, _callee14);
})));
var _default = exports["default"] = new CalendarPage();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,