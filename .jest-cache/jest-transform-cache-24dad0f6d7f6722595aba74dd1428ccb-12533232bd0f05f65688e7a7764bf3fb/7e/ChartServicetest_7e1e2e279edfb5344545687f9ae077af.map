{"version":3,"names":["_getJestObj","mock","handleError","jest","fn","_chartService","require","_require","mockChart","destroy","resize","update","data","options","global","Chart","describe","service","mockCanvas","beforeEach","getContext","fillRect","clearRect","document","getElementById","chartService","afterEach","clearAllMocks","it","expect","charts","toBeInstanceOf","Map","defaultColors","toEqual","primary","secondary","accent","danger","success","warning","chartId","set","destroyChart","toHaveBeenCalled","has","toBe","not","canvasId","workout_date","one_rm","result","createOneRMChart","toHaveBeenCalledWith","toBeDefined","mockReturnValue","toBeNull","date","value","createProgressChart","chart1","chart2","clear","size","destroyAllCharts","newData","labels","datasets","updateChart","getChart"],"sources":["ChartService.test.js"],"sourcesContent":["// tests/unit/ChartService.test.js - ChartServiceのテスト\n\nimport { chartService } from '../../js/services/chartService.js';\n\n// Chart.jsのモック\nconst mockChart = {\n  destroy: jest.fn(),\n  resize: jest.fn(),\n  update: jest.fn(),\n  data: {},\n  options: {},\n};\n\n// Chart.jsのコンストラクタをモック\nglobal.Chart = jest.fn(() => mockChart);\n\n// モック設定\njest.mock('../../js/utils/errorHandler.js', () => ({\n  handleError: jest.fn(),\n}));\n\ndescribe('ChartService', () => {\n  let service;\n  let mockCanvas;\n\n  beforeEach(() => {\n    // モックキャンバス要素\n    mockCanvas = {\n      getContext: jest.fn(() => ({\n        fillRect: jest.fn(),\n        clearRect: jest.fn(),\n      })),\n    };\n\n    // document.getElementByIdのモック\n    global.document = {\n      getElementById: jest.fn(() => mockCanvas),\n    };\n\n    // getElementByIdをモック関数として設定\n    global.document.getElementById = jest.fn(() => mockCanvas);\n\n    service = chartService;\n  });\n\n  afterEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('constructor', () => {\n    it('should initialize with default values', () => {\n      expect(service.charts).toBeInstanceOf(Map);\n      expect(service.defaultColors).toEqual({\n        primary: '#3B82F6',\n        secondary: '#10B981',\n        accent: '#F59E0B',\n        danger: '#EF4444',\n        success: '#22C55E',\n        warning: '#F97316',\n      });\n    });\n  });\n\n  describe('destroyChart', () => {\n    it('should destroy existing chart', () => {\n      const chartId = 'test-chart';\n      service.charts.set(chartId, mockChart);\n\n      service.destroyChart(chartId);\n\n      expect(mockChart.destroy).toHaveBeenCalled();\n      expect(service.charts.has(chartId)).toBe(false);\n    });\n\n    it('should handle non-existent chart', () => {\n      service.destroyChart('non-existent');\n\n      expect(mockChart.destroy).not.toHaveBeenCalled();\n    });\n  });\n\n  describe('createOneRMChart', () => {\n    it('should create 1RM chart successfully', () => {\n      const canvasId = 'one-rm-chart';\n      const data = [\n        { workout_date: '2024-01-01', one_rm: 100 },\n        { workout_date: '2024-01-02', one_rm: 105 },\n      ];\n\n      const result = service.createOneRMChart(canvasId, data);\n\n      expect(global.document.getElementById).toHaveBeenCalledWith(canvasId);\n      expect(global.Chart).toHaveBeenCalled();\n      expect(service.charts.has(canvasId)).toBe(true);\n      expect(result).toBeDefined();\n    });\n\n    it('should handle missing canvas element', () => {\n      global.document.getElementById.mockReturnValue(null);\n\n      const result = service.createOneRMChart('missing-canvas', []);\n\n      expect(result).toBeNull();\n    });\n  });\n\n  describe('createProgressChart', () => {\n    it('should create progress chart successfully', () => {\n      const canvasId = 'progress-chart';\n      const data = [\n        { date: '2024-01-01', value: 100 },\n        { date: '2024-01-02', value: 105 },\n      ];\n\n      const result = service.createProgressChart(canvasId, data);\n\n      expect(global.document.getElementById).toHaveBeenCalledWith(canvasId);\n      expect(global.Chart).toHaveBeenCalled();\n      expect(service.charts.has(canvasId)).toBe(true);\n      expect(result).toBeDefined();\n    });\n  });\n\n  describe('destroyAllCharts', () => {\n    it('should destroy all charts', () => {\n      const chart1 = { destroy: jest.fn() };\n      const chart2 = { destroy: jest.fn() };\n\n      // 既存のチャートをクリア\n      service.charts.clear();\n\n      // チャートを直接追加\n      service.charts.set('chart1', chart1);\n      service.charts.set('chart2', chart2);\n\n      // チャートが追加されたことを確認\n      expect(service.charts.size).toBe(2);\n\n      service.destroyAllCharts();\n\n      expect(chart1.destroy).toHaveBeenCalled();\n      expect(chart2.destroy).toHaveBeenCalled();\n      expect(service.charts.size).toBe(0);\n    });\n  });\n\n  describe('updateChart', () => {\n    it('should update existing chart', () => {\n      const chartId = 'test-chart';\n      const newData = { labels: ['A', 'B'], datasets: [] };\n      service.charts.set(chartId, mockChart);\n\n      service.updateChart(chartId, newData);\n\n      expect(mockChart.data).toBe(newData);\n      expect(mockChart.update).toHaveBeenCalled();\n    });\n  });\n\n  describe('getChart', () => {\n    it('should return existing chart', () => {\n      const chartId = 'test-chart';\n      service.charts.set(chartId, mockChart);\n\n      const result = service.getChart(chartId);\n\n      expect(result).toBeDefined();\n    });\n\n    it('should return null for non-existent chart', () => {\n      const result = service.getChart('non-existent');\n\n      expect(result).toBeNull();\n    });\n  });\n});\n"],"mappings":"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","ignoreList":[]}