6a0af641118b4fe332ebbf41f7dff6fe
"use strict";

var _globals = require("@jest/globals");
var _Navigation = require("../../js/components/Navigation.js");
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; } // tests/unit/navigation.test.js - ナビゲーションリンクのテスト（最小版）
// モック設定
global.fetch = _globals.jest.fn();
global.window = {
  location: {
    pathname: '/muscle-rotation-manager/index.html',
    href: 'https://appadaycreator.github.io/muscle-rotation-manager/index.html',
    assign: _globals.jest.fn()
  },
  innerWidth: 1024,
  innerHeight: 768
};

// Navigation.jsをインポート

describe('Navigation Component', function () {
  var navigation;
  beforeEach(function () {
    navigation = new _Navigation.Navigation();
    _globals.jest.clearAllMocks();
  });
  describe('ナビゲーションアイテムのリンク', function () {
    test('全てのナビゲーションアイテムが相対パスを使用している', function () {
      var navigationItems = navigation.navigationItems;
      navigationItems.forEach(function (item) {
        // 絶対パス（/で始まる）を使用していないことを確認
        expect(item.href).not.toMatch(/^\/.*$/);
        // 相対パスまたはファイル名のみであることを確認
        expect(item.href).toMatch(/^[^\/].*\.html$/);
      });
    });
    test('ダッシュボードリンクが正しい', function () {
      var dashboardItem = navigation.navigationItems.find(function (item) {
        return item.id === 'dashboard';
      });
      expect(dashboardItem.href).toBe('index.html');
    });
    test('ワークアウトリンクが正しい', function () {
      var workoutItem = navigation.navigationItems.find(function (item) {
        return item.id === 'workout';
      });
      expect(workoutItem.href).toBe('workout.html');
    });
    test('カレンダーリンクが正しい', function () {
      var calendarItem = navigation.navigationItems.find(function (item) {
        return item.id === 'calendar';
      });
      expect(calendarItem.href).toBe('calendar.html');
    });
    test('分析リンクが正しい', function () {
      var analysisItem = navigation.navigationItems.find(function (item) {
        return item.id === 'analysis';
      });
      expect(analysisItem.href).toBe('analysis.html');
    });
    test('プログレッシブ・オーバーロードリンクが正しい', function () {
      var progressItem = navigation.navigationItems.find(function (item) {
        return item.id === 'progress';
      });
      expect(progressItem.href).toBe('progress.html');
    });
    test('エクササイズデータベースリンクが正しい', function () {
      var exercisesItem = navigation.navigationItems.find(function (item) {
        return item.id === 'exercises';
      });
      expect(exercisesItem.href).toBe('exercises.html');
    });
    test('設定リンクが正しい', function () {
      var settingsItem = navigation.navigationItems.find(function (item) {
        return item.id === 'settings';
      });
      expect(settingsItem.href).toBe('settings.html');
    });
    test('ヘルプリンクが正しい', function () {
      var helpItem = navigation.navigationItems.find(function (item) {
        return item.id === 'help';
      });
      expect(helpItem.href).toBe('help.html');
    });
    test('プライバシーポリシーリンクが正しい', function () {
      var privacyItem = navigation.navigationItems.find(function (item) {
        return item.id === 'privacy';
      });
      expect(privacyItem.href).toBe('privacy.html');
    });
  });
  describe('現在のページ取得', function () {
    test('GitHub Pagesのパスを正しく認識する', function () {
      // パス名を直接設定してテスト
      var originalPathname = window.location.pathname;
      delete window.location.pathname;
      window.location.pathname = '/muscle-rotation-manager/index.html';
      var currentPage = navigation.getCurrentPage();
      expect(currentPage).toBe('index');

      // 元に戻す
      window.location.pathname = originalPathname;
    });
    test('ルートパスを正しく認識する', function () {
      // パス名を直接設定してテスト
      var originalPathname = window.location.pathname;
      delete window.location.pathname;
      window.location.pathname = '/';
      var currentPage = navigation.getCurrentPage();
      expect(currentPage).toBe('index');

      // 元に戻す
      window.location.pathname = originalPathname;
    });
    test('通常のパスを正しく認識する', function () {
      // パス名を直接設定してテスト
      var originalPathname = window.location.pathname;
      delete window.location.pathname;
      window.location.pathname = '/workout.html';
      var currentPage = navigation.getCurrentPage();
      expect(currentPage).toBe('workout');

      // 元に戻す
      window.location.pathname = originalPathname;
    });
  });
});
describe('HTMLファイルのリンク検証', function () {
  beforeEach(function () {
    // 各テスト前にfetchをリセット
    _globals.jest.clearAllMocks();
  });
  test('sidebar.htmlのリンクが相対パスである', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {
    var mockText, response, html, absoluteLinks, relativeLinks;
    return _regenerator().w(function (_context) {
      while (1) switch (_context.n) {
        case 0:
          // fetchをモック
          mockText = _globals.jest.fn().mockResolvedValue("\n      <a href=\"workout.html\">\u30EF\u30FC\u30AF\u30A2\u30A6\u30C8</a>\n      <a href=\"calendar.html\">\u30AB\u30EC\u30F3\u30C0\u30FC</a>\n      <a href=\"analysis.html\">\u5206\u6790</a>\n    ");
          global.fetch = _globals.jest.fn().mockResolvedValue({
            ok: true,
            text: mockText
          });
          _context.n = 1;
          return fetch('partials/sidebar.html');
        case 1:
          response = _context.v;
          expect(response.ok).toBe(true);
          _context.n = 2;
          return response.text();
        case 2:
          html = _context.v;
          // 絶対パス（/で始まる）のリンクがないことを確認
          absoluteLinks = html.match(/href="\/[^"]*\.html"/g);
          expect(absoluteLinks).toBeNull();

          // 相対パスのリンクがあることを確認
          relativeLinks = html.match(/href="[^\/][^"]*\.html"/g);
          expect(relativeLinks).not.toBeNull();
          expect(relativeLinks.length).toBeGreaterThan(0);
        case 3:
          return _context.a(2);
      }
    }, _callee);
  })));
  test('footer.htmlのリンクが相対パスである', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {
    var mockText, response, html, absoluteLinks, relativeLinks;
    return _regenerator().w(function (_context2) {
      while (1) switch (_context2.n) {
        case 0:
          // fetchをモック
          mockText = _globals.jest.fn().mockResolvedValue("\n      <a href=\"workout.html\">\u30EF\u30FC\u30AF\u30A2\u30A6\u30C8</a>\n      <a href=\"calendar.html\">\u30AB\u30EC\u30F3\u30C0\u30FC</a>\n      <a href=\"analysis.html\">\u5206\u6790</a>\n    ");
          global.fetch = _globals.jest.fn().mockResolvedValue({
            ok: true,
            text: mockText
          });
          _context2.n = 1;
          return fetch('partials/footer.html');
        case 1:
          response = _context2.v;
          expect(response.ok).toBe(true);
          _context2.n = 2;
          return response.text();
        case 2:
          html = _context2.v;
          // 絶対パス（/で始まる）のリンクがないことを確認
          absoluteLinks = html.match(/href="\/[^"]*\.html"/g);
          expect(absoluteLinks).toBeNull();

          // 相対パスのリンクがあることを確認
          relativeLinks = html.match(/href="[^\/][^"]*\.html"/g);
          expect(relativeLinks).not.toBeNull();
          expect(relativeLinks.length).toBeGreaterThan(0);
        case 3:
          return _context2.a(2);
      }
    }, _callee2);
  })));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,