5456fb43203dc004c07cdd5cb37cdfdc
"use strict";

// モックの設定
_getJestObj().mock('../../js/services/supabaseService.js', function () {
  return {
    supabaseService: {
      getCurrentUser: jest.fn(),
      loadData: jest.fn(),
      saveData: jest.fn()
    }
  };
});
_getJestObj().mock('../../js/modules/authManager.js', function () {
  return {
    authManager: {
      isAuthenticated: jest.fn(),
      showAuthModal: jest.fn()
    }
  };
});
_getJestObj().mock('../../js/utils/helpers.js', function () {
  return {
    showNotification: jest.fn(),
    safeGetElement: jest.fn(),
    safeAsync: jest.fn()
  };
});
_getJestObj().mock('../../js/utils/errorHandler.js', function () {
  return {
    handleError: jest.fn()
  };
});
_getJestObj().mock('../../js/utils/TooltipManager.js', function () {
  return {
    tooltipManager: {
      initialize: jest.fn(),
      addTooltip: jest.fn()
    }
  };
});
var _dashboardPage = _interopRequireDefault(require("../../js/pages/dashboardPage.js"));
var _supabaseService = require("../../js/services/supabaseService.js");
var _authManager = require("../../js/modules/authManager.js");
var _helpers = require("../../js/utils/helpers.js");
var _errorHandler = require("../../js/utils/errorHandler.js");
var _TooltipManager = require("../../js/utils/TooltipManager.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
/**
 * DashboardPage テストスイート
 */
describe('DashboardPage', function () {
  beforeEach(function () {
    jest.clearAllMocks();
    document.body.innerHTML = '<div id="main-content"></div>';
    _helpers.safeGetElement.mockReturnValue(document.querySelector('#main-content'));
  });
  describe('constructor', function () {
    it('should initialize with default values', function () {
      expect(_dashboardPage["default"].initialize).toBeDefined();
    });
  });
  describe('init', function () {
    it('should initialize successfully when authenticated', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {
      return _regenerator().w(function (_context2) {
        while (1) switch (_context2.n) {
          case 0:
            _helpers.safeAsync.mockImplementation(/*#__PURE__*/function () {
              var _ref2 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee(fn) {
                return _regenerator().w(function (_context) {
                  while (1) switch (_context.n) {
                    case 0:
                      _context.n = 1;
                      return fn();
                    case 1:
                      return _context.a(2, _context.v);
                  }
                }, _callee);
              }));
              return function (_x) {
                return _ref2.apply(this, arguments);
              };
            }());
            _context2.n = 1;
            return _dashboardPage["default"].initialize();
          case 1:
            expect(_dashboardPage["default"].initialize).toBeDefined();
          case 2:
            return _context2.a(2);
        }
      }, _callee2);
    })));
    it('should show login prompt when not authenticated', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {
      return _regenerator().w(function (_context4) {
        while (1) switch (_context4.n) {
          case 0:
            _helpers.safeAsync.mockImplementation(/*#__PURE__*/function () {
              var _ref4 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3(fn) {
                return _regenerator().w(function (_context3) {
                  while (1) switch (_context3.n) {
                    case 0:
                      _context3.n = 1;
                      return fn();
                    case 1:
                      return _context3.a(2, _context3.v);
                  }
                }, _callee3);
              }));
              return function (_x2) {
                return _ref4.apply(this, arguments);
              };
            }());
            _context4.n = 1;
            return _dashboardPage["default"].initialize();
          case 1:
            expect(_dashboardPage["default"].initialize).toBeDefined();
          case 2:
            return _context4.a(2);
        }
      }, _callee4);
    })));
    it('should handle initialization errors', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6() {
      return _regenerator().w(function (_context6) {
        while (1) switch (_context6.n) {
          case 0:
            _helpers.safeAsync.mockImplementation(/*#__PURE__*/function () {
              var _ref6 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5(fn) {
                return _regenerator().w(function (_context5) {
                  while (1) switch (_context5.n) {
                    case 0:
                      _context5.n = 1;
                      return fn();
                    case 1:
                      return _context5.a(2, _context5.v);
                  }
                }, _callee5);
              }));
              return function (_x3) {
                return _ref6.apply(this, arguments);
              };
            }());
            _context6.n = 1;
            return _dashboardPage["default"].initialize();
          case 1:
            expect(_dashboardPage["default"].initialize).toBeDefined();
          case 2:
            return _context6.a(2);
        }
      }, _callee6);
    })));
  });
  describe('loadDashboardData', function () {
    it('should load dashboard data successfully', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee8() {
      var mockData;
      return _regenerator().w(function (_context8) {
        while (1) switch (_context8.n) {
          case 0:
            mockData = {
              workouts: [],
              progress: [],
              recommendations: []
            };
            _authManager.authManager.isAuthenticated.mockResolvedValue(true);
            _supabaseService.supabaseService.loadData.mockResolvedValue(mockData);
            _helpers.safeAsync.mockImplementation(/*#__PURE__*/function () {
              var _ref8 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee7(fn) {
                return _regenerator().w(function (_context7) {
                  while (1) switch (_context7.n) {
                    case 0:
                      _context7.n = 1;
                      return fn();
                    case 1:
                      return _context7.a(2, _context7.v);
                  }
                }, _callee7);
              }));
              return function (_x4) {
                return _ref8.apply(this, arguments);
              };
            }());
            _context8.n = 1;
            return _dashboardPage["default"].initialize();
          case 1:
            expect(_dashboardPage["default"].initialize).toBeDefined();
          case 2:
            return _context8.a(2);
        }
      }, _callee8);
    })));
    it('should handle data loading errors', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee0() {
      return _regenerator().w(function (_context0) {
        while (1) switch (_context0.n) {
          case 0:
            _authManager.authManager.isAuthenticated.mockResolvedValue(true);
            _supabaseService.supabaseService.loadData.mockRejectedValue(new Error('Data loading failed'));
            _helpers.safeAsync.mockImplementation(/*#__PURE__*/function () {
              var _ref0 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee9(fn) {
                return _regenerator().w(function (_context9) {
                  while (1) switch (_context9.n) {
                    case 0:
                      _context9.n = 1;
                      return fn();
                    case 1:
                      return _context9.a(2, _context9.v);
                  }
                }, _callee9);
              }));
              return function (_x5) {
                return _ref0.apply(this, arguments);
              };
            }());
            _context0.n = 1;
            return _dashboardPage["default"].initialize();
          case 1:
            expect(_dashboardPage["default"].initialize).toBeDefined();
          case 2:
            return _context0.a(2);
        }
      }, _callee0);
    })));
  });
  describe('renderDashboard', function () {
    it('should render dashboard content', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee10() {
      var mainContent;
      return _regenerator().w(function (_context10) {
        while (1) switch (_context10.n) {
          case 0:
            _authManager.authManager.isAuthenticated.mockResolvedValue(true);
            _helpers.safeAsync.mockImplementation(/*#__PURE__*/function () {
              var _ref10 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee1(fn) {
                return _regenerator().w(function (_context1) {
                  while (1) switch (_context1.n) {
                    case 0:
                      _context1.n = 1;
                      return fn();
                    case 1:
                      return _context1.a(2, _context1.v);
                  }
                }, _callee1);
              }));
              return function (_x6) {
                return _ref10.apply(this, arguments);
              };
            }());
            _context10.n = 1;
            return _dashboardPage["default"].initialize();
          case 1:
            mainContent = document.querySelector('#main-content');
            expect(mainContent.innerHTML).toContain('ダッシュボード');
          case 2:
            return _context10.a(2);
        }
      }, _callee10);
    })));
  });
  describe('setupTooltips', function () {
    it('should setup tooltips', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee12() {
      return _regenerator().w(function (_context12) {
        while (1) switch (_context12.n) {
          case 0:
            _authManager.authManager.isAuthenticated.mockResolvedValue(true);
            _helpers.safeAsync.mockImplementation(/*#__PURE__*/function () {
              var _ref12 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee11(fn) {
                return _regenerator().w(function (_context11) {
                  while (1) switch (_context11.n) {
                    case 0:
                      _context11.n = 1;
                      return fn();
                    case 1:
                      return _context11.a(2, _context11.v);
                  }
                }, _callee11);
              }));
              return function (_x7) {
                return _ref12.apply(this, arguments);
              };
            }());
            _context12.n = 1;
            return _dashboardPage["default"].initialize();
          case 1:
            expect(_TooltipManager.tooltipManager.initialize).toHaveBeenCalled();
            expect(_dashboardPage["default"].initialize).toBeDefined();
          case 2:
            return _context12.a(2);
        }
      }, _callee12);
    })));
  });
  describe('showLoginPrompt', function () {
    it('should render login prompt', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee13() {
      var mainContent;
      return _regenerator().w(function (_context13) {
        while (1) switch (_context13.n) {
          case 0:
            _authManager.authManager.isAuthenticated.mockResolvedValue(false);
            _context13.n = 1;
            return _dashboardPage["default"].initialize();
          case 1:
            mainContent = document.querySelector('#main-content');
            expect(_dashboardPage["default"].initialize).toBeDefined();
          case 2:
            return _context13.a(2);
        }
      }, _callee13);
    })));
  });
  describe('integration', function () {
    it('should complete full initialization flow when authenticated', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee15() {
      var mockData;
      return _regenerator().w(function (_context15) {
        while (1) switch (_context15.n) {
          case 0:
            mockData = {
              workouts: [],
              progress: [],
              recommendations: []
            };
            _authManager.authManager.isAuthenticated.mockResolvedValue(true);
            _supabaseService.supabaseService.loadData.mockResolvedValue(mockData);
            _helpers.safeAsync.mockImplementation(/*#__PURE__*/function () {
              var _ref15 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee14(fn) {
                return _regenerator().w(function (_context14) {
                  while (1) switch (_context14.n) {
                    case 0:
                      _context14.n = 1;
                      return fn();
                    case 1:
                      return _context14.a(2, _context14.v);
                  }
                }, _callee14);
              }));
              return function (_x8) {
                return _ref15.apply(this, arguments);
              };
            }());
            _context15.n = 1;
            return _dashboardPage["default"].initialize();
          case 1:
            expect(_dashboardPage["default"].initialize).toBeDefined();
            expect(_TooltipManager.tooltipManager.initialize).toHaveBeenCalled();
          case 2:
            return _context15.a(2);
        }
      }, _callee15);
    })));
    it('should handle multiple initialization calls', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee17() {
      return _regenerator().w(function (_context17) {
        while (1) switch (_context17.n) {
          case 0:
            _helpers.safeAsync.mockImplementation(/*#__PURE__*/function () {
              var _ref17 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee16(fn) {
                return _regenerator().w(function (_context16) {
                  while (1) switch (_context16.n) {
                    case 0:
                      _context16.n = 1;
                      return fn();
                    case 1:
                      return _context16.a(2, _context16.v);
                  }
                }, _callee16);
              }));
              return function (_x9) {
                return _ref17.apply(this, arguments);
              };
            }());
            _context17.n = 1;
            return _dashboardPage["default"].initialize();
          case 1:
            _context17.n = 2;
            return _dashboardPage["default"].initialize();
          case 2:
            expect(_dashboardPage["default"].initialize).toBeDefined();
          case 3:
            return _context17.a(2);
        }
      }, _callee17);
    })));
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJzdXBhYmFzZVNlcnZpY2UiLCJnZXRDdXJyZW50VXNlciIsImplc3QiLCJmbiIsImxvYWREYXRhIiwic2F2ZURhdGEiLCJhdXRoTWFuYWdlciIsImlzQXV0aGVudGljYXRlZCIsInNob3dBdXRoTW9kYWwiLCJzaG93Tm90aWZpY2F0aW9uIiwic2FmZUdldEVsZW1lbnQiLCJzYWZlQXN5bmMiLCJoYW5kbGVFcnJvciIsInRvb2x0aXBNYW5hZ2VyIiwiaW5pdGlhbGl6ZSIsImFkZFRvb2x0aXAiLCJfZGFzaGJvYXJkUGFnZSIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX3N1cGFiYXNlU2VydmljZSIsIl9hdXRoTWFuYWdlciIsIl9oZWxwZXJzIiwiX2Vycm9ySGFuZGxlciIsIl9Ub29sdGlwTWFuYWdlciIsImUiLCJfX2VzTW9kdWxlIiwiX3JlZ2VuZXJhdG9yIiwidCIsInIiLCJTeW1ib2wiLCJuIiwiaXRlcmF0b3IiLCJvIiwidG9TdHJpbmdUYWciLCJpIiwiYyIsInByb3RvdHlwZSIsIkdlbmVyYXRvciIsInUiLCJPYmplY3QiLCJjcmVhdGUiLCJfcmVnZW5lcmF0b3JEZWZpbmUyIiwiZiIsInAiLCJ5IiwiRyIsInYiLCJhIiwiZCIsImJpbmQiLCJsZW5ndGgiLCJsIiwiVHlwZUVycm9yIiwiY2FsbCIsImRvbmUiLCJ2YWx1ZSIsIkdlbmVyYXRvckZ1bmN0aW9uIiwiR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUiLCJnZXRQcm90b3R5cGVPZiIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiZGlzcGxheU5hbWUiLCJ3IiwibSIsImRlZmluZVByb3BlcnR5IiwiX3JlZ2VuZXJhdG9yRGVmaW5lIiwiX2ludm9rZSIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsImFzeW5jR2VuZXJhdG9yU3RlcCIsIlByb21pc2UiLCJyZXNvbHZlIiwidGhlbiIsIl9hc3luY1RvR2VuZXJhdG9yIiwiYXJndW1lbnRzIiwiYXBwbHkiLCJfbmV4dCIsIl90aHJvdyIsIl9yZXF1aXJlIiwiZGVzY3JpYmUiLCJiZWZvcmVFYWNoIiwiY2xlYXJBbGxNb2NrcyIsImRvY3VtZW50IiwiYm9keSIsImlubmVySFRNTCIsIm1vY2tSZXR1cm5WYWx1ZSIsInF1ZXJ5U2VsZWN0b3IiLCJpdCIsImV4cGVjdCIsImRhc2hib2FyZFBhZ2UiLCJ0b0JlRGVmaW5lZCIsIl9jYWxsZWUyIiwiX2NvbnRleHQyIiwibW9ja0ltcGxlbWVudGF0aW9uIiwiX3JlZjIiLCJfY2FsbGVlIiwiX2NvbnRleHQiLCJfeCIsIl9jYWxsZWU0IiwiX2NvbnRleHQ0IiwiX3JlZjQiLCJfY2FsbGVlMyIsIl9jb250ZXh0MyIsIl94MiIsIl9jYWxsZWU2IiwiX2NvbnRleHQ2IiwiX3JlZjYiLCJfY2FsbGVlNSIsIl9jb250ZXh0NSIsIl94MyIsIl9jYWxsZWU4IiwibW9ja0RhdGEiLCJfY29udGV4dDgiLCJ3b3Jrb3V0cyIsInByb2dyZXNzIiwicmVjb21tZW5kYXRpb25zIiwibW9ja1Jlc29sdmVkVmFsdWUiLCJfcmVmOCIsIl9jYWxsZWU3IiwiX2NvbnRleHQ3IiwiX3g0IiwiX2NhbGxlZTAiLCJfY29udGV4dDAiLCJtb2NrUmVqZWN0ZWRWYWx1ZSIsIkVycm9yIiwiX3JlZjAiLCJfY2FsbGVlOSIsIl9jb250ZXh0OSIsIl94NSIsIl9jYWxsZWUxMCIsIm1haW5Db250ZW50IiwiX2NvbnRleHQxMCIsIl9yZWYxMCIsIl9jYWxsZWUxIiwiX2NvbnRleHQxIiwiX3g2IiwidG9Db250YWluIiwiX2NhbGxlZTEyIiwiX2NvbnRleHQxMiIsIl9yZWYxMiIsIl9jYWxsZWUxMSIsIl9jb250ZXh0MTEiLCJfeDciLCJ0b0hhdmVCZWVuQ2FsbGVkIiwiX2NhbGxlZTEzIiwiX2NvbnRleHQxMyIsIl9jYWxsZWUxNSIsIl9jb250ZXh0MTUiLCJfcmVmMTUiLCJfY2FsbGVlMTQiLCJfY29udGV4dDE0IiwiX3g4IiwiX2NhbGxlZTE3IiwiX2NvbnRleHQxNyIsIl9yZWYxNyIsIl9jYWxsZWUxNiIsIl9jb250ZXh0MTYiLCJfeDkiXSwic291cmNlcyI6WyJkYXNoYm9hcmRQYWdlLnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBEYXNoYm9hcmRQYWdlIOODhuOCueODiOOCueOCpOODvOODiFxuICovXG5cbmltcG9ydCBkYXNoYm9hcmRQYWdlIGZyb20gJy4uLy4uL2pzL3BhZ2VzL2Rhc2hib2FyZFBhZ2UuanMnO1xuaW1wb3J0IHsgc3VwYWJhc2VTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vanMvc2VydmljZXMvc3VwYWJhc2VTZXJ2aWNlLmpzJztcbmltcG9ydCB7IGF1dGhNYW5hZ2VyIH0gZnJvbSAnLi4vLi4vanMvbW9kdWxlcy9hdXRoTWFuYWdlci5qcyc7XG5pbXBvcnQge1xuICBzaG93Tm90aWZpY2F0aW9uLFxuICBzYWZlR2V0RWxlbWVudCxcbiAgc2FmZUFzeW5jLFxufSBmcm9tICcuLi8uLi9qcy91dGlscy9oZWxwZXJzLmpzJztcbmltcG9ydCB7IGhhbmRsZUVycm9yIH0gZnJvbSAnLi4vLi4vanMvdXRpbHMvZXJyb3JIYW5kbGVyLmpzJztcbmltcG9ydCB7IHRvb2x0aXBNYW5hZ2VyIH0gZnJvbSAnLi4vLi4vanMvdXRpbHMvVG9vbHRpcE1hbmFnZXIuanMnO1xuXG4vLyDjg6Ljg4Pjgq/jga7oqK3lrppcbmplc3QubW9jaygnLi4vLi4vanMvc2VydmljZXMvc3VwYWJhc2VTZXJ2aWNlLmpzJywgKCkgPT4gKHtcbiAgc3VwYWJhc2VTZXJ2aWNlOiB7XG4gICAgZ2V0Q3VycmVudFVzZXI6IGplc3QuZm4oKSxcbiAgICBsb2FkRGF0YTogamVzdC5mbigpLFxuICAgIHNhdmVEYXRhOiBqZXN0LmZuKCksXG4gIH0sXG59KSk7XG5cbmplc3QubW9jaygnLi4vLi4vanMvbW9kdWxlcy9hdXRoTWFuYWdlci5qcycsICgpID0+ICh7XG4gIGF1dGhNYW5hZ2VyOiB7XG4gICAgaXNBdXRoZW50aWNhdGVkOiBqZXN0LmZuKCksXG4gICAgc2hvd0F1dGhNb2RhbDogamVzdC5mbigpLFxuICB9LFxufSkpO1xuXG5qZXN0Lm1vY2soJy4uLy4uL2pzL3V0aWxzL2hlbHBlcnMuanMnLCAoKSA9PiAoe1xuICBzaG93Tm90aWZpY2F0aW9uOiBqZXN0LmZuKCksXG4gIHNhZmVHZXRFbGVtZW50OiBqZXN0LmZuKCksXG4gIHNhZmVBc3luYzogamVzdC5mbigpLFxufSkpO1xuXG5qZXN0Lm1vY2soJy4uLy4uL2pzL3V0aWxzL2Vycm9ySGFuZGxlci5qcycsICgpID0+ICh7XG4gIGhhbmRsZUVycm9yOiBqZXN0LmZuKCksXG59KSk7XG5cbmplc3QubW9jaygnLi4vLi4vanMvdXRpbHMvVG9vbHRpcE1hbmFnZXIuanMnLCAoKSA9PiAoe1xuICB0b29sdGlwTWFuYWdlcjoge1xuICAgIGluaXRpYWxpemU6IGplc3QuZm4oKSxcbiAgICBhZGRUb29sdGlwOiBqZXN0LmZuKCksXG4gIH0sXG59KSk7XG5cbmRlc2NyaWJlKCdEYXNoYm9hcmRQYWdlJywgKCkgPT4ge1xuICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICBqZXN0LmNsZWFyQWxsTW9ja3MoKTtcbiAgICBkb2N1bWVudC5ib2R5LmlubmVySFRNTCA9ICc8ZGl2IGlkPVwibWFpbi1jb250ZW50XCI+PC9kaXY+JztcbiAgICBzYWZlR2V0RWxlbWVudC5tb2NrUmV0dXJuVmFsdWUoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI21haW4tY29udGVudCcpKTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ2NvbnN0cnVjdG9yJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgaW5pdGlhbGl6ZSB3aXRoIGRlZmF1bHQgdmFsdWVzJywgKCkgPT4ge1xuICAgICAgZXhwZWN0KGRhc2hib2FyZFBhZ2UuaW5pdGlhbGl6ZSkudG9CZURlZmluZWQoKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ2luaXQnLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCBpbml0aWFsaXplIHN1Y2Nlc3NmdWxseSB3aGVuIGF1dGhlbnRpY2F0ZWQnLCBhc3luYyAoKSA9PiB7XG4gICAgICBzYWZlQXN5bmMubW9ja0ltcGxlbWVudGF0aW9uKGFzeW5jIChmbikgPT4gYXdhaXQgZm4oKSk7XG5cbiAgICAgIGF3YWl0IGRhc2hib2FyZFBhZ2UuaW5pdGlhbGl6ZSgpO1xuXG4gICAgICBleHBlY3QoZGFzaGJvYXJkUGFnZS5pbml0aWFsaXplKS50b0JlRGVmaW5lZCgpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBzaG93IGxvZ2luIHByb21wdCB3aGVuIG5vdCBhdXRoZW50aWNhdGVkJywgYXN5bmMgKCkgPT4ge1xuICAgICAgc2FmZUFzeW5jLm1vY2tJbXBsZW1lbnRhdGlvbihhc3luYyAoZm4pID0+IGF3YWl0IGZuKCkpO1xuXG4gICAgICBhd2FpdCBkYXNoYm9hcmRQYWdlLmluaXRpYWxpemUoKTtcblxuICAgICAgZXhwZWN0KGRhc2hib2FyZFBhZ2UuaW5pdGlhbGl6ZSkudG9CZURlZmluZWQoKTtcbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgaGFuZGxlIGluaXRpYWxpemF0aW9uIGVycm9ycycsIGFzeW5jICgpID0+IHtcbiAgICAgIHNhZmVBc3luYy5tb2NrSW1wbGVtZW50YXRpb24oYXN5bmMgKGZuKSA9PiBhd2FpdCBmbigpKTtcblxuICAgICAgYXdhaXQgZGFzaGJvYXJkUGFnZS5pbml0aWFsaXplKCk7XG5cbiAgICAgIGV4cGVjdChkYXNoYm9hcmRQYWdlLmluaXRpYWxpemUpLnRvQmVEZWZpbmVkKCk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdsb2FkRGFzaGJvYXJkRGF0YScsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIGxvYWQgZGFzaGJvYXJkIGRhdGEgc3VjY2Vzc2Z1bGx5JywgYXN5bmMgKCkgPT4ge1xuICAgICAgY29uc3QgbW9ja0RhdGEgPSB7XG4gICAgICAgIHdvcmtvdXRzOiBbXSxcbiAgICAgICAgcHJvZ3Jlc3M6IFtdLFxuICAgICAgICByZWNvbW1lbmRhdGlvbnM6IFtdLFxuICAgICAgfTtcblxuICAgICAgYXV0aE1hbmFnZXIuaXNBdXRoZW50aWNhdGVkLm1vY2tSZXNvbHZlZFZhbHVlKHRydWUpO1xuICAgICAgc3VwYWJhc2VTZXJ2aWNlLmxvYWREYXRhLm1vY2tSZXNvbHZlZFZhbHVlKG1vY2tEYXRhKTtcbiAgICAgIHNhZmVBc3luYy5tb2NrSW1wbGVtZW50YXRpb24oYXN5bmMgKGZuKSA9PiBhd2FpdCBmbigpKTtcblxuICAgICAgYXdhaXQgZGFzaGJvYXJkUGFnZS5pbml0aWFsaXplKCk7XG5cbiAgICAgIGV4cGVjdChkYXNoYm9hcmRQYWdlLmluaXRpYWxpemUpLnRvQmVEZWZpbmVkKCk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIGhhbmRsZSBkYXRhIGxvYWRpbmcgZXJyb3JzJywgYXN5bmMgKCkgPT4ge1xuICAgICAgYXV0aE1hbmFnZXIuaXNBdXRoZW50aWNhdGVkLm1vY2tSZXNvbHZlZFZhbHVlKHRydWUpO1xuICAgICAgc3VwYWJhc2VTZXJ2aWNlLmxvYWREYXRhLm1vY2tSZWplY3RlZFZhbHVlKFxuICAgICAgICBuZXcgRXJyb3IoJ0RhdGEgbG9hZGluZyBmYWlsZWQnKVxuICAgICAgKTtcbiAgICAgIHNhZmVBc3luYy5tb2NrSW1wbGVtZW50YXRpb24oYXN5bmMgKGZuKSA9PiBhd2FpdCBmbigpKTtcblxuICAgICAgYXdhaXQgZGFzaGJvYXJkUGFnZS5pbml0aWFsaXplKCk7XG5cbiAgICAgIGV4cGVjdChkYXNoYm9hcmRQYWdlLmluaXRpYWxpemUpLnRvQmVEZWZpbmVkKCk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdyZW5kZXJEYXNoYm9hcmQnLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCByZW5kZXIgZGFzaGJvYXJkIGNvbnRlbnQnLCBhc3luYyAoKSA9PiB7XG4gICAgICBhdXRoTWFuYWdlci5pc0F1dGhlbnRpY2F0ZWQubW9ja1Jlc29sdmVkVmFsdWUodHJ1ZSk7XG4gICAgICBzYWZlQXN5bmMubW9ja0ltcGxlbWVudGF0aW9uKGFzeW5jIChmbikgPT4gYXdhaXQgZm4oKSk7XG5cbiAgICAgIGF3YWl0IGRhc2hib2FyZFBhZ2UuaW5pdGlhbGl6ZSgpO1xuXG4gICAgICBjb25zdCBtYWluQ29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNtYWluLWNvbnRlbnQnKTtcbiAgICAgIGV4cGVjdChtYWluQ29udGVudC5pbm5lckhUTUwpLnRvQ29udGFpbign44OA44OD44K344Ol44Oc44O844OJJyk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdzZXR1cFRvb2x0aXBzJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgc2V0dXAgdG9vbHRpcHMnLCBhc3luYyAoKSA9PiB7XG4gICAgICBhdXRoTWFuYWdlci5pc0F1dGhlbnRpY2F0ZWQubW9ja1Jlc29sdmVkVmFsdWUodHJ1ZSk7XG4gICAgICBzYWZlQXN5bmMubW9ja0ltcGxlbWVudGF0aW9uKGFzeW5jIChmbikgPT4gYXdhaXQgZm4oKSk7XG5cbiAgICAgIGF3YWl0IGRhc2hib2FyZFBhZ2UuaW5pdGlhbGl6ZSgpO1xuXG4gICAgICBleHBlY3QodG9vbHRpcE1hbmFnZXIuaW5pdGlhbGl6ZSkudG9IYXZlQmVlbkNhbGxlZCgpO1xuICAgICAgZXhwZWN0KGRhc2hib2FyZFBhZ2UuaW5pdGlhbGl6ZSkudG9CZURlZmluZWQoKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ3Nob3dMb2dpblByb21wdCcsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIHJlbmRlciBsb2dpbiBwcm9tcHQnLCBhc3luYyAoKSA9PiB7XG4gICAgICBhdXRoTWFuYWdlci5pc0F1dGhlbnRpY2F0ZWQubW9ja1Jlc29sdmVkVmFsdWUoZmFsc2UpO1xuXG4gICAgICBhd2FpdCBkYXNoYm9hcmRQYWdlLmluaXRpYWxpemUoKTtcblxuICAgICAgY29uc3QgbWFpbkNvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbWFpbi1jb250ZW50Jyk7XG4gICAgICBleHBlY3QoZGFzaGJvYXJkUGFnZS5pbml0aWFsaXplKS50b0JlRGVmaW5lZCgpO1xuICAgIH0pO1xuICB9KTtcblxuICBkZXNjcmliZSgnaW50ZWdyYXRpb24nLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCBjb21wbGV0ZSBmdWxsIGluaXRpYWxpemF0aW9uIGZsb3cgd2hlbiBhdXRoZW50aWNhdGVkJywgYXN5bmMgKCkgPT4ge1xuICAgICAgY29uc3QgbW9ja0RhdGEgPSB7XG4gICAgICAgIHdvcmtvdXRzOiBbXSxcbiAgICAgICAgcHJvZ3Jlc3M6IFtdLFxuICAgICAgICByZWNvbW1lbmRhdGlvbnM6IFtdLFxuICAgICAgfTtcblxuICAgICAgYXV0aE1hbmFnZXIuaXNBdXRoZW50aWNhdGVkLm1vY2tSZXNvbHZlZFZhbHVlKHRydWUpO1xuICAgICAgc3VwYWJhc2VTZXJ2aWNlLmxvYWREYXRhLm1vY2tSZXNvbHZlZFZhbHVlKG1vY2tEYXRhKTtcbiAgICAgIHNhZmVBc3luYy5tb2NrSW1wbGVtZW50YXRpb24oYXN5bmMgKGZuKSA9PiBhd2FpdCBmbigpKTtcblxuICAgICAgYXdhaXQgZGFzaGJvYXJkUGFnZS5pbml0aWFsaXplKCk7XG5cbiAgICAgIGV4cGVjdChkYXNoYm9hcmRQYWdlLmluaXRpYWxpemUpLnRvQmVEZWZpbmVkKCk7XG4gICAgICBleHBlY3QodG9vbHRpcE1hbmFnZXIuaW5pdGlhbGl6ZSkudG9IYXZlQmVlbkNhbGxlZCgpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBoYW5kbGUgbXVsdGlwbGUgaW5pdGlhbGl6YXRpb24gY2FsbHMnLCBhc3luYyAoKSA9PiB7XG4gICAgICBzYWZlQXN5bmMubW9ja0ltcGxlbWVudGF0aW9uKGFzeW5jIChmbikgPT4gYXdhaXQgZm4oKSk7XG5cbiAgICAgIGF3YWl0IGRhc2hib2FyZFBhZ2UuaW5pdGlhbGl6ZSgpO1xuICAgICAgYXdhaXQgZGFzaGJvYXJkUGFnZS5pbml0aWFsaXplKCk7XG5cbiAgICAgIGV4cGVjdChkYXNoYm9hcmRQYWdlLmluaXRpYWxp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