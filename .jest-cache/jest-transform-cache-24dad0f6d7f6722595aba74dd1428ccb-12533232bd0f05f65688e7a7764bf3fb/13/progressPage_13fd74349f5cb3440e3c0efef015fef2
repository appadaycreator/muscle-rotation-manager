c4f5883708658f355335f0c3e9bb806a
"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _BasePage2 = require("../core/BasePage.js");
var _workoutDataService = require("../services/workoutDataService.js");
var _progressiveOverloadService = require("../services/progressiveOverloadService.js");
var _authManager = require("../modules/authManager.js");
var _helpers = require("../utils/helpers.js");
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == _typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); } // progressPage.js - プログレッシブ・オーバーロードページの機能
var ProgressPage = /*#__PURE__*/function (_BasePage) {
  function ProgressPage() {
    var _this;
    _classCallCheck(this, ProgressPage);
    _this = _callSuper(this, ProgressPage);
    _this.workoutData = [];
    _this.progressiveOverloadData = null;
    _this.selectedExercise = null;
    _this.selectedMuscleGroup = null;
    _this.analysisPeriod = 90;
    _this.isLoading = false;
    return _this;
  }

  /**
   * プログレッシブ・オーバーロードページの初期化
   */
  _inherits(ProgressPage, _BasePage);
  return _createClass(ProgressPage, [{
    key: "initialize",
    value: (function () {
      var _initialize = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {
        return _regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              console.log('Progress page initializing without auth check');

              // DOMの読み込みを待つ
              if (!(document.readyState === 'loading')) {
                _context.n = 1;
                break;
              }
              _context.n = 1;
              return new Promise(function (resolve) {
                document.addEventListener('DOMContentLoaded', resolve);
              });
            case 1:
              // プログレッシブ・オーバーロードページのコンテンツを表示
              this.renderProgressPage();

              // データを読み込み
              _context.n = 2;
              return this.loadWorkoutData();
            case 2:
              _context.n = 3;
              return this.loadProgressiveOverloadData();
            case 3:
              // レンダリング
              this.renderProgressiveOverloadAnalysis();
              this.renderExerciseSelector();
              this.renderMuscleGroupSelector();

              // イベントリスナーを設定
              this.setupEventListeners();
            case 4:
              return _context.a(2);
          }
        }, _callee, this);
      }));
      function initialize() {
        return _initialize.apply(this, arguments);
      }
      return initialize;
    }()
    /**
     * プログレッシブ・オーバーロードページ固有の初期化処理
     */
    )
  }, {
    key: "onInitialize",
    value: (function () {
      var _onInitialize = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {
        var _this2 = this;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              console.log('Progress page initialized - User authenticated');

              // DOMの読み込みを待つ
              if (!(document.readyState === 'loading')) {
                _context3.n = 1;
                break;
              }
              _context3.n = 1;
              return new Promise(function (resolve) {
                document.addEventListener('DOMContentLoaded', resolve);
              });
            case 1:
              // 少し遅延してからページを設定
              setTimeout(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {
                return _regenerator().w(function (_context2) {
                  while (1) switch (_context2.n) {
                    case 0:
                      _this2.renderProgressPage();
                      _context2.n = 1;
                      return _this2.loadWorkoutData();
                    case 1:
                      _context2.n = 2;
                      return _this2.loadProgressiveOverloadData();
                    case 2:
                      _this2.renderProgressiveOverloadAnalysis();
                      _this2.renderExerciseSelector();
                      _this2.renderMuscleGroupSelector();
                      _this2.setupEventListeners();
                      _this2.setupAuthButton();
                    case 3:
                      return _context2.a(2);
                  }
                }, _callee2);
              })), 100);
            case 2:
              return _context3.a(2);
          }
        }, _callee3);
      }));
      function onInitialize() {
        return _onInitialize.apply(this, arguments);
      }
      return onInitialize;
    }()
    /**
     * プログレッシブ・オーバーロードページのコンテンツを表示
     */
    )
  }, {
    key: "renderProgressPage",
    value: function renderProgressPage() {
      var mainContent = (0, _helpers.safeGetElement)('#main-content');
      if (!mainContent) {
        return;
      }
      mainContent.innerHTML = "\n      <div class=\"mb-8\">\n        <h1 class=\"text-3xl font-bold text-gray-900\">\u30D7\u30ED\u30B0\u30EC\u30C3\u30B7\u30D6\u30FB\u30AA\u30FC\u30D0\u30FC\u30ED\u30FC\u30C9</h1>\n        <p class=\"mt-2 text-gray-600\">\n          \u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u306E\u9032\u6B69\u3092\u5B9A\u91CF\u7684\u306B\u5206\u6790\u3057\u3001\u6700\u9069\u306A\u30ED\u30FC\u30C6\u30FC\u30B7\u30E7\u30F3\u3092\u8A08\u753B\u3057\u307E\u3057\u3087\u3046\n        </p>\n      </div>\n\n      <!-- \u5206\u6790\u671F\u9593\u9078\u629E -->\n      <div class=\"bg-white shadow rounded-lg mb-8\">\n        <div class=\"px-4 py-5 sm:p-6\">\n          <div class=\"flex justify-between items-center mb-4\">\n            <h3 class=\"text-lg leading-6 font-medium text-gray-900\">\u5206\u6790\u8A2D\u5B9A</h3>\n            <div class=\"flex items-center space-x-4\">\n              <div class=\"flex items-center space-x-2\">\n                <label class=\"text-sm text-gray-600\">\u5206\u6790\u671F\u9593:</label>\n                <select id=\"analysis-period\" class=\"border border-gray-300 rounded-md px-3 py-2 text-sm\">\n                  <option value=\"30\">30\u65E5</option>\n                  <option value=\"60\">60\u65E5</option>\n                  <option value=\"90\" selected>90\u65E5</option>\n                  <option value=\"180\">180\u65E5</option>\n                </select>\n              </div>\n              <button id=\"refresh-analysis\" class=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 text-sm\">\n                <i class=\"fas fa-sync-alt mr-2\"></i>\u5206\u6790\u3092\u66F4\u65B0\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- \u7DCF\u5408\u5206\u6790 -->\n      <div class=\"bg-white shadow rounded-lg mb-8\">\n        <div class=\"px-4 py-5 sm:p-6\">\n          <h3 class=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\u7DCF\u5408\u5206\u6790</h3>\n          <div id=\"overall-analysis\">\n            <div class=\"text-center text-gray-500 py-4\">\n              <i class=\"fas fa-spinner fa-spin text-xl mb-2\"></i>\n              <p>\u5206\u6790\u30C7\u30FC\u30BF\u3092\u8AAD\u307F\u8FBC\u307F\u4E2D...</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- \u30A8\u30AF\u30B5\u30B5\u30A4\u30BA\u5225\u5206\u6790 -->\n      <div class=\"bg-white shadow rounded-lg mb-8\">\n        <div class=\"px-4 py-5 sm:p-6\">\n          <div class=\"flex justify-between items-center mb-4\">\n            <h3 class=\"text-lg leading-6 font-medium text-gray-900\">\u30A8\u30AF\u30B5\u30B5\u30A4\u30BA\u5225\u5206\u6790</h3>\n            <div class=\"flex items-center space-x-2\">\n              <label class=\"text-sm text-gray-600\">\u30A8\u30AF\u30B5\u30B5\u30A4\u30BA:</label>\n              <select id=\"exercise-selector\" class=\"border border-gray-300 rounded-md px-3 py-2 text-sm\">\n                <option value=\"\">\u30A8\u30AF\u30B5\u30B5\u30A4\u30BA\u3092\u9078\u629E</option>\n              </select>\n            </div>\n          </div>\n          <div id=\"exercise-analysis\">\n            <div class=\"text-center text-gray-500 py-8\">\n              <i class=\"fas fa-dumbbell text-4xl text-gray-300 mb-4\"></i>\n              <p>\u30A8\u30AF\u30B5\u30B5\u30A4\u30BA\u3092\u9078\u629E\u3057\u3066\u8A73\u7D30\u5206\u6790\u3092\u8868\u793A</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- \u7B4B\u8089\u90E8\u4F4D\u5225\u5206\u6790 -->\n      <div class=\"bg-white shadow rounded-lg mb-8\">\n        <div class=\"px-4 py-5 sm:p-6\">\n          <div class=\"flex justify-between items-center mb-4\">\n            <h3 class=\"text-lg leading-6 font-medium text-gray-900\">\u7B4B\u8089\u90E8\u4F4D\u5225\u5206\u6790</h3>\n            <div class=\"flex items-center space-x-2\">\n              <label class=\"text-sm text-gray-600\">\u7B4B\u8089\u90E8\u4F4D:</label>\n              <select id=\"muscle-group-selector\" class=\"border border-gray-300 rounded-md px-3 py-2 text-sm\">\n                <option value=\"\">\u7B4B\u8089\u90E8\u4F4D\u3092\u9078\u629E</option>\n              </select>\n            </div>\n          </div>\n          <div id=\"muscle-group-analysis\">\n            <div class=\"text-center text-gray-500 py-8\">\n              <i class=\"fas fa-muscle text-4xl text-gray-300 mb-4\"></i>\n              <p>\u7B4B\u8089\u90E8\u4F4D\u3092\u9078\u629E\u3057\u3066\u8A73\u7D30\u5206\u6790\u3092\u8868\u793A</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- \u63A8\u5968\u4E8B\u9805 -->\n      <div class=\"bg-white shadow rounded-lg\">\n        <div class=\"px-4 py-5 sm:p-6\">\n          <h3 class=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\u63A8\u5968\u4E8B\u9805</h3>\n          <div id=\"recommendations\">\n            <div class=\"text-center text-gray-500 py-4\">\n              <i class=\"fas fa-spinner fa-spin text-xl mb-2\"></i>\n              <p>\u63A8\u5968\u4E8B\u9805\u3092\u751F\u6210\u4E2D...</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    ";
    }

    /**
     * ワークアウトデータを読み込み
     */
  }, {
    key: "loadWorkoutData",
    value: (function () {
      var _loadWorkoutData = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {
        var _iterator, _step, workout, _t, _t2;
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.p = _context4.n) {
            case 0:
              _context4.p = 0;
              this.isLoading = true;
              console.log('Loading workout data...');

              // ワークアウトデータサービスから読み込み
              _context4.n = 1;
              return _workoutDataService.workoutDataService.loadWorkouts({
                limit: 1000
              });
            case 1:
              this.workoutData = _context4.v;
              if (!(this.workoutData.length === 0)) {
                _context4.n = 8;
                break;
              }
              this.workoutData = this.generateSampleWorkoutData();

              // サンプルデータを保存
              _iterator = _createForOfIteratorHelper(this.workoutData);
              _context4.p = 2;
              _iterator.s();
            case 3:
              if ((_step = _iterator.n()).done) {
                _context4.n = 5;
                break;
              }
              workout = _step.value;
              _context4.n = 4;
              return _workoutDataService.workoutDataService.saveWorkout(workout);
            case 4:
              _context4.n = 3;
              break;
            case 5:
              _context4.n = 7;
              break;
            case 6:
              _context4.p = 6;
              _t = _context4.v;
              _iterator.e(_t);
            case 7:
              _context4.p = 7;
              _iterator.f();
              return _context4.f(7);
            case 8:
              console.log("Loaded ".concat(this.workoutData.length, " workouts for progress analysis"));
              _context4.n = 10;
              break;
            case 9:
              _context4.p = 9;
              _t2 = _context4.v;
              console.error('Error loading workout data:', _t2);
              this.workoutData = this.generateSampleWorkoutData();
              (0, _helpers.showNotification)('ワークアウトデータの読み込みに失敗しました', 'error');
            case 10:
              _context4.p = 10;
              this.isLoading = false;
              return _context4.f(10);
            case 11:
              return _context4.a(2);
          }
        }, _callee4, this, [[2, 6, 7, 8], [0, 9, 10, 11]]);
      }));
      function loadWorkoutData() {
        return _loadWorkoutData.apply(this, arguments);
      }
      return loadWorkoutData;
    }()
    /**
     * プログレッシブ・オーバーロードデータを読み込み
     */
    )
  }, {
    key: "loadProgressiveOverloadData",
    value: (function () {
      var _loadProgressiveOverloadData = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5() {
        var _t3;
        return _regenerator().w(function (_context5) {
          while (1) switch (_context5.p = _context5.n) {
            case 0:
              _context5.p = 0;
              console.log('Loading progressive overload data...');
              _context5.n = 1;
              return _progressiveOverloadService.progressiveOverloadService.getOverallProgress(this.analysisPeriod);
            case 1:
              this.progressiveOverloadData = _context5.v;
              console.log('Progressive overload data loaded:', this.progressiveOverloadData);
              _context5.n = 3;
              break;
            case 2:
              _context5.p = 2;
              _t3 = _context5.v;
              console.error('Error loading progressive overload data:', _t3);
              (0, _helpers.showNotification)('プログレッシブ・オーバーロードデータの読み込みに失敗しました', 'error');
            case 3:
              return _context5.a(2);
          }
        }, _callee5, this, [[0, 2]]);
      }));
      function loadProgressiveOverloadData() {
        return _loadProgressiveOverloadData.apply(this, arguments);
      }
      return loadProgressiveOverloadData;
    }()
    /**
     * サンプルワークアウトデータを生成
     */
    )
  }, {
    key: "generateSampleWorkoutData",
    value: function generateSampleWorkoutData() {
      var today = new Date();
      var sampleData = [];

      // 過去30日分のサンプルデータを生成（90日から30日に短縮）
      for (var i = 0; i < 30; i++) {
        var date = new Date(today);
        date.setDate(date.getDate() - i);

        // 3-4日に1回の頻度でワークアウトを生成（頻度を下げる）
        if (i % 3 === 0 || i % 4 === 0) {
          var muscleGroups = ['胸', '背中', '肩', '腕', '脚', '腹筋'];
          var randomMuscles = muscleGroups.sort(function () {
            return 0.5 - Math.random();
          }).slice(0, 1); // 1つの部位のみに制限

          // 重量の進歩をシミュレート（より現実的な値に調整）
          var baseWeight = 40; // ベース重量をさらに下げる
          var progressFactor = Math.max(0, (30 - i) / 30); // 30日ベースに変更
          var weight = Math.floor(baseWeight + progressFactor * 10); // 進歩幅をさらに縮小

          // エクササイズ数を制限（1-2個のみ）
          var exercises = [];
          if (randomMuscles.includes('胸')) {
            exercises.push({
              name: 'ベンチプレス',
              sets: 2,
              reps: 8,
              weight: weight
            },
            // セット数を減らす
            {
              name: 'プッシュアップ',
              sets: 2,
              reps: 10,
              weight: 0
            } // 回数も減らす
            );
          } else if (randomMuscles.includes('背中')) {
            exercises.push({
              name: 'デッドリフト',
              sets: 2,
              reps: 5,
              weight: Math.floor(weight * 1.1)
            },
            // セット数と重量倍率を減らす
            {
              name: 'プルアップ',
              sets: 2,
              reps: 6,
              weight: 0
            } // 回数を減らす
            );
          } else if (randomMuscles.includes('脚')) {
            exercises.push({
              name: 'スクワット',
              sets: 2,
              reps: 8,
              weight: Math.floor(weight * 0.7)
            },
            // セット数と重量倍率を減らす
            {
              name: 'ランジ',
              sets: 2,
              reps: 8,
              weight: 0
            } // 回数を減らす
            );
          } else {
            // その他の部位
            exercises.push({
              name: 'ダンベルカール',
              sets: 2,
              reps: 8,
              weight: Math.floor(weight * 0.4)
            } // セット数と重量倍率を減らす
            );
          }
          sampleData.push({
            id: "sample-".concat(i),
            date: date.toISOString().split('T')[0],
            muscle_groups: randomMuscles,
            exercises: exercises.slice(0, 2),
            // 最大2個のエクササイズに制限
            duration: 30 + Math.floor(Math.random() * 20),
            // 30-50分に短縮
            notes: 'サンプルワークアウト'
          });
        }
      }
      return sampleData;
    }

    /**
     * 総合分析をレンダリング
     */
  }, {
    key: "renderProgressiveOverloadAnalysis",
    value: function renderProgressiveOverloadAnalysis() {
      var _this3 = this;
      var container = (0, _helpers.safeGetElement)('#overall-analysis');
      if (!container) {
        console.warn('Overall analysis container not found');
        return;
      }
      if (!this.progressiveOverloadData) {
        container.innerHTML = "\n        <div class=\"text-center text-gray-500 py-4\">\n          <i class=\"fas fa-exclamation-triangle text-xl mb-2\"></i>\n          <p>\u30D7\u30ED\u30B0\u30EC\u30C3\u30B7\u30D6\u30FB\u30AA\u30FC\u30D0\u30FC\u30ED\u30FC\u30C9\u30C7\u30FC\u30BF\u304C\u3042\u308A\u307E\u305B\u3093</p>\n        </div>\n      ";
        return;
      }
      var data = this.progressiveOverloadData;
      container.innerHTML = "\n      <!-- \u7DCF\u5408\u30E1\u30C8\u30EA\u30AF\u30B9 -->\n      <div class=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n        <div class=\"text-center p-4 bg-blue-50 rounded-lg\">\n          <div class=\"text-2xl font-bold text-blue-600\">".concat(data.totalWorkouts, "</div>\n          <div class=\"text-sm text-gray-600\">\u7DCF\u30EF\u30FC\u30AF\u30A2\u30A6\u30C8\u6570</div>\n        </div>\n        <div class=\"text-center p-4 bg-green-50 rounded-lg\">\n          <div class=\"text-2xl font-bold text-green-600\">").concat(data.overallMetrics.totalVolume, "</div>\n          <div class=\"text-sm text-gray-600\">\u7DCF\u30DC\u30EA\u30E5\u30FC\u30E0</div>\n        </div>\n        <div class=\"text-center p-4 bg-purple-50 rounded-lg\">\n          <div class=\"text-2xl font-bold text-purple-600\">").concat(data.consistencyScore, "</div>\n          <div class=\"text-sm text-gray-600\">\u4E00\u8CAB\u6027\u30B9\u30B3\u30A2</div>\n        </div>\n        <div class=\"text-center p-4 bg-orange-50 rounded-lg\">\n          <div class=\"text-2xl font-bold text-orange-600\">").concat(data.overallMetrics.averageVolumePerWorkout, "</div>\n          <div class=\"text-sm text-gray-600\">\u5E73\u5747\u30DC\u30EA\u30E5\u30FC\u30E0</div>\n        </div>\n      </div>\n\n      <!-- \u7B4B\u8089\u90E8\u4F4D\u5225\u9032\u6B69 -->\n      <div class=\"mb-6\">\n        <h4 class=\"text-md font-medium text-gray-700 mb-3\">\u7B4B\u8089\u90E8\u4F4D\u5225\u9032\u6B69</h4>\n        <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          ").concat(Object.entries(data.muscleGroupProgress).map(function (_ref2) {
        var _ref3 = _slicedToArray(_ref2, 2),
          muscle = _ref3[0],
          progress = _ref3[1];
        if (!progress) return '';
        return "\n              <div class=\"border border-gray-200 rounded-lg p-4\">\n                <h5 class=\"font-medium text-gray-800 mb-2\">".concat(_this3.getMuscleGroupName(muscle), "</h5>\n                <div class=\"space-y-2\">\n                  <div class=\"flex justify-between text-sm\">\n                    <span class=\"text-gray-600\">\u30BB\u30C3\u30B7\u30E7\u30F3\u6570:</span>\n                    <span class=\"font-medium\">").concat(progress.totalSessions, "</span>\n                  </div>\n                  <div class=\"flex justify-between text-sm\">\n                    <span class=\"text-gray-600\">\u983B\u5EA6\u30B9\u30B3\u30A2:</span>\n                    <span class=\"font-medium\">").concat(progress.frequencyAnalysis.frequencyScore, "</span>\n                  </div>\n                  <div class=\"flex justify-between text-sm\">\n                    <span class=\"text-gray-600\">\u5E73\u5747\u9593\u9694:</span>\n                    <span class=\"font-medium\">").concat(progress.frequencyAnalysis.averageDaysBetween, "\u65E5</span>\n                  </div>\n                </div>\n              </div>\n            ");
      }).join(''), "\n        </div>\n      </div>\n\n      <!-- \u63A8\u5968\u4E8B\u9805 -->\n      <div>\n        <h4 class=\"text-md font-medium text-gray-700 mb-3\">\u7DCF\u5408\u63A8\u5968\u4E8B\u9805</h4>\n        <div class=\"space-y-3\">\n          ").concat(data.recommendations.map(function (rec) {
        return "\n            <div class=\"p-4 rounded-lg ".concat(rec.priority === 'high' ? 'bg-red-50 border-l-4 border-red-400' : rec.priority === 'medium' ? 'bg-yellow-50 border-l-4 border-yellow-400' : 'bg-green-50 border-l-4 border-green-400', "\">\n              <div class=\"flex items-start\">\n                <div class=\"flex-shrink-0\">\n                  <i class=\"fas ").concat(rec.priority === 'high' ? 'fa-exclamation-triangle text-red-400' : rec.priority === 'medium' ? 'fa-info-circle text-yellow-400' : 'fa-check-circle text-green-400', "\"></i>\n                </div>\n                <div class=\"ml-3\">\n                  <p class=\"text-sm font-medium ").concat(rec.priority === 'high' ? 'text-red-800' : rec.priority === 'medium' ? 'text-yellow-800' : 'text-green-800', "\">\n                    ").concat(rec.message, "\n                  </p>\n                  <p class=\"text-sm ").concat(rec.priority === 'high' ? 'text-red-700' : rec.priority === 'medium' ? 'text-yellow-700' : 'text-green-700', " mt-1\">\n                    <strong>\u63A8\u5968\u30A2\u30AF\u30B7\u30E7\u30F3:</strong> ").concat(rec.action, "\n                  </p>\n                </div>\n              </div>\n            </div>\n          ");
      }).join(''), "\n        </div>\n      </div>\n    ");
    }

    /**
     * エクササイズセレクターをレンダリング
     */
  }, {
    key: "renderExerciseSelector",
    value: function renderExerciseSelector() {
      var selector = (0, _helpers.safeGetElement)('#exercise-selector');
      if (!selector) return;

      // エクササイズ一覧を取得
      var exercises = new Set();
      this.workoutData.forEach(function (workout) {
        (workout.exercises || []).forEach(function (exercise) {
          if (exercise.name) exercises.add(exercise.name);
        });
      });
      selector.innerHTML = "\n      <option value=\"\">\u30A8\u30AF\u30B5\u30B5\u30A4\u30BA\u3092\u9078\u629E</option>\n      ".concat(Array.from(exercises).map(function (exercise) {
        return "\n        <option value=\"".concat(exercise, "\">").concat(exercise, "</option>\n      ");
      }).join(''), "\n    ");
    }

    /**
     * 筋肉部位セレクターをレンダリング
     */
  }, {
    key: "renderMuscleGroupSelector",
    value: function renderMuscleGroupSelector() {
      var _this4 = this;
      var selector = (0, _helpers.safeGetElement)('#muscle-group-selector');
      if (!selector) return;

      // 筋肉部位一覧を取得
      var muscleGroups = new Set();
      this.workoutData.forEach(function (workout) {
        (workout.muscle_groups || []).forEach(function (muscle) {
          muscleGroups.add(muscle);
        });
      });
      selector.innerHTML = "\n      <option value=\"\">\u7B4B\u8089\u90E8\u4F4D\u3092\u9078\u629E</option>\n      ".concat(Array.from(muscleGroups).map(function (muscle) {
        return "\n        <option value=\"".concat(muscle, "\">").concat(_this4.getMuscleGroupName(muscle), "</option>\n      ");
      }).join(''), "\n    ");
    }

    /**
     * 筋肉部位名を取得
     */
  }, {
    key: "getMuscleGroupName",
    value: function getMuscleGroupName(muscleId) {
      var muscleGroupNames = {
        chest: '胸',
        back: '背中',
        shoulders: '肩',
        arms: '腕',
        legs: '脚',
        core: '腹筋',
        胸: '胸',
        背中: '背中',
        肩: '肩',
        腕: '腕',
        脚: '脚',
        腹筋: '腹筋'
      };
      return muscleGroupNames[muscleId] || muscleId;
    }

    /**
     * エクササイズ別詳細分析をレンダリング
     */
  }, {
    key: "renderExerciseAnalysis",
    value: (function () {
      var _renderExerciseAnalysis = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6() {
        var _this5 = this;
        var container, exerciseData, stats, _t4;
        return _regenerator().w(function (_context6) {
          while (1) switch (_context6.p = _context6.n) {
            case 0:
              container = (0, _helpers.safeGetElement)('#exercise-analysis');
              if (container) {
                _context6.n = 1;
                break;
              }
              console.warn('Exercise analysis container not found');
              return _context6.a(2);
            case 1:
              if (this.selectedExercise) {
                _context6.n = 2;
                break;
              }
              container.innerHTML = "\n        <div class=\"text-center text-gray-500 py-8\">\n          <i class=\"fas fa-info-circle text-xl mb-2\"></i>\n          <p>\u30A8\u30AF\u30B5\u30B5\u30A4\u30BA\u3092\u9078\u629E\u3057\u3066\u304F\u3060\u3055\u3044</p>\n        </div>\n      ";
              return _context6.a(2);
            case 2:
              _context6.p = 2;
              // 選択されたエクササイズのデータを取得
              exerciseData = this.workoutData.filter(function (workout) {
                return workout.exercises && workout.exercises.some(function (ex) {
                  return ex.name === _this5.selectedExercise;
                });
              });
              if (!(exerciseData.length === 0)) {
                _context6.n = 3;
                break;
              }
              container.innerHTML = "\n          <div class=\"text-center text-gray-500 py-8\">\n            <i class=\"fas fa-exclamation-triangle text-xl mb-2\"></i>\n            <p>\u9078\u629E\u3055\u308C\u305F\u30A8\u30AF\u30B5\u30B5\u30A4\u30BA\u306E\u30C7\u30FC\u30BF\u304C\u3042\u308A\u307E\u305B\u3093</p>\n          </div>\n        ";
              return _context6.a(2);
            case 3:
              // 統計データを計算
              stats = this.calculateExerciseStats(exerciseData, this.selectedExercise);
              container.innerHTML = "\n        <div class=\"bg-white rounded-lg p-6\">\n          <h3 class=\"text-xl font-semibold text-gray-800 mb-4\">\n            <i class=\"fas fa-dumbbell text-blue-500 mr-2\"></i>\n            ".concat(this.selectedExercise, " \u306E\u8A73\u7D30\u5206\u6790\n          </h3>\n          \n          <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n            <div class=\"text-center p-4 bg-blue-50 rounded-lg\">\n              <div class=\"text-2xl font-bold text-blue-600\">").concat(stats.totalSessions, "</div>\n              <div class=\"text-sm text-gray-600\">\u7DCF\u30BB\u30C3\u30B7\u30E7\u30F3\u6570</div>\n            </div>\n            <div class=\"text-center p-4 bg-green-50 rounded-lg\">\n              <div class=\"text-2xl font-bold text-green-600\">").concat(stats.maxWeight, "kg</div>\n              <div class=\"text-sm text-gray-600\">\u6700\u5927\u91CD\u91CF</div>\n            </div>\n            <div class=\"text-center p-4 bg-purple-50 rounded-lg\">\n              <div class=\"text-2xl font-bold text-purple-600\">").concat(stats.avgWeight, "kg</div>\n              <div class=\"text-sm text-gray-600\">\u5E73\u5747\u91CD\u91CF</div>\n            </div>\n          </div>\n\n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div class=\"text-center p-4 bg-orange-50 rounded-lg\">\n              <div class=\"text-2xl font-bold text-orange-600\">").concat(stats.totalVolume, "</div>\n              <div class=\"text-sm text-gray-600\">\u7DCF\u30DC\u30EA\u30E5\u30FC\u30E0</div>\n            </div>\n            <div class=\"text-center p-4 bg-pink-50 rounded-lg\">\n              <div class=\"text-2xl font-bold text-pink-600\">").concat(stats.progressRate, "%</div>\n              <div class=\"text-sm text-gray-600\">\u9032\u6B69\u7387</div>\n            </div>\n          </div>\n\n          <div class=\"mt-6\">\n            <h4 class=\"text-lg font-semibold text-gray-800 mb-3\">\u91CD\u91CF\u63A8\u79FB</h4>\n            <div class=\"chart-container\" style=\"height: 300px;\">\n              <canvas id=\"exercise-progress-chart\"></canvas>\n            </div>\n          </div>\n        </div>\n      ");

              // グラフを描画
              _context6.n = 4;
              return this.renderExerciseProgressChart(exerciseData, this.selectedExercise);
            case 4:
              _context6.n = 6;
              break;
            case 5:
              _context6.p = 5;
              _t4 = _context6.v;
              console.error('Error rendering exercise analysis:', _t4);
              container.innerHTML = "\n        <div class=\"text-center text-red-500 py-8\">\n          <i class=\"fas fa-exclamation-triangle text-xl mb-2\"></i>\n          <p>\u30A8\u30AF\u30B5\u30B5\u30A4\u30BA\u5206\u6790\u306E\u8868\u793A\u306B\u5931\u6557\u3057\u307E\u3057\u305F</p>\n        </div>\n      ";
            case 6:
              return _context6.a(2);
          }
        }, _callee6, this, [[2, 5]]);
      }));
      function renderExerciseAnalysis() {
        return _renderExerciseAnalysis.apply(this, arguments);
      }
      return renderExerciseAnalysis;
    }()
    /**
     * 筋肉部位の統計データを計算
     */
    )
  }, {
    key: "calculateMuscleGroupAnalysis",
    value: function calculateMuscleGroupAnalysis(muscleData) {
      if (!muscleData || muscleData.length === 0) {
        return {
          totalSessions: 0,
          totalVolume: 0,
          averageVolumePerSession: 0,
          totalDuration: 0
        };
      }
      var totalVolume = 0;
      var totalDuration = 0;
      muscleData.forEach(function (workout) {
        if (workout.exercises && workout.exercises.length > 0) {
          workout.exercises.forEach(function (exercise) {
            totalVolume += (exercise.weight || 0) * (exercise.reps || 0) * (exercise.sets || 0);
          });
        }
        totalDuration += workout.duration || 0;
      });
      return {
        totalSessions: muscleData.length,
        totalVolume: totalVolume,
        averageVolumePerSession: muscleData.length > 0 ? Math.round(totalVolume / muscleData.length) : 0,
        totalDuration: totalDuration
      };
    }

    /**
     * エクササイズの統計データを計算
     */
  }, {
    key: "calculateExerciseStats",
    value: function calculateExerciseStats(exerciseData, exerciseName) {
      var exerciseSessions = [];
      exerciseData.forEach(function (workout) {
        var exercise = workout.exercises.find(function (ex) {
          return ex.name === exerciseName;
        });
        if (exercise) {
          exerciseSessions.push({
            date: workout.date || workout.startTime,
            weight: exercise.weight || 0,
            reps: exercise.reps || 0,
            sets: exercise.sets || 0,
            volume: (exercise.weight || 0) * (exercise.reps || 0) * (exercise.sets || 0)
          });
        }
      });
      if (exerciseSessions.length === 0) {
        return {
          totalSessions: 0,
          maxWeight: 0,
          avgWeight: 0,
          totalVolume: 0,
          progressRate: 0
        };
      }
      var weights = exerciseSessions.map(function (s) {
        return s.weight;
      }).filter(function (w) {
        return w > 0;
      });
      var volumes = exerciseSessions.map(function (s) {
        return s.volume;
      });
      var maxWeight = Math.max.apply(Math, _toConsumableArray(weights));
      var avgWeight = weights.length > 0 ? Math.round(weights.reduce(function (a, b) {
        return a + b;
      }, 0) / weights.length) : 0;
      var totalVolume = volumes.reduce(function (a, b) {
        return a + b;
      }, 0);

      // 進歩率計算（最初と最後の重量を比較）
      var firstWeight = weights[0] || 0;
      var lastWeight = weights[weights.length - 1] || 0;
      var progressRate = firstWeight > 0 ? Math.round((lastWeight - firstWeight) / firstWeight * 100) : 0;
      return {
        totalSessions: exerciseSessions.length,
        maxWeight: maxWeight,
        avgWeight: avgWeight,
        totalVolume: totalVolume,
        progressRate: progressRate
      };
    }

    /**
     * エクササイズ進捗グラフを描画
     */
  }, {
    key: "renderExerciseProgressChart",
    value: (function () {
      var _renderExerciseProgressChart = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee7(exerciseData, exerciseName) {
        var canvas, exerciseSessions, _t5;
        return _regenerator().w(function (_context7) {
          while (1) switch (_context7.p = _context7.n) {
            case 0:
              _context7.p = 0;
              if (!(typeof Chart === 'undefined')) {
                _context7.n = 1;
                break;
              }
              console.warn('Chart.js not available for exercise progress chart');
              return _context7.a(2);
            case 1:
              canvas = (0, _helpers.safeGetElement)('#exercise-progress-chart');
              if (canvas) {
                _context7.n = 2;
                break;
              }
              console.warn('Exercise progress chart canvas not found');
              return _context7.a(2);
            case 2:
              exerciseSessions = [];
              exerciseData.forEach(function (workout) {
                var exercise = workout.exercises.find(function (ex) {
                  return ex.name === exerciseName;
                });
                if (exercise && exercise.weight > 0) {
                  exerciseSessions.push({
                    date: new Date(workout.date || workout.startTime),
                    weight: exercise.weight
                  });
                }
              });
              if (!(exerciseSessions.length === 0)) {
                _context7.n = 3;
                break;
              }
              canvas.parentElement.innerHTML = "\n          <div class=\"text-center text-gray-500 py-8\">\n            <i class=\"fas fa-info-circle text-xl mb-2\"></i>\n            <p>\u91CD\u91CF\u30C7\u30FC\u30BF\u304C\u3042\u308A\u307E\u305B\u3093</p>\n          </div>\n        ";
              return _context7.a(2);
            case 3:
              // 日付順にソート
              exerciseSessions.sort(function (a, b) {
                return a.date - b.date;
              });
              new Chart(canvas, {
                type: 'line',
                data: {
                  labels: exerciseSessions.map(function (s) {
                    return s.date.toLocaleDateString();
                  }),
                  datasets: [{
                    label: '重量 (kg)',
                    data: exerciseSessions.map(function (s) {
                      return s.weight;
                    }),
                    borderColor: '#3B82F6',
                    backgroundColor: 'rgba(59, 130, 246, 0.1)',
                    tension: 0.4,
                    fill: true
                  }]
                },
                options: {
                  responsive: true,
                  maintainAspectRatio: false,
                  scales: {
                    y: {
                      beginAtZero: true,
                      title: {
                        display: true,
                        text: '重量 (kg)'
                      }
                    },
                    x: {
                      title: {
                        display: true,
                        text: '日付'
                      }
                    }
                  },
                  plugins: {
                    legend: {
                      display: true,
                      position: 'top'
                    }
                  }
                }
              });
              _context7.n = 5;
              break;
            case 4:
              _context7.p = 4;
              _t5 = _context7.v;
              console.error('Error rendering exercise progress chart:', _t5);
            case 5:
              return _context7.a(2);
          }
        }, _callee7, null, [[0, 4]]);
      }));
      function renderExerciseProgressChart(_x, _x2) {
        return _renderExerciseProgressChart.apply(this, arguments);
      }
      return renderExerciseProgressChart;
    }()
    /**
     * イベントリスナーを設定
     */
    )
  }, {
    key: "setupEventListeners",
    value: function setupEventListeners() {
      var _this6 = this;
      // 分析期間の変更
      var periodSelect = (0, _helpers.safeGetElement)('#analysis-period');
      if (periodSelect) {
        periodSelect.addEventListener('change', /*#__PURE__*/function () {
          var _ref4 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee8(event) {
            return _regenerator().w(function (_context8) {
              while (1) switch (_context8.n) {
                case 0:
                  _this6.analysisPeriod = parseInt(event.target.value);
                  console.log('Analysis period changed to:', _this6.analysisPeriod);

                  // プログレッシブ・オーバーロードデータを再読み込み
                  _context8.n = 1;
                  return _this6.loadProgressiveOverloadData();
                case 1:
                  _this6.renderProgressiveOverloadAnalysis();
                case 2:
                  return _context8.a(2);
              }
            }, _callee8);
          }));
          return function (_x3) {
            return _ref4.apply(this, arguments);
          };
        }());
      }

      // 分析更新ボタン
      var refreshBtn = (0, _helpers.safeGetElement)('#refresh-analysis');
      if (refreshBtn) {
        refreshBtn.addEventListener('click', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee9() {
          return _regenerator().w(function (_context9) {
            while (1) switch (_context9.n) {
              case 0:
                _context9.n = 1;
                return _this6.loadProgressiveOverloadData();
              case 1:
                _this6.renderProgressiveOverloadAnalysis();
                (0, _helpers.showNotification)('分析を更新しました', 'success');
              case 2:
                return _context9.a(2);
            }
          }, _callee9);
        })));
      }

      // エクササイズ選択
      var exerciseSelector = (0, _helpers.safeGetElement)('#exercise-selector');
      if (exerciseSelector) {
        exerciseSelector.addEventListener('change', /*#__PURE__*/function () {
          var _ref6 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee0(event) {
            return _regenerator().w(function (_context0) {
              while (1) switch (_context0.n) {
                case 0:
                  _this6.selectedExercise = event.target.value;
                  if (!_this6.selectedExercise) {
                    _context0.n = 1;
                    break;
                  }
                  _context0.n = 1;
                  return _this6.renderExerciseAnalysisFromService(_this6.selectedExercise);
                case 1:
                  return _context0.a(2);
              }
            }, _callee0);
          }));
          return function (_x4) {
            return _ref6.apply(this, arguments);
          };
        }());
      }

      // 筋肉部位選択
      var muscleGroupSelector = (0, _helpers.safeGetElement)('#muscle-group-selector');
      if (muscleGroupSelector) {
        muscleGroupSelector.addEventListener('change', /*#__PURE__*/function () {
          var _ref7 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee1(event) {
            return _regenerator().w(function (_context1) {
              while (1) switch (_context1.n) {
                case 0:
                  _this6.selectedMuscleGroup = event.target.value;
                  if (!_this6.selectedMuscleGroup) {
                    _context1.n = 1;
                    break;
                  }
                  _context1.n = 1;
                  return _this6.renderMuscleGroupAnalysis(_this6.selectedMuscleGroup);
                case 1:
                  return _context1.a(2);
              }
            }, _callee1);
          }));
          return function (_x5) {
            return _ref7.apply(this, arguments);
          };
        }());
      }
    }

    /**
     * エクササイズ分析をレンダリング（プログレッシブ・オーバーロードサービス使用）
     */
  }, {
    key: "renderExerciseAnalysisFromService",
    value: (function () {
      var _renderExerciseAnalysisFromService = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee10(exerciseName) {
        var container, analysis, _t6;
        return _regenerator().w(function (_context10) {
          while (1) switch (_context10.p = _context10.n) {
            case 0:
              container = (0, _helpers.safeGetElement)('#exercise-analysis');
              if (container) {
                _context10.n = 1;
                break;
              }
              return _context10.a(2);
            case 1:
              _context10.p = 1;
              container.innerHTML = "\n        <div class=\"text-center text-gray-500 py-4\">\n          <i class=\"fas fa-spinner fa-spin text-xl mb-2\"></i>\n          <p>".concat(exerciseName, "\u306E\u5206\u6790\u3092\u8AAD\u307F\u8FBC\u307F\u4E2D...</p>\n        </div>\n      ");
              _context10.n = 2;
              return _progressiveOverloadService.progressiveOverloadService.getExerciseProgress(exerciseName, this.analysisPeriod);
            case 2:
              analysis = _context10.v;
              container.innerHTML = "\n        <div class=\"space-y-6\">\n          <!-- \u9032\u6B69\u30E1\u30C8\u30EA\u30AF\u30B9 -->\n          <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div class=\"text-center p-4 bg-blue-50 rounded-lg\">\n              <div class=\"text-2xl font-bold text-blue-600\">".concat(analysis.progressMetrics.volumeProgression, "%</div>\n              <div class=\"text-sm text-gray-600\">\u30DC\u30EA\u30E5\u30FC\u30E0\u9032\u6B69</div>\n            </div>\n            <div class=\"text-center p-4 bg-green-50 rounded-lg\">\n              <div class=\"text-2xl font-bold text-green-600\">").concat(analysis.progressMetrics.intensityProgression, "%</div>\n              <div class=\"text-sm text-gray-600\">\u5F37\u5EA6\u9032\u6B69</div>\n            </div>\n            <div class=\"text-center p-4 bg-purple-50 rounded-lg\">\n              <div class=\"text-2xl font-bold text-purple-600\">").concat(analysis.progressMetrics.consistencyScore, "</div>\n              <div class=\"text-sm text-gray-600\">\u4E00\u8CAB\u6027\u30B9\u30B3\u30A2</div>\n            </div>\n          </div>\n\n          <!-- \u8A73\u7D30\u7D71\u8A08 -->\n          <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div class=\"text-center p-4 border border-gray-200 rounded-lg\">\n              <div class=\"text-xl font-bold text-gray-800\">").concat(analysis.progressMetrics.averageWeight, "kg</div>\n              <div class=\"text-sm text-gray-600\">\u5E73\u5747\u91CD\u91CF</div>\n            </div>\n            <div class=\"text-center p-4 border border-gray-200 rounded-lg\">\n              <div class=\"text-xl font-bold text-gray-800\">").concat(analysis.progressMetrics.averageReps, "</div>\n              <div class=\"text-sm text-gray-600\">\u5E73\u5747\u30EC\u30C3\u30D7\u6570</div>\n            </div>\n            <div class=\"text-center p-4 border border-gray-200 rounded-lg\">\n              <div class=\"text-xl font-bold text-gray-800\">").concat(analysis.progressMetrics.averageSets, "</div>\n              <div class=\"text-sm text-gray-600\">\u5E73\u5747\u30BB\u30C3\u30C8\u6570</div>\n            </div>\n          </div>\n\n          <!-- \u63A8\u5968\u4E8B\u9805 -->\n          <div>\n            <h4 class=\"text-md font-medium text-gray-700 mb-3\">\u63A8\u5968\u4E8B\u9805</h4>\n            <div class=\"space-y-3\">\n              ").concat(analysis.recommendations.map(function (rec) {
                return "\n                <div class=\"p-4 rounded-lg ".concat(rec.priority === 'high' ? 'bg-red-50 border-l-4 border-red-400' : rec.priority === 'medium' ? 'bg-yellow-50 border-l-4 border-yellow-400' : 'bg-green-50 border-l-4 border-green-400', "\">\n                  <div class=\"flex items-start\">\n                    <div class=\"flex-shrink-0\">\n                      <i class=\"fas ").concat(rec.priority === 'high' ? 'fa-exclamation-triangle text-red-400' : rec.priority === 'medium' ? 'fa-info-circle text-yellow-400' : 'fa-check-circle text-green-400', "\"></i>\n                    </div>\n                    <div class=\"ml-3\">\n                      <p class=\"text-sm font-medium ").concat(rec.priority === 'high' ? 'text-red-800' : rec.priority === 'medium' ? 'text-yellow-800' : 'text-green-800', "\">\n                        ").concat(rec.message, "\n                      </p>\n                      <p class=\"text-sm ").concat(rec.priority === 'high' ? 'text-red-700' : rec.priority === 'medium' ? 'text-yellow-700' : 'text-green-700', " mt-1\">\n                        <strong>\u63A8\u5968\u30A2\u30AF\u30B7\u30E7\u30F3:</strong> ").concat(rec.action, "\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              ");
              }).join(''), "\n            </div>\n          </div>\n        </div>\n      ");
              _context10.n = 4;
              break;
            case 3:
              _context10.p = 3;
              _t6 = _context10.v;
              console.error('Error rendering exercise analysis:', _t6);
              container.innerHTML = "\n        <div class=\"text-center text-red-500 py-4\">\n          <i class=\"fas fa-exclamation-triangle text-xl mb-2\"></i>\n          <p>\u30A8\u30AF\u30B5\u30B5\u30A4\u30BA\u5206\u6790\u306E\u8AAD\u307F\u8FBC\u307F\u306B\u5931\u6557\u3057\u307E\u3057\u305F</p>\n        </div>\n      ";
            case 4:
              return _context10.a(2);
          }
        }, _callee10, this, [[1, 3]]);
      }));
      function renderExerciseAnalysisFromService(_x6) {
        return _renderExerciseAnalysisFromService.apply(this, arguments);
      }
      return renderExerciseAnalysisFromService;
    }()
    /**
     * 筋肉部位分析をレンダリング
     */
    )
  }, {
    key: "renderMuscleGroupAnalysis",
    value: (function () {
      var _renderMuscleGroupAnalysis = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee11(muscleGroup) {
        var container, analysis, _t7;
        return _regenerator().w(function (_context11) {
          while (1) switch (_context11.p = _context11.n) {
            case 0:
              container = (0, _helpers.safeGetElement)('#muscle-group-analysis');
              if (container) {
                _context11.n = 1;
                break;
              }
              return _context11.a(2);
            case 1:
              _context11.p = 1;
              container.innerHTML = "\n        <div class=\"text-center text-gray-500 py-4\">\n          <i class=\"fas fa-spinner fa-spin text-xl mb-2\"></i>\n          <p>".concat(this.getMuscleGroupName(muscleGroup), "\u306E\u5206\u6790\u3092\u8AAD\u307F\u8FBC\u307F\u4E2D...</p>\n        </div>\n      ");
              _context11.n = 2;
              return _progressiveOverloadService.progressiveOverloadService.getMuscleGroupProgress(muscleGroup, this.analysisPeriod);
            case 2:
              analysis = _context11.v;
              container.innerHTML = "\n        <div class=\"space-y-6\">\n          <!-- \u57FA\u672C\u7D71\u8A08 -->\n          <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div class=\"text-center p-4 bg-blue-50 rounded-lg\">\n              <div class=\"text-2xl font-bold text-blue-600\">".concat(analysis.totalSessions, "</div>\n              <div class=\"text-sm text-gray-600\">\u7DCF\u30BB\u30C3\u30B7\u30E7\u30F3\u6570</div>\n            </div>\n            <div class=\"text-center p-4 bg-green-50 rounded-lg\">\n              <div class=\"text-2xl font-bold text-green-600\">").concat(analysis.frequencyAnalysis.frequencyScore, "</div>\n              <div class=\"text-sm text-gray-600\">\u983B\u5EA6\u30B9\u30B3\u30A2</div>\n            </div>\n            <div class=\"text-center p-4 bg-purple-50 rounded-lg\">\n              <div class=\"text-2xl font-bold text-purple-600\">").concat(analysis.frequencyAnalysis.averageDaysBetween, "\u65E5</div>\n              <div class=\"text-sm text-gray-600\">\u5E73\u5747\u9593\u9694</div>\n            </div>\n          </div>\n\n          <!-- \u30A8\u30AF\u30B5\u30B5\u30A4\u30BA\u4E00\u89A7 -->\n          <div>\n            <h4 class=\"text-md font-medium text-gray-700 mb-3\">\u30A8\u30AF\u30B5\u30B5\u30A4\u30BA\u4E00\u89A7</h4>\n            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              ").concat(Object.entries(analysis.exercises.exerciseCounts).map(function (_ref8) {
                var _ref9 = _slicedToArray(_ref8, 2),
                  exercise = _ref9[0],
                  count = _ref9[1];
                return "\n                <div class=\"border border-gray-200 rounded-lg p-4\">\n                  <h5 class=\"font-medium text-gray-800 mb-2\">".concat(exercise, "</h5>\n                  <div class=\"space-y-2\">\n                    <div class=\"flex justify-between text-sm\">\n                      <span class=\"text-gray-600\">\u5B9F\u65BD\u56DE\u6570:</span>\n                      <span class=\"font-medium\">").concat(count, "\u56DE</span>\n                    </div>\n                    ").concat(analysis.exercises.exerciseProgress[exercise] ? "\n                      <div class=\"flex justify-between text-sm\">\n                        <span class=\"text-gray-600\">\u91CD\u91CF\u9032\u6B69:</span>\n                        <span class=\"font-medium ".concat(analysis.exercises.exerciseProgress[exercise].weightProgress > 0 ? 'text-green-600' : 'text-red-600', "\">\n                          ").concat(analysis.exercises.exerciseProgress[exercise].weightProgress > 0 ? '+' : '').concat(analysis.exercises.exerciseProgress[exercise].weightProgress, "%\n                        </span>\n                      </div>\n                    ") : '', "\n                  </div>\n                </div>\n              ");
              }).join(''), "\n            </div>\n          </div>\n\n          <!-- \u63A8\u5968\u4E8B\u9805 -->\n          <div>\n            <h4 class=\"text-md font-medium text-gray-700 mb-3\">\u63A8\u5968\u4E8B\u9805</h4>\n            <div class=\"space-y-3\">\n              ").concat(analysis.recommendations.map(function (rec) {
                return "\n                <div class=\"p-4 rounded-lg ".concat(rec.priority === 'high' ? 'bg-red-50 border-l-4 border-red-400' : rec.priority === 'medium' ? 'bg-yellow-50 border-l-4 border-yellow-400' : 'bg-green-50 border-l-4 border-green-400', "\">\n                  <div class=\"flex items-start\">\n                    <div class=\"flex-shrink-0\">\n                      <i class=\"fas ").concat(rec.priority === 'high' ? 'fa-exclamation-triangle text-red-400' : rec.priority === 'medium' ? 'fa-info-circle text-yellow-400' : 'fa-check-circle text-green-400', "\"></i>\n                    </div>\n                    <div class=\"ml-3\">\n                      <p class=\"text-sm font-medium ").concat(rec.priority === 'high' ? 'text-red-800' : rec.priority === 'medium' ? 'text-yellow-800' : 'text-green-800', "\">\n                        ").concat(rec.message, "\n                      </p>\n                      <p class=\"text-sm ").concat(rec.priority === 'high' ? 'text-red-700' : rec.priority === 'medium' ? 'text-yellow-700' : 'text-green-700', " mt-1\">\n                        <strong>\u63A8\u5968\u30A2\u30AF\u30B7\u30E7\u30F3:</strong> ").concat(rec.action, "\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              ");
              }).join(''), "\n            </div>\n          </div>\n        </div>\n      ");
              _context11.n = 4;
              break;
            case 3:
              _context11.p = 3;
              _t7 = _context11.v;
              console.error('Error rendering muscle group analysis:', _t7);
              container.innerHTML = "\n        <div class=\"text-center text-red-500 py-4\">\n          <i class=\"fas fa-exclamation-triangle text-xl mb-2\"></i>\n          <p>\u7B4B\u8089\u90E8\u4F4D\u5206\u6790\u306E\u8AAD\u307F\u8FBC\u307F\u306B\u5931\u6557\u3057\u307E\u3057\u305F</p>\n        </div>\n      ";
            case 4:
              return _context11.a(2);
          }
        }, _callee11, this, [[1, 3]]);
      }));
      function renderMuscleGroupAnalysis(_x7) {
        return _renderMuscleGroupAnalysis.apply(this, arguments);
      }
      return renderMuscleGroupAnalysis;
    }()
    /**
     * 認証ボタンを設定
     */
    )
  }, {
    key: "setupAuthButton",
    value: function setupAuthButton() {
      var authButton = document.getElementById('auth-button');
      if (authButton) {
        authButton.addEventListener('click', function () {
          _authManager.authManager.showAuthModal('login');
        });
      }
    }
  }]);
}(_BasePage2.BasePage); // ページが読み込まれた時に自動初期化
document.addEventListener('DOMContentLoaded', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee12() {
  var progressPage;
  return _regenerator().w(function (_context12) {
    while (1) switch (_context12.n) {
      case 0:
        console.log('Progress page DOM loaded');
        progressPage = new ProgressPage();
        _context12.n = 1;
        return progressPage.initialize();
      case 1:
        window.progressPageInstance = progressPage;
      case 2:
        return _context12.a(2);
    }
  }, _callee12);
})));
var _default = exports["default"] = ProgressPage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,