1deb4bea0892bf8498c90ec4a19efd7b
"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.WorkoutPage = void 0;
var _BasePage2 = require("../core/BasePage.js");
var _Navigation = require("../components/Navigation.js");
var _supabaseService = require("../services/supabaseService.js");
var _authManager = require("../modules/authManager.js");
var _helpers = require("../utils/helpers.js");
var _TooltipManager = require("../utils/TooltipManager.js");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == _typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); } // js/pages/WorkoutPage.js - ワークアウトページ（シンプル版）
/**
 * ワークアウトページクラス（シンプル版）
 */
var WorkoutPage = exports.WorkoutPage = /*#__PURE__*/function (_BasePage) {
  function WorkoutPage() {
    var _this;
    _classCallCheck(this, WorkoutPage);
    _this = _callSuper(this, WorkoutPage);
    _this.navigation = new _Navigation.Navigation();
    _this.currentWorkout = null;
    _this.workoutTimer = null;
    _this.workoutStartTime = null;
    _this.exercises = [];
    _this.muscleGroups = ['胸', '背中', '肩', '腕', '脚', '腹筋'];
    _this.selectedMuscles = [];
    _this.selectedExercises = [];
    _this.eventListenersSetup = false;
    _this.muscleGroupCache = new Map(); // 筋肉グループ名からUUIDへのキャッシュ

    console.log('WorkoutPage constructor called');
    console.log('Muscle groups initialized:', _this.muscleGroups);

    // 筋肉グループのキャッシュを初期化
    _this.initializeMuscleGroupCache();
    return _this;
  }

  /**
  * 認証状態をチェック（オーバーライド）
  */
  _inherits(WorkoutPage, _BasePage);
  return _createClass(WorkoutPage, [{
    key: "checkAuthentication",
    value: (function () {
      var _checkAuthentication = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {
        return _regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              return _context.a(2, true);
          }
        }, _callee);
      }));
      function checkAuthentication() {
        return _checkAuthentication.apply(this, arguments);
      }
      return checkAuthentication;
    }()
    /**
    * ページ固有の初期化処理
    */
    )
  }, {
    key: "onInitialize",
    value: (function () {
      var _onInitialize = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {
        var _this2 = this;
        var isAuthenticated;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              _context2.n = 1;
              return this.checkAuthentication();
            case 1:
              isAuthenticated = _context2.v;
              if (isAuthenticated) {
                _context2.n = 2;
                break;
              }
              return _context2.a(2);
            case 2:
              _context2.n = 3;
              return this.navigation.initialize();
            case 3:
              // ツールチップ機能を初期化
              _TooltipManager.tooltipManager.initialize();

              // エクササイズデータを読み込み
              _context2.n = 4;
              return this.loadExerciseData();
            case 4:
              // 筋肉グループボタンを生成
              this.loadMuscleGroups();

              // エクササイズプリセットを初期化
              this.clearExercisePresets();

              // DOM要素が読み込まれた後にイベントリスナーを設定
              setTimeout(function () {
                console.log('Setting up event listeners after DOM load...');

                // 筋肉部位ボタンの存在を確認
                var muscleButtons = document.querySelectorAll('.muscle-group-btn');
                console.log('Found muscle group buttons:', muscleButtons.length);
                muscleButtons.forEach(function (btn, index) {
                  console.log("Button ".concat(index, ":"), btn.dataset.muscle, btn);
                });

                // イベントリスナーが既に設定されている場合はスキップ
                if (!_this2.eventListenersSetup) {
                  _this2.setupEventListeners();
                  _this2.setupTooltips();
                  _this2.eventListenersSetup = true;
                }
                _this2.updateQuickStartButton();
                console.log('Event listeners setup complete');
              }, 100);
            case 5:
              return _context2.a(2);
          }
        }, _callee2, this);
      }));
      function onInitialize() {
        return _onInitialize.apply(this, arguments);
      }
      return onInitialize;
    }()
    /**
    * ログインプロンプトを表示
    */
    )
  }, {
    key: "showLoginPrompt",
    value: function showLoginPrompt() {
      var mainContent = document.getElementById('main-content');
      if (!mainContent) {
        return;
      }
      mainContent.innerHTML = "\n            <div class=\"min-h-screen flex items-center justify-center bg-gray-50\">\n                <div class=\"max-w-md w-full bg-white rounded-lg shadow-md p-6 text-center\">\n                    <div class=\"mb-6\">\n                        <div class=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-blue-100 mb-4\">\n                            <svg class=\"h-6 w-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"></path>\n                            </svg>\n                        </div>\n                        <h2 class=\"text-2xl font-bold text-gray-900 mb-2\">\u30ED\u30B0\u30A4\u30F3\u304C\u5FC5\u8981\u3067\u3059</h2>\n                        <p class=\"text-gray-600 mb-6\">\u30EF\u30FC\u30AF\u30A2\u30A6\u30C8\u6A5F\u80FD\u3092\u4F7F\u7528\u3059\u308B\u306B\u306F\u30ED\u30B0\u30A4\u30F3\u3057\u3066\u304F\u3060\u3055\u3044\u3002</p>\n                    </div>\n                    <div class=\"space-y-3\">\n                        <button id=\"login-btn\" class=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors\">\n                            \u30ED\u30B0\u30A4\u30F3\n                        </button>\n                        <button onclick=\"window.location.href='/index.html'\" class=\"w-full bg-gray-200 text-gray-800 py-2 px-4 rounded-md hover:bg-gray-300 transition-colors\">\n                            \u30DB\u30FC\u30E0\u306B\u623B\u308B\n                        </button>\n                    </div>\n                </div>\n            </div>\n        ";

      // ログインボタンのイベントリスナーを設定
      var loginBtn = document.getElementById('login-btn');
      if (loginBtn) {
        loginBtn.addEventListener('click', function () {
          _authManager.authManager.showAuthModal('login');
        });
      }
    }

    /**
    * エクササイズデータを読み込み
    */
  }, {
    key: "loadExerciseData",
    value: (function () {
      var _loadExerciseData = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {
        var _t;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.p = _context3.n) {
            case 0:
              _context3.p = 0;
              if (!_supabaseService.supabaseService.isAvailable()) {
                _context3.n = 2;
                break;
              }
              _context3.n = 1;
              return _supabaseService.supabaseService.getExercises();
            case 1:
              this.exercises = _context3.v;
              _context3.n = 3;
              break;
            case 2:
              this.exercises = this.getDefaultExercises();
            case 3:
              _context3.n = 4;
              return this.loadWorkoutHistory();
            case 4:
              _context3.n = 6;
              break;
            case 5:
              _context3.p = 5;
              _t = _context3.v;
              console.error('Failed to load exercise data:', _t);
              (0, _helpers.showNotification)('エクササイズデータの読み込みに失敗しました', 'error');
            case 6:
              return _context3.a(2);
          }
        }, _callee3, this, [[0, 5]]);
      }));
      function loadExerciseData() {
        return _loadExerciseData.apply(this, arguments);
      }
      return loadExerciseData;
    }()
    /**
    * ワークアウト履歴を読み込み
    */
    )
  }, {
    key: "loadWorkoutHistory",
    value: (function () {
      var _loadWorkoutHistory = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {
        var workoutHistory, _t2;
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.p = _context4.n) {
            case 0:
              _context4.p = 0;
              workoutHistory = [];
              if (!_supabaseService.supabaseService.isAvailable()) {
                _context4.n = 2;
                break;
              }
              console.log('Loading workout history from Supabase...');
              _context4.n = 1;
              return _supabaseService.supabaseService.getWorkoutHistory();
            case 1:
              workoutHistory = _context4.v;
              console.log('Workout history loaded from Supabase:', workoutHistory);
              _context4.n = 3;
              break;
            case 2:
              console.log('Supabase not available, showing empty history');
              workoutHistory = [];
            case 3:
              this.updateWorkoutHistory(workoutHistory);
              _context4.n = 5;
              break;
            case 4:
              _context4.p = 4;
              _t2 = _context4.v;
              console.error('Failed to load workout history:', _t2);
              // エラーが発生した場合は空の履歴を表示
              this.updateWorkoutHistory([]);
            case 5:
              return _context4.a(2);
          }
        }, _callee4, this, [[0, 4]]);
      }));
      function loadWorkoutHistory() {
        return _loadWorkoutHistory.apply(this, arguments);
      }
      return loadWorkoutHistory;
    }()
    /**
    * イベントリスナーを設定
    */
    )
  }, {
    key: "setupEventListeners",
    value: function setupEventListeners() {
      var _this3 = this;
      console.log('Setting up event listeners...');

      // 既存のイベントリスナーを削除
      this.removeEventListeners();

      // 筋肉部位ボタンのクリック
      this.muscleGroupClickHandler = function (e) {
        console.log('Click event detected on:', e.target);
        console.log('Event target classList:', e.target.classList);
        console.log('Closest muscle-group-btn:', e.target.closest('.muscle-group-btn'));
        if (e.target.closest('.muscle-group-btn')) {
          var button = e.target.closest('.muscle-group-btn');
          console.log('Muscle group button clicked:', button.dataset.muscle);
          _this3.toggleMuscleGroup(button);
        } else {
          console.log('Click was not on a muscle group button');
        }
      };

      // クイックスタートワークアウトボタン
      this.quickStartClickHandler = function (e) {
        if (e.target.id === 'quick-start-workout') {
          e.preventDefault();
          _this3.startQuickWorkout();
        }
      };

      // ワークアウト終了ボタン
      this.stopWorkoutClickHandler = /*#__PURE__*/function () {
        var _ref = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5(e) {
          return _regenerator().w(function (_context5) {
            while (1) switch (_context5.n) {
              case 0:
                if (!(e.target.id === 'stop-workout')) {
                  _context5.n = 1;
                  break;
                }
                e.preventDefault();
                _context5.n = 1;
                return _this3.stopWorkout();
              case 1:
                return _context5.a(2);
            }
          }, _callee5);
        }));
        return function (_x) {
          return _ref.apply(this, arguments);
        };
      }();

      // エクササイズ追加ボタン
      this.addExerciseClickHandler = function (e) {
        if (e.target.id === 'add-exercise-btn') {
          e.preventDefault();
          _this3.addExercise();
        }
      };

      // イベントリスナーを追加
      document.addEventListener('click', this.muscleGroupClickHandler);
      document.addEventListener('click', this.quickStartClickHandler);
      document.addEventListener('click', this.stopWorkoutClickHandler);
      document.addEventListener('click', this.addExerciseClickHandler);
    }

    /**
    * イベントリスナーを削除
    */
  }, {
    key: "removeEventListeners",
    value: function removeEventListeners() {
      if (this.muscleGroupClickHandler) {
        document.removeEventListener('click', this.muscleGroupClickHandler);
      }
      if (this.quickStartClickHandler) {
        document.removeEventListener('click', this.quickStartClickHandler);
      }
      if (this.stopWorkoutClickHandler) {
        document.removeEventListener('click', this.stopWorkoutClickHandler);
      }
      if (this.addExerciseClickHandler) {
        document.removeEventListener('click', this.addExerciseClickHandler);
      }
    }

    /**
    * クイックスタートワークアウトを開始
    */
  }, {
    key: "startQuickWorkout",
    value: function startQuickWorkout() {
      var selectedMuscles = Array.from(document.querySelectorAll('.muscle-group-btn.selected')).map(function (btn) {
        return btn.dataset.muscle;
      });
      if (selectedMuscles.length === 0) {
        (0, _helpers.showNotification)('筋肉部位を選択してください', 'warning');
        return;
      }

      // ワークアウトを開始
      this.currentWorkout = {
        muscleGroups: selectedMuscles,
        startTime: new Date(),
        sessionName: "".concat(selectedMuscles.join(', '), "\u306E\u30EF\u30FC\u30AF\u30A2\u30A6\u30C8 - ").concat(new Date().toLocaleDateString('ja-JP'))
      };

      // クイックスタートセクションを非表示にして、現在のワークアウトセクションを表示
      var quickStartSection = document.querySelector('.muscle-card');
      if (quickStartSection) {
        quickStartSection.classList.add('hidden');
      }
      document.getElementById('current-workout').classList.remove('hidden');

      // タイマーを開始
      this.startWorkoutTimer();
      (0, _helpers.showNotification)('ワークアウトを開始しました', 'success');
    }

    /**
    * 筋肉部位の選択状態を切り替え
    */
  }, {
    key: "toggleMuscleGroup",
    value: function toggleMuscleGroup(button) {
      console.log('Toggling muscle group:', button.dataset.muscle);
      button.classList.toggle('selected');

      // 選択状態の視覚的フィードバック
      if (button.classList.contains('selected')) {
        button.style.backgroundColor = '#3B82F6';
        button.style.color = 'white';
        button.style.borderColor = '#3B82F6';
        console.log('Muscle group selected:', button.dataset.muscle);
      } else {
        button.style.backgroundColor = '';
        button.style.color = '';
        button.style.borderColor = '';
        console.log('Muscle group deselected:', button.dataset.muscle);
      }
      this.updateQuickStartButton();
      this.loadExercisesForSelectedMuscles();
    }

    /**
    * クイックスタートボタンの状態を更新
    */
  }, {
    key: "updateQuickStartButton",
    value: function updateQuickStartButton() {
      var selectedMuscles = document.querySelectorAll('.muscle-group-btn.selected');
      var quickStartButton = document.getElementById('quick-start-workout');
      console.log('Updating quick start button...');
      console.log('Selected muscles count:', selectedMuscles.length);
      console.log('Quick start button found:', quickStartButton);
      if (quickStartButton) {
        if (selectedMuscles.length > 0) {
          quickStartButton.disabled = false;
          quickStartButton.classList.remove('opacity-50', 'cursor-not-allowed');
          quickStartButton.classList.add('hover:bg-blue-700');
          console.log('Quick start button enabled');
        } else {
          quickStartButton.disabled = true;
          quickStartButton.classList.add('opacity-50', 'cursor-not-allowed');
          quickStartButton.classList.remove('hover:bg-blue-700');
          console.log('Quick start button disabled');
        }
      } else {
        console.error('Quick start button not found!');
      }
    }

    /**
    * ワークアウトを開始
    */
  }, {
    key: "startWorkout",
    value: function startWorkout(muscleGroup) {
      console.log("Starting workout for: ".concat(muscleGroup));
      this.currentWorkout = {
        muscleGroup: muscleGroup,
        startTime: new Date(),
        sessionName: "".concat(muscleGroup, "\u306E\u30EF\u30FC\u30AF\u30A2\u30A6\u30C8 - ").concat(new Date().toLocaleDateString('ja-JP'))
      };

      // クイックスタートセクションを非表示にして、現在のワークアウトセクションを表示
      var quickStartSection = document.querySelector('.muscle-card');
      if (quickStartSection) {
        quickStartSection.classList.add('hidden');
      }
      document.getElementById('current-workout').classList.remove('hidden');

      // タイマーを開始
      this.startWorkoutTimer();
      (0, _helpers.showNotification)("".concat(muscleGroup, "\u306E\u30EF\u30FC\u30AF\u30A2\u30A6\u30C8\u3092\u958B\u59CB\u3057\u307E\u3057\u305F"), 'success');
    }

    /**
    * ワークアウトを停止
    */
  }, {
    key: "stopWorkout",
    value: (function () {
      var _stopWorkout = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6() {
        var endTime, duration, quickStartSection;
        return _regenerator().w(function (_context6) {
          while (1) switch (_context6.n) {
            case 0:
              if (this.workoutTimer) {
                clearInterval(this.workoutTimer);
                this.workoutTimer = null;
              }
              if (!this.currentWorkout) {
                _context6.n = 1;
                break;
              }
              endTime = new Date();
              duration = Math.floor((endTime - this.currentWorkout.startTime) / 60000);
              (0, _helpers.showNotification)("\u30EF\u30FC\u30AF\u30A2\u30A6\u30C8\u3092\u7D42\u4E86\u3057\u307E\u3057\u305F\uFF08".concat(duration, "\u5206\uFF09"), 'success');

              // ワークアウト履歴に保存
              _context6.n = 1;
              return this.saveWorkoutToHistory();
            case 1:
              // 現在のワークアウトセクションを非表示にして、クイックスタートセクションを表示
              document.getElementById('current-workout').classList.add('hidden');
              quickStartSection = document.querySelector('.muscle-card');
              if (quickStartSection) {
                quickStartSection.classList.remove('hidden');
              }
              this.currentWorkout = null;
            case 2:
              return _context6.a(2);
          }
        }, _callee6, this);
      }));
      function stopWorkout() {
        return _stopWorkout.apply(this, arguments);
      }
      return stopWorkout;
    }()
    /**
    * エクササイズを追加
    */
    )
  }, {
    key: "addExercise",
    value: function addExercise() {
      var exerciseName = window.prompt('エクササイズ名を入力してください:');
      if (exerciseName && exerciseName.trim()) {
        this.addExerciseToWorkout(exerciseName.trim());
      }
    }

    /**
    * ワークアウトにエクササイズを追加
    */
  }, {
    key: "addExerciseToWorkout",
    value: function addExerciseToWorkout(exerciseName) {
      var container = document.getElementById('workout-exercises');
      if (!container) {
        return;
      }
      var exerciseElement = document.createElement('div');
      exerciseElement.className = 'flex items-center justify-between p-4 bg-white border border-gray-200 rounded-lg';
      exerciseElement.innerHTML = "\n            <div class=\"flex items-center\">\n                <i class=\"fas fa-dumbbell text-blue-500 mr-3\"></i>\n                <span class=\"font-medium text-gray-900\">".concat(exerciseName, "</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <button class=\"btn-secondary text-sm px-3 py-1\">\n                    <i class=\"fas fa-plus mr-1\"></i>\u30BB\u30C3\u30C8\u8FFD\u52A0\n                </button>\n                <button class=\"btn-danger text-sm px-3 py-1\">\n                    <i class=\"fas fa-trash mr-1\"></i>\u524A\u9664\n                </button>\n            </div>\n        ");
      container.appendChild(exerciseElement);
      (0, _helpers.showNotification)("".concat(exerciseName, "\u3092\u8FFD\u52A0\u3057\u307E\u3057\u305F"), 'success');
    }

    /**
    * 筋肉グループボタンを生成
    */
  }, {
    key: "loadMuscleGroups",
    value: function loadMuscleGroups() {
      var container = document.getElementById('muscle-groups-grid');
      if (!container) {
        console.error('Muscle groups grid container not found');
        return;
      }

      // 筋肉グループのアイコンと色を定義
      var muscleGroupConfig = {
        胸: {
          icon: 'fas fa-heart',
          color: 'text-red-500',
          bgColor: 'bg-red-50',
          hoverColor: 'hover:bg-red-100'
        },
        背中: {
          icon: 'fas fa-user',
          color: 'text-blue-500',
          bgColor: 'bg-blue-50',
          hoverColor: 'hover:bg-blue-100'
        },
        肩: {
          icon: 'fas fa-arrow-up',
          color: 'text-green-500',
          bgColor: 'bg-green-50',
          hoverColor: 'hover:bg-green-100'
        },
        腕: {
          icon: 'fas fa-hand-paper',
          color: 'text-purple-500',
          bgColor: 'bg-purple-50',
          hoverColor: 'hover:bg-purple-100'
        },
        脚: {
          icon: 'fas fa-running',
          color: 'text-orange-500',
          bgColor: 'bg-orange-50',
          hoverColor: 'hover:bg-orange-100'
        },
        腹筋: {
          icon: 'fas fa-dumbbell',
          color: 'text-yellow-500',
          bgColor: 'bg-yellow-50',
          hoverColor: 'hover:bg-yellow-100'
        }
      };
      container.innerHTML = this.muscleGroups.map(function (muscle) {
        var config = muscleGroupConfig[muscle] || {
          icon: 'fas fa-dumbbell',
          color: 'text-gray-500',
          bgColor: 'bg-gray-50',
          hoverColor: 'hover:bg-gray-100'
        };
        return "\n                <button class=\"muscle-group-btn ".concat(config.bgColor, " ").concat(config.hoverColor, " border-2 border-gray-200 rounded-lg p-4 text-center transition-all duration-200 hover:shadow-md\" \n                        data-muscle=\"").concat(muscle, "\">\n                    <div class=\"flex flex-col items-center space-y-2\">\n                        <i class=\"").concat(config.icon, " ").concat(config.color, " text-2xl\"></i>\n                        <span class=\"font-medium text-gray-800\">").concat(muscle, "</span>\n                    </div>\n                </button>\n            ");
      }).join('');
      console.log('Muscle group buttons generated:', this.muscleGroups.length);
    }

    /**
    * 選択された筋肉グループに基づいてエクササイズを表示
    */
  }, {
    key: "loadExercisesForSelectedMuscles",
    value: function loadExercisesForSelectedMuscles() {
      var _this4 = this;
      var selectedMuscles = Array.from(document.querySelectorAll('.muscle-group-btn.selected')).map(function (btn) {
        return btn.dataset.muscle;
      });
      if (selectedMuscles.length === 0) {
        this.clearExercisePresets();
        return;
      }
      var container = document.getElementById('exercise-presets');
      if (!container) {
        console.error('Exercise presets container not found');
        return;
      }

      // 選択された筋肉グループのエクササイズを取得
      var relevantExercises = this.getDefaultExercises().filter(function (exercise) {
        return selectedMuscles.includes(exercise.muscle_group);
      });
      if (relevantExercises.length === 0) {
        container.innerHTML = "\n                <div class=\"col-span-full text-center text-gray-500 py-4\">\n                    <i class=\"fas fa-info-circle text-xl mb-2\"></i>\n                    <p>\u9078\u629E\u3055\u308C\u305F\u90E8\u4F4D\u306E\u30A8\u30AF\u30B5\u30B5\u30A4\u30BA\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093</p>\n                </div>\n            ";
        return;
      }
      container.innerHTML = relevantExercises.map(function (exercise) {
        return "\n            <button class=\"exercise-preset-btn bg-white border border-gray-200 rounded-lg p-3 text-left hover:bg-gray-50 hover:border-blue-300 transition-all duration-200\" \n                    data-exercise=\"".concat(exercise.name, "\" data-muscle=\"").concat(exercise.muscle_group, "\">\n                <div class=\"flex items-center justify-between\">\n                    <div>\n                        <h4 class=\"font-medium text-gray-900\">").concat(exercise.name, "</h4>\n                        <p class=\"text-sm text-gray-500\">").concat(exercise.muscle_group, " \u2022 ").concat(exercise.equipment, "</p>\n                    </div>\n                    <div class=\"flex items-center space-x-1\">\n                        ").concat('★'.repeat(exercise.difficulty), "\n                        <span class=\"text-xs text-gray-400 ml-1\">").concat(exercise.difficulty, "/5</span>\n                    </div>\n                </div>\n            </button>\n        ");
      }).join('');

      // エクササイズボタンのイベントリスナーを設定
      container.querySelectorAll('.exercise-preset-btn').forEach(function (btn) {
        btn.addEventListener('click', function () {
          var exerciseName = btn.dataset.exercise;
          _this4.addExerciseToWorkout(exerciseName);
        });
      });
      console.log('Loaded exercises for selected muscles:', selectedMuscles, relevantExercises.length);
    }

    /**
    * エクササイズプリセットをクリア
    */
  }, {
    key: "clearExercisePresets",
    value: function clearExercisePresets() {
      var container = document.getElementById('exercise-presets');
      if (container) {
        container.innerHTML = "\n                <div class=\"col-span-full text-center text-gray-500 py-4\">\n                    <i class=\"fas fa-hand-pointer text-xl mb-2\"></i>\n                    <p>\u7B4B\u8089\u90E8\u4F4D\u3092\u9078\u629E\u3057\u3066\u304F\u3060\u3055\u3044</p>\n                </div>\n            ";
      }
    }

    /**
    * 筋肉グループのキャッシュを初期化
    */
  }, {
    key: "initializeMuscleGroupCache",
    value: (function () {
      var _initializeMuscleGroupCache = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee7() {
        var _this5 = this;
        var _yield$supabaseServic, data, error, _t3;
        return _regenerator().w(function (_context7) {
          while (1) switch (_context7.p = _context7.n) {
            case 0:
              _context7.p = 0;
              if (_supabaseService.supabaseService.isAvailable()) {
                _context7.n = 1;
                break;
              }
              console.log('Supabase not available, cannot initialize muscle group cache');
              return _context7.a(2);
            case 1:
              _context7.n = 2;
              return _supabaseService.supabaseService.client.from('muscle_groups').select('id, name_ja');
            case 2:
              _yield$supabaseServic = _context7.v;
              data = _yield$supabaseServic.data;
              error = _yield$supabaseServic.error;
              if (!error) {
                _context7.n = 3;
                break;
              }
              console.error('Failed to load muscle groups:', error);
              return _context7.a(2);
            case 3:
              if (data) {
                data.forEach(function (muscle) {
                  _this5.muscleGroupCache.set(muscle.name_ja, muscle.id);
                });
                console.log('Muscle group cache initialized:', this.muscleGroupCache);
              }
              _context7.n = 5;
              break;
            case 4:
              _context7.p = 4;
              _t3 = _context7.v;
              console.error('Error initializing muscle group cache:', _t3);
            case 5:
              return _context7.a(2);
          }
        }, _callee7, this, [[0, 4]]);
      }));
      function initializeMuscleGroupCache() {
        return _initializeMuscleGroupCache.apply(this, arguments);
      }
      return initializeMuscleGroupCache;
    }()
    /**
    * 筋肉グループ名をUUIDに変換
    */
    )
  }, {
    key: "convertMuscleGroupsToUUIDs",
    value: (function () {
      var _convertMuscleGroupsToUUIDs = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee8(muscleGroupNames) {
        var muscleGroupUUIDs, _iterator, _step, muscleName, uuid, _yield$supabaseServic2, data, error, _t4, _t5;
        return _regenerator().w(function (_context8) {
          while (1) switch (_context8.p = _context8.n) {
            case 0:
              _context8.p = 0;
              if (_supabaseService.supabaseService.isAvailable()) {
                _context8.n = 1;
                break;
              }
              console.log('Supabase not available, cannot convert muscle groups to UUIDs');
              return _context8.a(2, []);
            case 1:
              muscleGroupUUIDs = [];
              _iterator = _createForOfIteratorHelper(muscleGroupNames);
              _context8.p = 2;
              _iterator.s();
            case 3:
              if ((_step = _iterator.n()).done) {
                _context8.n = 8;
                break;
              }
              muscleName = _step.value;
              if (!this.muscleGroupCache.has(muscleName)) {
                _context8.n = 4;
                break;
              }
              uuid = this.muscleGroupCache.get(muscleName);
              muscleGroupUUIDs.push(uuid);
              console.log("Using cached UUID for ".concat(muscleName, ": ").concat(uuid));
              return _context8.a(3, 7);
            case 4:
              _context8.n = 5;
              return _supabaseService.supabaseService.client.from('muscle_groups').select('id').eq('name_ja', muscleName).single();
            case 5:
              _yield$supabaseServic2 = _context8.v;
              data = _yield$supabaseServic2.data;
              error = _yield$supabaseServic2.error;
              if (!error) {
                _context8.n = 6;
                break;
              }
              console.error("Failed to get UUID for muscle group ".concat(muscleName, ":"), error);
              return _context8.a(3, 7);
            case 6:
              if (data && data.id) {
                // キャッシュに保存
                this.muscleGroupCache.set(muscleName, data.id);
                muscleGroupUUIDs.push(data.id);
                console.log("Converted ".concat(muscleName, " to UUID: ").concat(data.id));
              }
            case 7:
              _context8.n = 3;
              break;
            case 8:
              _context8.n = 10;
              break;
            case 9:
              _context8.p = 9;
              _t4 = _context8.v;
              _iterator.e(_t4);
            case 10:
              _context8.p = 10;
              _iterator.f();
              return _context8.f(10);
            case 11:
              return _context8.a(2, muscleGroupUUIDs);
            case 12:
              _context8.p = 12;
              _t5 = _context8.v;
              console.error('Error converting muscle groups to UUIDs:', _t5);
              return _context8.a(2, []);
          }
        }, _callee8, this, [[2, 9, 10, 11], [0, 12]]);
      }));
      function convertMuscleGroupsToUUIDs(_x2) {
        return _convertMuscleGroupsToUUIDs.apply(this, arguments);
      }
      return convertMuscleGroupsToUUIDs;
    }()
    /**
    * ワークアウト履歴に保存
    */
    )
  }, {
    key: "saveWorkoutToHistory",
    value: (function () {
      var _saveWorkoutToHistory = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee9() {
        var endTime, duration, muscleGroupUUIDs, currentUser, workoutData, history, _t6;
        return _regenerator().w(function (_context9) {
          while (1) switch (_context9.p = _context9.n) {
            case 0:
              if (this.currentWorkout) {
                _context9.n = 1;
                break;
              }
              console.log('No current workout to save');
              return _context9.a(2);
            case 1:
              if (!this.currentWorkout.saved) {
                _context9.n = 2;
                break;
              }
              console.log('Workout already saved, skipping duplicate save');
              return _context9.a(2);
            case 2:
              endTime = new Date();
              duration = Math.floor((endTime - this.currentWorkout.startTime) / 60000); // 筋肉グループ名をUUIDに変換
              _context9.n = 3;
              return this.convertMuscleGroupsToUUIDs(this.currentWorkout.muscleGroups);
            case 3:
              muscleGroupUUIDs = _context9.v;
              console.log('Converted muscle groups to UUIDs:', muscleGroupUUIDs);

              // 現在のユーザーIDを取得
              _context9.n = 4;
              return _authManager.authManager.getCurrentUser();
            case 4:
              currentUser = _context9.v;
              if (currentUser) {
                _context9.n = 5;
                break;
              }
              console.error('No authenticated user found');
              (0, _helpers.showNotification)('ログインが必要です', 'error');
              return _context9.a(2);
            case 5:
              workoutData = {
                user_id: currentUser.id,
                session_name: this.currentWorkout.sessionName,
                muscle_groups_trained: muscleGroupUUIDs,
                workout_date: this.currentWorkout.startTime.toISOString(),
                total_duration_minutes: duration,
                created_at: new Date().toISOString(),
                updated_at: new Date().toISOString()
              };
              console.log('Saving workout to Supabase:', workoutData);
              _context9.p = 6;
              if (!_supabaseService.supabaseService.isAvailable()) {
                _context9.n = 9;
                break;
              }
              _context9.n = 7;
              return _supabaseService.supabaseService.saveWorkout(workoutData);
            case 7:
              console.log('Workout saved to Supabase successfully');

              // 履歴を再読み込み
              _context9.n = 8;
              return this.loadWorkoutHistory();
            case 8:
              _context9.n = 10;
              break;
            case 9:
              console.log('Supabase not available, saving to localStorage as fallback');
              // フォールバック: ローカルストレージに保存
              history = JSON.parse(localStorage.getItem('workoutHistory') || '[]');
              history.push(_objectSpread(_objectSpread({}, workoutData), {}, {
                endTime: endTime,
                duration: duration
              }));
              localStorage.setItem('workoutHistory', JSON.stringify(history));
              this.updateWorkoutHistory(history);
            case 10:
              // 現在のワークアウトに保存済みフラグを設定
              this.currentWorkout.saved = true;
              _context9.n = 12;
              break;
            case 11:
              _context9.p = 11;
              _t6 = _context9.v;
              console.error('Failed to save workout:', _t6);
              (0, _helpers.showNotification)('ワークアウトの保存に失敗しました', 'error');
            case 12:
              return _context9.a(2);
          }
        }, _callee9, this, [[6, 11]]);
      }));
      function saveWorkoutToHistory() {
        return _saveWorkoutToHistory.apply(this, arguments);
      }
      return saveWorkoutToHistory;
    }()
    /**
    * ワークアウトタイマーを開始
    */
    )
  }, {
    key: "startWorkoutTimer",
    value: function startWorkoutTimer() {
      var _this6 = this;
      this.workoutStartTime = new Date();
      this.workoutTimer = setInterval(function () {
        _this6.updateWorkoutTimer();
      }, 1000);
    }

    /**
    * ワークアウトタイマーを更新
    */
  }, {
    key: "updateWorkoutTimer",
    value: function updateWorkoutTimer() {
      if (!this.workoutStartTime) {
        return;
      }
      var now = new Date();
      var diff = now - this.workoutStartTime;
      var minutes = Math.floor(diff / 60000);
      var seconds = Math.floor(diff % 60000 / 1000);
      var timerDisplay = document.getElementById('workout-timer');
      if (timerDisplay) {
        timerDisplay.textContent = "".concat(minutes.toString().padStart(2, '0'), ":").concat(seconds.toString().padStart(2, '0'));
      }
    }

    /**
    * デフォルトエクササイズを取得
    */
  }, {
    key: "getDefaultExercises",
    value: function getDefaultExercises() {
      return [
      // 胸筋エクササイズ
      {
        name: 'ベンチプレス',
        muscle_group: '胸',
        difficulty: 3,
        equipment: 'バーベル'
      }, {
        name: 'プッシュアップ',
        muscle_group: '胸',
        difficulty: 2,
        equipment: '自重'
      }, {
        name: 'ダンベルフライ',
        muscle_group: '胸',
        difficulty: 2,
        equipment: 'ダンベル'
      }, {
        name: 'インクラインプレス',
        muscle_group: '胸',
        difficulty: 3,
        equipment: 'バーベル'
      }, {
        name: 'ディップス',
        muscle_group: '胸',
        difficulty: 3,
        equipment: '自重'
      },
      // 背筋エクササイズ
      {
        name: 'デッドリフト',
        muscle_group: '背中',
        difficulty: 4,
        equipment: 'バーベル'
      }, {
        name: 'プルアップ',
        muscle_group: '背中',
        difficulty: 4,
        equipment: '自重'
      }, {
        name: 'ベントオーバーロウ',
        muscle_group: '背中',
        difficulty: 3,
        equipment: 'バーベル'
      }, {
        name: 'ラットプルダウン',
        muscle_group: '背中',
        difficulty: 2,
        equipment: 'マシン'
      }, {
        name: 'ワンハンドダンベルロウ',
        muscle_group: '背中',
        difficulty: 3,
        equipment: 'ダンベル'
      },
      // 脚筋エクササイズ
      {
        name: 'スクワット',
        muscle_group: '脚',
        difficulty: 3,
        equipment: 'バーベル'
      }, {
        name: 'ランジ',
        muscle_group: '脚',
        difficulty: 2,
        equipment: '自重'
      }, {
        name: 'レッグプレス',
        muscle_group: '脚',
        difficulty: 2,
        equipment: 'マシン'
      }, {
        name: 'ブルガリアンスクワット',
        muscle_group: '脚',
        difficulty: 3,
        equipment: '自重'
      }, {
        name: 'カーフレイズ',
        muscle_group: '脚',
        difficulty: 1,
        equipment: '自重'
      },
      // 肩筋エクササイズ
      {
        name: 'オーバーヘッドプレス',
        muscle_group: '肩',
        difficulty: 3,
        equipment: 'バーベル'
      }, {
        name: 'サイドレイズ',
        muscle_group: '肩',
        difficulty: 2,
        equipment: 'ダンベル'
      }, {
        name: 'フロントレイズ',
        muscle_group: '肩',
        difficulty: 2,
        equipment: 'ダンベル'
      }, {
        name: 'リアデルトフライ',
        muscle_group: '肩',
        difficulty: 2,
        equipment: 'ダンベル'
      }, {
        name: 'アーノルドプレス',
        muscle_group: '肩',
        difficulty: 3,
        equipment: 'ダンベル'
      },
      // 腕筋エクササイズ
      {
        name: 'バーベルカール',
        muscle_group: '腕',
        difficulty: 2,
        equipment: 'バーベル'
      }, {
        name: 'ダンベルカール',
        muscle_group: '腕',
        difficulty: 2,
        equipment: 'ダンベル'
      }, {
        name: 'トライセップディップス',
        muscle_group: '腕',
        difficulty: 3,
        equipment: '自重'
      }, {
        name: 'ハンマーカール',
        muscle_group: '腕',
        difficulty: 2,
        equipment: 'ダンベル'
      }, {
        name: 'クローズグリッププッシュアップ',
        muscle_group: '腕',
        difficulty: 3,
        equipment: '自重'
      },
      // 腹筋エクササイズ
      {
        name: 'プランク',
        muscle_group: '腹筋',
        difficulty: 2,
        equipment: '自重'
      }, {
        name: 'クランチ',
        muscle_group: '腹筋',
        difficulty: 1,
        equipment: '自重'
      }, {
        name: 'サイドプランク',
        muscle_group: '腹筋',
        difficulty: 2,
        equipment: '自重'
      }, {
        name: 'ロシアンツイスト',
        muscle_group: '腹筋',
        difficulty: 2,
        equipment: '自重'
      }, {
        name: 'マウンテンクライマー',
        muscle_group: '腹筋',
        difficulty: 3,
        equipment: '自重'
      }];
    }

    /**
    * ワークアウト履歴を更新
    */
  }, {
    key: "updateWorkoutHistory",
    value: function updateWorkoutHistory(workoutHistory) {
      var _this7 = this;
      var container = document.getElementById('workout-history');
      if (!container) {
        return;
      }
      console.log('Updating workout history with data:', workoutHistory);
      if (workoutHistory.length === 0) {
        container.innerHTML = "\n        <div class=\"text-center py-8 text-gray-500\">\n          <i class=\"fas fa-history text-4xl mb-4\"></i>\n          <p>\u307E\u3060\u30EF\u30FC\u30AF\u30A2\u30A6\u30C8\u304C\u8A18\u9332\u3055\u308C\u3066\u3044\u307E\u305B\u3093</p>\n        </div>\n      ";
        return;
      }
      var recentWorkouts = workoutHistory.sort(function (a, b) {
        var dateA = a.workout_date || a.startTime || a.created_at;
        var dateB = b.workout_date || b.startTime || b.created_at;
        return new Date(dateB) - new Date(dateA);
      }).slice(0, 10);
      container.innerHTML = recentWorkouts.map(function (workout) {
        // データベースの構造に応じて適切なフィールドを取得
        var sessionName = workout.session_name || workout.sessionName || 'ワークアウト';
        var muscleGroups = workout.muscle_groups_trained || workout.muscleGroups || workout.muscle_groups || [];
        var duration = workout.total_duration_minutes || workout.duration || workout.total_duration || 0;
        var workoutDate = workout.workout_date || workout.startTime || workout.created_at || workout.date;
        console.log('Processing workout:', {
          sessionName: sessionName,
          muscleGroups: muscleGroups,
          duration: duration,
          workoutDate: workoutDate
        });
        return "\n      <div class=\"flex items-center justify-between p-4 border-b border-gray-200\">\n        <div class=\"flex items-center\">\n          <div class=\"flex-shrink-0\">\n            <i class=\"fas fa-dumbbell text-blue-600\"></i>\n          </div>\n          <div class=\"ml-4\">\n            <div class=\"text-sm font-medium text-gray-900\">".concat(sessionName, "</div>\n            <div class=\"text-sm text-gray-500\">").concat(Array.isArray(muscleGroups) ? muscleGroups.join(', ') : muscleGroups || '部位不明', "</div>\n          </div>\n        </div>\n        <div class=\"text-right\">\n          <div class=\"text-sm text-gray-900\">").concat(duration, "\u5206</div>\n          <div class=\"text-sm text-gray-500\">").concat(_this7.formatDate(workoutDate), "</div>\n        </div>\n      </div>\n    ");
      }).join('');
    }

    /**
    * 日付をフォーマット
    */
  }, {
    key: "formatDate",
    value: function formatDate(dateString) {
      if (!dateString) {
        return '日付不明';
      }
      try {
        var date = new Date(dateString);
        if (isNaN(date.getTime())) {
          return '日付不明';
        }
        return date.toLocaleDateString('ja-JP');
      } catch (error) {
        console.error('Failed to format date:', dateString, error);
        return '日付不明';
      }
    }

    /**
    * ローカルストレージから読み込み
    */
  }, {
    key: "loadFromLocalStorage",
    value: function loadFromLocalStorage(key) {
      try {
        return JSON.parse(localStorage.getItem(key) || '[]');
      } catch (error) {
        console.error("Failed to load from localStorage (".concat(key, "):"), error);
        return [];
      }
    }

    /**
    * ツールチップを設定
    */
  }, {
    key: "setupTooltips",
    value: function setupTooltips() {
      try {
        console.log('Setting up tooltips for workout page');

        // 筋肉部位ボタンのツールチップ
        _TooltipManager.tooltipManager.addTooltip('.muscle-group-btn[data-muscle="胸"]', '胸筋（大胸筋）を鍛えるエクササイズ。ベンチプレス、プッシュアップなど。', {
          position: 'top',
          theme: 'primary',
          animation: 'bounce',
          arrow: true,
          delay: 200
        });
        _TooltipManager.tooltipManager.addTooltip('.muscle-group-btn[data-muscle="背中"]', '背筋群を鍛えるエクササイズ。ラットプルダウン、ローイングなど。', {
          position: 'top',
          theme: 'success',
          animation: 'slide',
          arrow: true,
          delay: 200
        });
        _TooltipManager.tooltipManager.addTooltip('.muscle-group-btn[data-muscle="肩"]', '肩（三角筋）を鍛えるエクササイズ。ショルダープレス、サイドレイズなど。', {
          position: 'top',
          theme: 'warning',
          animation: 'scale',
          arrow: true,
          delay: 200
        });
        _TooltipManager.tooltipManager.addTooltip('.muscle-group-btn[data-muscle="腕"]', '上腕二頭筋・三頭筋を鍛えるエクササイズ。アームカール、トライセップスなど。', {
          position: 'top',
          theme: 'primary',
          animation: 'fadeIn',
          arrow: true,
          delay: 200
        });
        _TooltipManager.tooltipManager.addTooltip('.muscle-group-btn[data-muscle="脚"]', '脚部（大腿四頭筋・ハムストリング）を鍛えるエクササイズ。スクワット、レッグプレスなど。', {
          position: 'top',
          theme: 'success',
          animation: 'bounce',
          arrow: true,
          delay: 200
        });
        _TooltipManager.tooltipManager.addTooltip('.muscle-group-btn[data-muscle="腹筋"]', '腹筋群を鍛えるエクササイズ。クランチ、プランクなど。', {
          position: 'top',
          theme: 'warning',
          animation: 'slide',
          arrow: true,
          delay: 200
        });

        // クイックスタートボタンのツールチップ
        _TooltipManager.tooltipManager.addTooltip('#quick-start-btn', '推奨される筋肉部位のエクササイズを自動選択してワークアウトを開始します。', {
          position: 'top',
          theme: 'primary',
          animation: 'bounce',
          arrow: true,
          delay: 300
        });

        // ワークアウト開始ボタンのツールチップ
        _TooltipManager.tooltipManager.addTooltip('#start-workout-btn', '選択したエクササイズでワークアウトを開始します。タイマーが自動で開始されます。', {
          position: 'top',
          theme: 'success',
          animation: 'scale',
          arrow: true,
          delay: 300
        });

        // ワークアウト終了ボタンのツールチップ
        _TooltipManager.tooltipManager.addTooltip('#end-workout-btn', '現在のワークアウトを終了し、結果を保存します。', {
          position: 'top',
          theme: 'error',
          animation: 'fadeIn',
          arrow: true,
          delay: 300
        });

        // エクササイズ追加ボタンのツールチップ
        _TooltipManager.tooltipManager.addTooltip('#add-exercise-btn', '新しいエクササイズをワークアウトに追加します。', {
          position: 'top',
          theme: 'primary',
          animation: 'slide',
          arrow: true,
          delay: 200
        });

        // セット追加ボタンのツールチップ
        _TooltipManager.tooltipManager.addTooltip('.add-set-btn', 'このエクササイズに新しいセットを追加します。', {
          position: 'top',
          theme: 'success',
          animation: 'scale',
          arrow: true,
          delay: 200
        });

        // セット削除ボタンのツールチップ
        _TooltipManager.tooltipManager.addTooltip('.remove-set-btn', 'このセットを削除します。', {
          position: 'top',
          theme: 'error',
          animation: 'fadeIn',
          arrow: true,
          delay: 200
        });

        // エクササイズ削除ボタンのツールチップ
        _TooltipManager.tooltipManager.addTooltip('.remove-exercise-btn', 'このエクササイズをワークアウトから削除します。', {
          position: 'top',
          theme: 'error',
          animation: 'slide',
          arrow: true,
          delay: 200
        });
        console.log('✅ Tooltips setup complete for workout page');
      } catch (error) {
        console.error('❌ Failed to setup tooltips:', error);
      }
    }
  }]);
}(_BasePage2.BasePage); // MPAInitializer用のエクスポート
var workoutPage = new WorkoutPage();
var _default = exports["default"] = {
  initialize: function () {
    var _initialize = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee0() {
      return _regenerator().w(function (_context0) {
        while (1) switch (_context0.n) {
          case 0:
            _context0.n = 1;
            return workoutPage.initialize();
          case 1:
            return _context0.a(2);
        }
      }, _callee0);
    }));
    function initialize() {
      return _initialize.apply(this, arguments);
    }
    return initialize;
  }()
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfQmFzZVBhZ2UyIiwicmVxdWlyZSIsIl9OYXZpZ2F0aW9uIiwiX3N1cGFiYXNlU2VydmljZSIsIl9hdXRoTWFuYWdlciIsIl9oZWxwZXJzIiwiX1Rvb2x0aXBNYW5hZ2VyIiwib3duS2V5cyIsImUiLCJyIiwidCIsIk9iamVjdCIsImtleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJvIiwiZmlsdGVyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsInB1c2giLCJhcHBseSIsIl9vYmplY3RTcHJlYWQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJmb3JFYWNoIiwiX2RlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJkZWZpbmVQcm9wZXJ0eSIsIl90b1Byb3BlcnR5S2V5IiwidmFsdWUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIl9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJBcnJheSIsImlzQXJyYXkiLCJfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJfbiIsIkYiLCJzIiwibiIsImRvbmUiLCJmIiwiVHlwZUVycm9yIiwiYSIsInUiLCJjYWxsIiwibmV4dCIsIl9hcnJheUxpa2VUb0FycmF5IiwidG9TdHJpbmciLCJzbGljZSIsImNvbnN0cnVjdG9yIiwibmFtZSIsImZyb20iLCJ0ZXN0IiwiX3JlZ2VuZXJhdG9yIiwidG9TdHJpbmdUYWciLCJpIiwiYyIsInByb3RvdHlwZSIsIkdlbmVyYXRvciIsImNyZWF0ZSIsIl9yZWdlbmVyYXRvckRlZmluZTIiLCJwIiwieSIsIkciLCJ2IiwiZCIsImJpbmQiLCJsIiwiR2VuZXJhdG9yRnVuY3Rpb24iLCJHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSIsImdldFByb3RvdHlwZU9mIiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJkaXNwbGF5TmFtZSIsInciLCJtIiwiX3JlZ2VuZXJhdG9yRGVmaW5lIiwiX2ludm9rZSIsImFzeW5jR2VuZXJhdG9yU3RlcCIsIlByb21pc2UiLCJyZXNvbHZlIiwidGhlbiIsIl9hc3luY1RvR2VuZXJhdG9yIiwiX25leHQiLCJfdGhyb3ciLCJfY2xhc3NDYWxsQ2hlY2siLCJfZGVmaW5lUHJvcGVydGllcyIsImtleSIsIl9jcmVhdGVDbGFzcyIsIl90b1ByaW1pdGl2ZSIsIl90eXBlb2YiLCJ0b1ByaW1pdGl2ZSIsIlN0cmluZyIsIk51bWJlciIsIl9jYWxsU3VwZXIiLCJfZ2V0UHJvdG90eXBlT2YiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIl9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiX2Fzc2VydFRoaXNJbml0aWFsaXplZCIsIlJlZmVyZW5jZUVycm9yIiwiQm9vbGVhbiIsInZhbHVlT2YiLCJfaW5oZXJpdHMiLCJfc2V0UHJvdG90eXBlT2YiLCJXb3Jrb3V0UGFnZSIsImV4cG9ydHMiLCJfQmFzZVBhZ2UiLCJfdGhpcyIsIm5hdmlnYXRpb24iLCJOYXZpZ2F0aW9uIiwiY3VycmVudFdvcmtvdXQiLCJ3b3Jrb3V0VGltZXIiLCJ3b3Jrb3V0U3RhcnRUaW1lIiwiZXhlcmNpc2VzIiwibXVzY2xlR3JvdXBzIiwic2VsZWN0ZWRNdXNjbGVzIiwic2VsZWN0ZWRFeGVyY2lzZXMiLCJldmVudExpc3RlbmVyc1NldHVwIiwibXVzY2xlR3JvdXBDYWNoZSIsIk1hcCIsImNvbnNvbGUiLCJsb2ciLCJpbml0aWFsaXplTXVzY2xlR3JvdXBDYWNoZSIsIl9jaGVja0F1dGhlbnRpY2F0aW9uIiwiX2NhbGxlZSIsIl9jb250ZXh0IiwiY2hlY2tBdXRoZW50aWNhdGlvbiIsIl9vbkluaXRpYWxpemUiLCJfY2FsbGVlMiIsIl90aGlzMiIsImlzQXV0aGVudGljYXRlZCIsIl9jb250ZXh0MiIsImluaXRpYWxpemUiLCJ0b29sdGlwTWFuYWdlciIsImxvYWRFeGVyY2lzZURhdGEiLCJsb2FkTXVzY2xlR3JvdXBzIiwiY2xlYXJFeGVyY2lzZVByZXNldHMiLCJzZXRUaW1lb3V0IiwibXVzY2xlQnV0dG9ucyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsImJ0biIsImluZGV4IiwiY29uY2F0IiwiZGF0YXNldCIsIm11c2NsZSIsInNldHVwRXZlbnRMaXN0ZW5lcnMiLCJzZXR1cFRvb2x0aXBzIiwidXBkYXRlUXVpY2tTdGFydEJ1dHRvbiIsIm9uSW5pdGlhbGl6ZSIsInNob3dMb2dpblByb21wdCIsIm1haW5Db250ZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJpbm5lckhUTUwiLCJsb2dpbkJ0biIsImFkZEV2ZW50TGlzdGVuZXIiLCJhdXRoTWFuYWdlciIsInNob3dBdXRoTW9kYWwiLCJfbG9hZEV4ZXJjaXNlRGF0YSIsIl9jYWxsZWUzIiwiX3QiLCJfY29udGV4dDMiLCJzdXBhYmFzZVNlcnZpY2UiLCJpc0F2YWlsYWJsZSIsImdldEV4ZXJjaXNlcyIsImdldERlZmF1bHRFeGVyY2lzZXMiLCJsb2FkV29ya291dEhpc3RvcnkiLCJlcnJvciIsInNob3dOb3RpZmljYXRpb24iLCJfbG9hZFdvcmtvdXRIaXN0b3J5IiwiX2NhbGxlZTQiLCJ3b3Jrb3V0SGlzdG9yeSIsIl90MiIsIl9jb250ZXh0NCIsImdldFdvcmtvdXRIaXN0b3J5IiwidXBkYXRlV29ya291dEhpc3RvcnkiLCJfdGhpczMiLCJyZW1vdmVFdmVudExpc3RlbmVycyIsIm11c2NsZUdyb3VwQ2xpY2tIYW5kbGVyIiwidGFyZ2V0IiwiY2xhc3NMaXN0IiwiY2xvc2VzdCIsImJ1dHRvbiIsInRvZ2dsZU11c2NsZUdyb3VwIiwicXVpY2tTdGFydENsaWNrSGFuZGxlciIsImlkIiwicHJldmVudERlZmF1bHQiLCJzdGFydFF1aWNrV29ya291dCIsInN0b3BXb3Jrb3V0Q2xpY2tIYW5kbGVyIiwiX3JlZiIsIl9jYWxsZWU1IiwiX2NvbnRleHQ1Iiwic3RvcFdvcmtvdXQiLCJfeCIsImFkZEV4ZXJjaXNlQ2xpY2tIYW5kbGVyIiwiYWRkRXhlcmNpc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwibWFwIiwic3RhcnRUaW1lIiwiRGF0ZSIsInNlc3Npb25OYW1lIiwiam9pbiIsInRvTG9jYWxlRGF0ZVN0cmluZyIsInF1aWNrU3RhcnRTZWN0aW9uIiwicXVlcnlTZWxlY3RvciIsImFkZCIsInJlbW92ZSIsInN0YXJ0V29ya291dFRpbWVyIiwidG9nZ2xlIiwiY29udGFpbnMiLCJzdHlsZSIsImJhY2tncm91bmRDb2xvciIsImNvbG9yIiwiYm9yZGVyQ29sb3IiLCJsb2FkRXhlcmNpc2VzRm9yU2VsZWN0ZWRNdXNjbGVzIiwicXVpY2tTdGFydEJ1dHRvbiIsImRpc2FibGVkIiwic3RhcnRXb3Jrb3V0IiwibXVzY2xlR3JvdXAiLCJfc3RvcFdvcmtvdXQiLCJfY2FsbGVlNiIsImVuZFRpbWUiLCJkdXJhdGlvbiIsIl9jb250ZXh0NiIsImNsZWFySW50ZXJ2YWwiLCJNYXRoIiwiZmxvb3IiLCJzYXZlV29ya291dFRvSGlzdG9yeSIsImV4ZXJjaXNlTmFtZSIsIndpbmRvdyIsInByb21wdCIsInRyaW0iLCJhZGRFeGVyY2lzZVRvV29ya291dCIsImNvbnRhaW5lciIsImV4ZXJjaXNlRWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJhcHBlbmRDaGlsZCIsIm11c2NsZUdyb3VwQ29uZmlnIiwi6IO4IiwiaWNvbiIsImJnQ29sb3IiLCJob3ZlckNvbG9yIiwi6IOM5LitIiwi6IKpIiwi6IWVIiwi6ISaIiwi6IW5562LIiwiY29uZmlnIiwiX3RoaXM0IiwicmVsZXZhbnRFeGVyY2lzZXMiLCJleGVyY2lzZSIsImluY2x1ZGVzIiwibXVzY2xlX2dyb3VwIiwiZXF1aXBtZW50IiwicmVwZWF0IiwiZGlmZmljdWx0eSIsIl9pbml0aWFsaXplTXVzY2xlR3JvdXBDYWNoZSIsIl9jYWxsZWU3IiwiX3RoaXM1IiwiX3lpZWxkJHN1cGFiYXNlU2VydmljIiwiZGF0YSIsIl90MyIsIl9jb250ZXh0NyIsImNsaWVudCIsInNlbGVjdCIsInNldCIsIm5hbWVfamEiLCJfY29udmVydE11c2NsZUdyb3Vwc1RvVVVJRHMiLCJfY2FsbGVlOCIsIm11c2NsZUdyb3VwTmFtZXMiLCJtdXNjbGVHcm91cFVVSURzIiwiX2l0ZXJhdG9yIiwiX3N0ZXAiLCJtdXNjbGVOYW1lIiwidXVpZCIsIl95aWVsZCRzdXBhYmFzZVNlcnZpYzIiLCJfdDQiLCJfdDUiLCJfY29udGV4dDgiLCJoYXMiLCJnZXQiLCJlcSIsInNpbmdsZSIsImNvbnZlcnRNdXNjbGVHcm91cHNUb1VVSURzIiwiX3gyIiwiX3NhdmVXb3Jrb3V0VG9IaXN0b3J5IiwiX2NhbGxlZTkiLCJjdXJyZW50VXNlciIsIndvcmtvdXREYXRhIiwiaGlzdG9yeSIsIl90NiIsIl9jb250ZXh0OSIsInNhdmVkIiwiZ2V0Q3VycmVudFVzZXIiLCJ1c2VyX2lkIiwic2Vzc2lvbl9uYW1lIiwibXVzY2xlX2dyb3Vwc190cmFpbmVkIiwid29ya291dF9kYXRlIiwidG9JU09TdHJpbmciLCJ0b3RhbF9kdXJhdGlvbl9taW51dGVzIiwiY3JlYXRlZF9hdCIsInVwZGF0ZWRfYXQiLCJzYXZlV29ya291dCIsIkpTT04iLCJwYXJzZSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJzZXRJdGVtIiwic3RyaW5naWZ5IiwiX3RoaXM2Iiwic2V0SW50ZXJ2YWwiLCJ1cGRhdGVXb3Jrb3V0VGltZXIiLCJub3ciLCJkaWZmIiwibWludXRlcyIsInNlY29uZHMiLCJ0aW1lckRpc3BsYXkiLCJ0ZXh0Q29udGVudCIsInBhZFN0YXJ0IiwiX3RoaXM3IiwicmVjZW50V29ya291dHMiLCJzb3J0IiwiYiIsImRhdGVBIiwiZGF0ZUIiLCJ3b3Jrb3V0IiwibXVzY2xlX2dyb3VwcyIsInRvdGFsX2R1cmF0aW9uIiwid29ya291dERhdGUiLCJkYXRlIiwiZm9ybWF0RGF0ZSIsImRhdGVTdHJpbmciLCJpc05hTiIsImdldFRpbWUiLCJsb2FkRnJvbUxvY2FsU3RvcmFnZSIsImFkZFRvb2x0aXAiLCJwb3NpdGlvbiIsInRoZW1lIiwiYW5pbWF0aW9uIiwiYXJyb3ciLCJkZWxheSIsIkJhc2VQYWdlIiwid29ya291dFBhZ2UiLCJfZGVmYXVsdCIsIl9pbml0aWFsaXplIiwiX2NhbGxlZTAiLCJfY29udGV4dDAiXSwic291cmNlcyI6WyJ3b3Jrb3V0UGFnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBqcy9wYWdlcy9Xb3Jrb3V0UGFnZS5qcyAtIOODr+ODvOOCr+OCouOCpuODiOODmuODvOOCuO+8iOOCt+ODs+ODl+ODq+eJiO+8iVxuXG5pbXBvcnQgeyBCYXNlUGFnZSB9IGZyb20gJy4uL2NvcmUvQmFzZVBhZ2UuanMnO1xuaW1wb3J0IHsgTmF2aWdhdGlvbiB9IGZyb20gJy4uL2NvbXBvbmVudHMvTmF2aWdhdGlvbi5qcyc7XG5pbXBvcnQgeyBzdXBhYmFzZVNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9zdXBhYmFzZVNlcnZpY2UuanMnO1xuaW1wb3J0IHsgYXV0aE1hbmFnZXIgfSBmcm9tICcuLi9tb2R1bGVzL2F1dGhNYW5hZ2VyLmpzJztcbmltcG9ydCB7IHNob3dOb3RpZmljYXRpb24gfSBmcm9tICcuLi91dGlscy9oZWxwZXJzLmpzJztcbmltcG9ydCB7IHRvb2x0aXBNYW5hZ2VyIH0gZnJvbSAnLi4vdXRpbHMvVG9vbHRpcE1hbmFnZXIuanMnO1xuXG4vKipcbiAqIOODr+ODvOOCr+OCouOCpuODiOODmuODvOOCuOOCr+ODqeOCue+8iOOCt+ODs+ODl+ODq+eJiO+8iVxuICovXG5leHBvcnQgY2xhc3MgV29ya291dFBhZ2UgZXh0ZW5kcyBCYXNlUGFnZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMubmF2aWdhdGlvbiA9IG5ldyBOYXZpZ2F0aW9uKCk7XG4gICAgICAgIHRoaXMuY3VycmVudFdvcmtvdXQgPSBudWxsO1xuICAgICAgICB0aGlzLndvcmtvdXRUaW1lciA9IG51bGw7XG4gICAgICAgIHRoaXMud29ya291dFN0YXJ0VGltZSA9IG51bGw7XG4gICAgICAgIHRoaXMuZXhlcmNpc2VzID0gW107XG4gICAgICAgIHRoaXMubXVzY2xlR3JvdXBzID0gWyfog7gnLCAn6IOM5LitJywgJ+iCqScsICfohZUnLCAn6ISaJywgJ+iFueetiyddO1xuICAgICAgICB0aGlzLnNlbGVjdGVkTXVzY2xlcyA9IFtdO1xuICAgICAgICB0aGlzLnNlbGVjdGVkRXhlcmNpc2VzID0gW107XG4gICAgICAgIHRoaXMuZXZlbnRMaXN0ZW5lcnNTZXR1cCA9IGZhbHNlO1xuICAgICAgICB0aGlzLm11c2NsZUdyb3VwQ2FjaGUgPSBuZXcgTWFwKCk7IC8vIOeti+iCieOCsOODq+ODvOODl+WQjeOBi+OCiVVVSUTjgbjjga7jgq3jg6Pjg4Pjgrfjg6VcblxuICAgICAgICBjb25zb2xlLmxvZygnV29ya291dFBhZ2UgY29uc3RydWN0b3IgY2FsbGVkJyk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdNdXNjbGUgZ3JvdXBzIGluaXRpYWxpemVkOicsIHRoaXMubXVzY2xlR3JvdXBzKTtcblxuICAgICAgICAvLyDnrYvogonjgrDjg6vjg7zjg5fjga7jgq3jg6Pjg4Pjgrfjg6XjgpLliJ3mnJ/ljJZcbiAgICAgICAgdGhpcy5pbml0aWFsaXplTXVzY2xlR3JvdXBDYWNoZSgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgKiDoqo3oqLznirbmhYvjgpLjg4Hjgqfjg4Pjgq/vvIjjgqrjg7zjg5Djg7zjg6njgqTjg4nvvIlcbiAgICovXG4gICAgYXN5bmMgY2hlY2tBdXRoZW50aWNhdGlvbigpIHtcbiAgICAvLyDoqo3oqLzjg4Hjgqfjg4Pjgq/jgpLjgrnjgq3jg4Pjg5fjgZfjgabjg6/jg7zjgq/jgqLjgqbjg4jjg5rjg7zjgrjjgpLooajnpLpcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAqIOODmuODvOOCuOWbuuacieOBruWIneacn+WMluWHpueQhlxuICAgKi9cbiAgICBhc3luYyBvbkluaXRpYWxpemUoKSB7XG4gICAgLy8g6KqN6Ki854q25oWL44KS44OB44Kn44OD44KvXG4gICAgICAgIGNvbnN0IGlzQXV0aGVudGljYXRlZCA9IGF3YWl0IHRoaXMuY2hlY2tBdXRoZW50aWNhdGlvbigpO1xuICAgICAgICBpZiAoIWlzQXV0aGVudGljYXRlZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8g44OK44OT44Ky44O844K344On44Oz44KS5Yid5pyf5YyWXG4gICAgICAgIGF3YWl0IHRoaXMubmF2aWdhdGlvbi5pbml0aWFsaXplKCk7XG5cbiAgICAgICAgLy8g44OE44O844Or44OB44OD44OX5qmf6IO944KS5Yid5pyf5YyWXG4gICAgICAgIHRvb2x0aXBNYW5hZ2VyLmluaXRpYWxpemUoKTtcblxuICAgICAgICAvLyDjgqjjgq/jgrXjgrXjgqTjgrrjg4fjg7zjgr/jgpLoqq3jgb/ovrzjgb9cbiAgICAgICAgYXdhaXQgdGhpcy5sb2FkRXhlcmNpc2VEYXRhKCk7XG5cbiAgICAgICAgLy8g562L6IKJ44Kw44Or44O844OX44Oc44K/44Oz44KS55Sf5oiQXG4gICAgICAgIHRoaXMubG9hZE11c2NsZUdyb3VwcygpO1xuXG4gICAgICAgIC8vIOOCqOOCr+OCteOCteOCpOOCuuODl+ODquOCu+ODg+ODiOOCkuWIneacn+WMllxuICAgICAgICB0aGlzLmNsZWFyRXhlcmNpc2VQcmVzZXRzKCk7XG5cbiAgICAgICAgLy8gRE9N6KaB57Sg44GM6Kqt44G/6L6844G+44KM44Gf5b6M44Gr44Kk44OZ44Oz44OI44Oq44K544OK44O844KS6Kit5a6aXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ1NldHRpbmcgdXAgZXZlbnQgbGlzdGVuZXJzIGFmdGVyIERPTSBsb2FkLi4uJyk7XG5cbiAgICAgICAgICAgIC8vIOeti+iCiemDqOS9jeODnOOCv+ODs+OBruWtmOWcqOOCkueiuuiqjVxuICAgICAgICAgICAgY29uc3QgbXVzY2xlQnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5tdXNjbGUtZ3JvdXAtYnRuJyk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnRm91bmQgbXVzY2xlIGdyb3VwIGJ1dHRvbnM6JywgbXVzY2xlQnV0dG9ucy5sZW5ndGgpO1xuICAgICAgICAgICAgbXVzY2xlQnV0dG9ucy5mb3JFYWNoKChidG4sIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coYEJ1dHRvbiAke2luZGV4fTpgLCBidG4uZGF0YXNldC5tdXNjbGUsIGJ0bik7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgLy8g44Kk44OZ44Oz44OI44Oq44K544OK44O844GM5pei44Gr6Kit5a6a44GV44KM44Gm44GE44KL5aC05ZCI44Gv44K544Kt44OD44OXXG4gICAgICAgICAgICBpZiAoIXRoaXMuZXZlbnRMaXN0ZW5lcnNTZXR1cCkge1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0dXBFdmVudExpc3RlbmVycygpO1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0dXBUb29sdGlwcygpO1xuICAgICAgICAgICAgICAgIHRoaXMuZXZlbnRMaXN0ZW5lcnNTZXR1cCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZVF1aWNrU3RhcnRCdXR0b24oKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdFdmVudCBsaXN0ZW5lcnMgc2V0dXAgY29tcGxldGUnKTtcbiAgICAgICAgfSwgMTAwKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICog44Ot44Kw44Kk44Oz44OX44Ot44Oz44OX44OI44KS6KGo56S6XG4gICAqL1xuICAgIHNob3dMb2dpblByb21wdCgpIHtcbiAgICAgICAgY29uc3QgbWFpbkNvbnRlbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFpbi1jb250ZW50Jyk7XG4gICAgICAgIGlmICghbWFpbkNvbnRlbnQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIG1haW5Db250ZW50LmlubmVySFRNTCA9IGBcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtaW4taC1zY3JlZW4gZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgYmctZ3JheS01MFwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtYXgtdy1tZCB3LWZ1bGwgYmctd2hpdGUgcm91bmRlZC1sZyBzaGFkb3ctbWQgcC02IHRleHQtY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtYi02XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibXgtYXV0byBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBoLTEyIHctMTIgcm91bmRlZC1mdWxsIGJnLWJsdWUtMTAwIG1iLTRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPVwiaC02IHctNiB0ZXh0LWJsdWUtNjAwXCIgZmlsbD1cIm5vbmVcIiBzdHJva2U9XCJjdXJyZW50Q29sb3JcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIHN0cm9rZS1saW5lY2FwPVwicm91bmRcIiBzdHJva2UtbGluZWpvaW49XCJyb3VuZFwiIHN0cm9rZS13aWR0aD1cIjJcIiBkPVwiTTEyIDE1djJtLTYgNGgxMmEyIDIgMCAwMDItMnYtNmEyIDIgMCAwMC0yLTJINmEyIDIgMCAwMC0yIDJ2NmEyIDIgMCAwMDIgMnptMTAtMTBWN2E0IDQgMCAwMC04IDB2NGg4elwiPjwvcGF0aD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGgyIGNsYXNzPVwidGV4dC0yeGwgZm9udC1ib2xkIHRleHQtZ3JheS05MDAgbWItMlwiPuODreOCsOOCpOODs+OBjOW/heimgeOBp+OBmTwvaDI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz1cInRleHQtZ3JheS02MDAgbWItNlwiPuODr+ODvOOCr+OCouOCpuODiOapn+iDveOCkuS9v+eUqOOBmeOCi+OBq+OBr+ODreOCsOOCpOODs+OBl+OBpuOBj+OBoOOBleOBhOOAgjwvcD5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzcGFjZS15LTNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gaWQ9XCJsb2dpbi1idG5cIiBjbGFzcz1cInctZnVsbCBiZy1ibHVlLTYwMCB0ZXh0LXdoaXRlIHB5LTIgcHgtNCByb3VuZGVkLW1kIGhvdmVyOmJnLWJsdWUtNzAwIHRyYW5zaXRpb24tY29sb3JzXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAg44Ot44Kw44Kk44OzXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gb25jbGljaz1cIndpbmRvdy5sb2NhdGlvbi5ocmVmPScvaW5kZXguaHRtbCdcIiBjbGFzcz1cInctZnVsbCBiZy1ncmF5LTIwMCB0ZXh0LWdyYXktODAwIHB5LTIgcHgtNCByb3VuZGVkLW1kIGhvdmVyOmJnLWdyYXktMzAwIHRyYW5zaXRpb24tY29sb3JzXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAg44Ob44O844Og44Gr5oi744KLXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgYDtcblxuICAgICAgICAvLyDjg63jgrDjgqTjg7Pjg5zjgr/jg7Pjga7jgqTjg5njg7Pjg4jjg6rjgrnjg4rjg7zjgpLoqK3lrppcbiAgICAgICAgY29uc3QgbG9naW5CdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbG9naW4tYnRuJyk7XG4gICAgICAgIGlmIChsb2dpbkJ0bikge1xuICAgICAgICAgICAgbG9naW5CdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgYXV0aE1hbmFnZXIuc2hvd0F1dGhNb2RhbCgnbG9naW4nKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAqIOOCqOOCr+OCteOCteOCpOOCuuODh+ODvOOCv+OCkuiqreOBv+i+vOOBv1xuICAgKi9cbiAgICBhc3luYyBsb2FkRXhlcmNpc2VEYXRhKCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKHN1cGFiYXNlU2VydmljZS5pc0F2YWlsYWJsZSgpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5leGVyY2lzZXMgPSBhd2FpdCBzdXBhYmFzZVNlcnZpY2UuZ2V0RXhlcmNpc2VzKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuZXhlcmNpc2VzID0gdGhpcy5nZXREZWZhdWx0RXhlcmNpc2VzKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGF3YWl0IHRoaXMubG9hZFdvcmtvdXRIaXN0b3J5KCk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gbG9hZCBleGVyY2lzZSBkYXRhOicsIGVycm9yKTtcbiAgICAgICAgICAgIHNob3dOb3RpZmljYXRpb24oJ+OCqOOCr+OCteOCteOCpOOCuuODh+ODvOOCv+OBruiqreOBv+i+vOOBv+OBq+WkseaVl+OBl+OBvuOBl+OBnycsICdlcnJvcicpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAqIOODr+ODvOOCr+OCouOCpuODiOWxpeattOOCkuiqreOBv+i+vOOBv1xuICAgKi9cbiAgICBhc3luYyBsb2FkV29ya291dEhpc3RvcnkoKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBsZXQgd29ya291dEhpc3RvcnkgPSBbXTtcblxuICAgICAgICAgICAgaWYgKHN1cGFiYXNlU2VydmljZS5pc0F2YWlsYWJsZSgpKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0xvYWRpbmcgd29ya291dCBoaXN0b3J5IGZyb20gU3VwYWJhc2UuLi4nKTtcbiAgICAgICAgICAgICAgICB3b3Jrb3V0SGlzdG9yeSA9IGF3YWl0IHN1cGFiYXNlU2VydmljZS5nZXRXb3Jrb3V0SGlzdG9yeSgpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdXb3Jrb3V0IGhpc3RvcnkgbG9hZGVkIGZyb20gU3VwYWJhc2U6Jywgd29ya291dEhpc3RvcnkpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnU3VwYWJhc2Ugbm90IGF2YWlsYWJsZSwgc2hvd2luZyBlbXB0eSBoaXN0b3J5Jyk7XG4gICAgICAgICAgICAgICAgd29ya291dEhpc3RvcnkgPSBbXTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy51cGRhdGVXb3Jrb3V0SGlzdG9yeSh3b3Jrb3V0SGlzdG9yeSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gbG9hZCB3b3Jrb3V0IGhpc3Rvcnk6JywgZXJyb3IpO1xuICAgICAgICAgICAgLy8g44Ko44Op44O844GM55m655Sf44GX44Gf5aC05ZCI44Gv56m644Gu5bGl5q2044KS6KGo56S6XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZVdvcmtvdXRIaXN0b3J5KFtdKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgKiDjgqTjg5njg7Pjg4jjg6rjgrnjg4rjg7zjgpLoqK3lrppcbiAgICovXG4gICAgc2V0dXBFdmVudExpc3RlbmVycygpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1NldHRpbmcgdXAgZXZlbnQgbGlzdGVuZXJzLi4uJyk7XG5cbiAgICAgICAgLy8g5pei5a2Y44Gu44Kk44OZ44Oz44OI44Oq44K544OK44O844KS5YmK6ZmkXG4gICAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcnMoKTtcblxuICAgICAgICAvLyDnrYvogonpg6jkvY3jg5zjgr/jg7Pjga7jgq/jg6rjg4Pjgq9cbiAgICAgICAgdGhpcy5tdXNjbGVHcm91cENsaWNrSGFuZGxlciA9IChlKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnQ2xpY2sgZXZlbnQgZGV0ZWN0ZWQgb246JywgZS50YXJnZXQpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ0V2ZW50IHRhcmdldCBjbGFzc0xpc3Q6JywgZS50YXJnZXQuY2xhc3NMaXN0KTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFxuICAgICAgICAgICAgICAgICdDbG9zZXN0IG11c2NsZS1ncm91cC1idG46JyxcbiAgICAgICAgICAgICAgICBlLnRhcmdldC5jbG9zZXN0KCcubXVzY2xlLWdyb3VwLWJ0bicpXG4gICAgICAgICAgICApO1xuXG4gICAgICAgICAgICBpZiAoZS50YXJnZXQuY2xvc2VzdCgnLm11c2NsZS1ncm91cC1idG4nKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGJ1dHRvbiA9IGUudGFyZ2V0LmNsb3Nlc3QoJy5tdXNjbGUtZ3JvdXAtYnRuJyk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ011c2NsZSBncm91cCBidXR0b24gY2xpY2tlZDonLCBidXR0b24uZGF0YXNldC5tdXNjbGUpO1xuICAgICAgICAgICAgICAgIHRoaXMudG9nZ2xlTXVzY2xlR3JvdXAoYnV0dG9uKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0NsaWNrIHdhcyBub3Qgb24gYSBtdXNjbGUgZ3JvdXAgYnV0dG9uJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgLy8g44Kv44Kk44OD44Kv44K544K/44O844OI44Ov44O844Kv44Ki44Km44OI44Oc44K/44OzXG4gICAgICAgIHRoaXMucXVpY2tTdGFydENsaWNrSGFuZGxlciA9IChlKSA9PiB7XG4gICAgICAgICAgICBpZiAoZS50YXJnZXQuaWQgPT09ICdxdWljay1zdGFydC13b3Jrb3V0Jykge1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0UXVpY2tXb3Jrb3V0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgLy8g44Ov44O844Kv44Ki44Km44OI57WC5LqG44Oc44K/44OzXG4gICAgICAgIHRoaXMuc3RvcFdvcmtvdXRDbGlja0hhbmRsZXIgPSBhc3luYyAoZSkgPT4ge1xuICAgICAgICAgICAgaWYgKGUudGFyZ2V0LmlkID09PSAnc3RvcC13b3Jrb3V0Jykge1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLnN0b3BXb3Jrb3V0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgLy8g44Ko44Kv44K144K144Kk44K66L+95Yqg44Oc44K/44OzXG4gICAgICAgIHRoaXMuYWRkRXhlcmNpc2VDbGlja0hhbmRsZXIgPSAoZSkgPT4ge1xuICAgICAgICAgICAgaWYgKGUudGFyZ2V0LmlkID09PSAnYWRkLWV4ZXJjaXNlLWJ0bicpIHtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgdGhpcy5hZGRFeGVyY2lzZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIC8vIOOCpOODmeODs+ODiOODquOCueODiuODvOOCkui/veWKoFxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMubXVzY2xlR3JvdXBDbGlja0hhbmRsZXIpO1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMucXVpY2tTdGFydENsaWNrSGFuZGxlcik7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5zdG9wV29ya291dENsaWNrSGFuZGxlcik7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5hZGRFeGVyY2lzZUNsaWNrSGFuZGxlcik7XG4gICAgfVxuXG4gICAgLyoqXG4gICAqIOOCpOODmeODs+ODiOODquOCueODiuODvOOCkuWJiumZpFxuICAgKi9cbiAgICByZW1vdmVFdmVudExpc3RlbmVycygpIHtcbiAgICAgICAgaWYgKHRoaXMubXVzY2xlR3JvdXBDbGlja0hhbmRsZXIpIHtcbiAgICAgICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5tdXNjbGVHcm91cENsaWNrSGFuZGxlcik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMucXVpY2tTdGFydENsaWNrSGFuZGxlcikge1xuICAgICAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLnF1aWNrU3RhcnRDbGlja0hhbmRsZXIpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnN0b3BXb3Jrb3V0Q2xpY2tIYW5kbGVyKSB7XG4gICAgICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuc3RvcFdvcmtvdXRDbGlja0hhbmRsZXIpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmFkZEV4ZXJjaXNlQ2xpY2tIYW5kbGVyKSB7XG4gICAgICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuYWRkRXhlcmNpc2VDbGlja0hhbmRsZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAqIOOCr+OCpOODg+OCr+OCueOCv+ODvOODiOODr+ODvOOCr+OCouOCpuODiOOCkumWi+Wni1xuICAgKi9cbiAgICBzdGFydFF1aWNrV29ya291dCgpIHtcbiAgICAgICAgY29uc3Qgc2VsZWN0ZWRNdXNjbGVzID0gQXJyYXkuZnJvbShcbiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5tdXNjbGUtZ3JvdXAtYnRuLnNlbGVjdGVkJylcbiAgICAgICAgKS5tYXAoKGJ0bikgPT4gYnRuLmRhdGFzZXQubXVzY2xlKTtcblxuICAgICAgICBpZiAoc2VsZWN0ZWRNdXNjbGVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgc2hvd05vdGlmaWNhdGlvbign562L6IKJ6YOo5L2N44KS6YG45oqe44GX44Gm44GP44Gg44GV44GEJywgJ3dhcm5pbmcnKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIOODr+ODvOOCr+OCouOCpuODiOOCkumWi+Wni1xuICAgICAgICB0aGlzLmN1cnJlbnRXb3Jrb3V0ID0ge1xuICAgICAgICAgICAgbXVzY2xlR3JvdXBzOiBzZWxlY3RlZE11c2NsZXMsXG4gICAgICAgICAgICBzdGFydFRpbWU6IG5ldyBEYXRlKCksXG4gICAgICAgICAgICBzZXNzaW9uTmFtZTogYCR7c2VsZWN0ZWRNdXNjbGVzLmpvaW4oJywgJyl944Gu44Ov44O844Kv44Ki44Km44OIIC0gJHtuZXcgRGF0ZSgpLnRvTG9jYWxlRGF0ZVN0cmluZygnamEtSlAnKX1gXG4gICAgICAgIH07XG5cbiAgICAgICAgLy8g44Kv44Kk44OD44Kv44K544K/44O844OI44K744Kv44K344On44Oz44KS6Z2e6KGo56S644Gr44GX44Gm44CB54++5Zyo44Gu44Ov44O844Kv44Ki44Km44OI44K744Kv44K344On44Oz44KS6KGo56S6XG4gICAgICAgIGNvbnN0IHF1aWNrU3RhcnRTZWN0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm11c2NsZS1jYXJkJyk7XG4gICAgICAgIGlmIChxdWlja1N0YXJ0U2VjdGlvbikge1xuICAgICAgICAgICAgcXVpY2tTdGFydFNlY3Rpb24uY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XG4gICAgICAgIH1cbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2N1cnJlbnQtd29ya291dCcpLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xuXG4gICAgICAgIC8vIOOCv+OCpOODnuODvOOCkumWi+Wni1xuICAgICAgICB0aGlzLnN0YXJ0V29ya291dFRpbWVyKCk7XG5cbiAgICAgICAgc2hvd05vdGlmaWNhdGlvbign44Ov44O844Kv44Ki44Km44OI44KS6ZaL5aeL44GX44G+44GX44GfJywgJ3N1Y2Nlc3MnKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICog562L6IKJ6YOo5L2N44Gu6YG45oqe54q25oWL44KS5YiH44KK5pu/44GIXG4gICAqL1xuICAgIHRvZ2dsZU11c2NsZUdyb3VwKGJ1dHRvbikge1xuICAgICAgICBjb25zb2xlLmxvZygnVG9nZ2xpbmcgbXVzY2xlIGdyb3VwOicsIGJ1dHRvbi5kYXRhc2V0Lm11c2NsZSk7XG4gICAgICAgIGJ1dHRvbi5jbGFzc0xpc3QudG9nZ2xlKCdzZWxlY3RlZCcpO1xuXG4gICAgICAgIC8vIOmBuOaKnueKtuaFi+OBruimluimmueahOODleOCo+ODvOODieODkOODg+OCr1xuICAgICAgICBpZiAoYnV0dG9uLmNsYXNzTGlzdC5jb250YWlucygnc2VsZWN0ZWQnKSkge1xuICAgICAgICAgICAgYnV0dG9uLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICcjM0I4MkY2JztcbiAgICAgICAgICAgIGJ1dHRvbi5zdHlsZS5jb2xvciA9ICd3aGl0ZSc7XG4gICAgICAgICAgICBidXR0b24uc3R5bGUuYm9yZGVyQ29sb3IgPSAnIzNCODJGNic7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnTXVzY2xlIGdyb3VwIHNlbGVjdGVkOicsIGJ1dHRvbi5kYXRhc2V0Lm11c2NsZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBidXR0b24uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJyc7XG4gICAgICAgICAgICBidXR0b24uc3R5bGUuY29sb3IgPSAnJztcbiAgICAgICAgICAgIGJ1dHRvbi5zdHlsZS5ib3JkZXJDb2xvciA9ICcnO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ011c2NsZSBncm91cCBkZXNlbGVjdGVkOicsIGJ1dHRvbi5kYXRhc2V0Lm11c2NsZSk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnVwZGF0ZVF1aWNrU3RhcnRCdXR0b24oKTtcbiAgICAgICAgdGhpcy5sb2FkRXhlcmNpc2VzRm9yU2VsZWN0ZWRNdXNjbGVzKCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAqIOOCr+OCpOODg+OCr+OCueOCv+ODvOODiOODnOOCv+ODs+OBrueKtuaFi+OCkuabtOaWsFxuICAgKi9cbiAgICB1cGRhdGVRdWlja1N0YXJ0QnV0dG9uKCkge1xuICAgICAgICBjb25zdCBzZWxlY3RlZE11c2NsZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFxuICAgICAgICAgICAgJy5tdXNjbGUtZ3JvdXAtYnRuLnNlbGVjdGVkJ1xuICAgICAgICApO1xuICAgICAgICBjb25zdCBxdWlja1N0YXJ0QnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3F1aWNrLXN0YXJ0LXdvcmtvdXQnKTtcblxuICAgICAgICBjb25zb2xlLmxvZygnVXBkYXRpbmcgcXVpY2sgc3RhcnQgYnV0dG9uLi4uJyk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdTZWxlY3RlZCBtdXNjbGVzIGNvdW50OicsIHNlbGVjdGVkTXVzY2xlcy5sZW5ndGgpO1xuICAgICAgICBjb25zb2xlLmxvZygnUXVpY2sgc3RhcnQgYnV0dG9uIGZvdW5kOicsIHF1aWNrU3RhcnRCdXR0b24pO1xuXG4gICAgICAgIGlmIChxdWlja1N0YXJ0QnV0dG9uKSB7XG4gICAgICAgICAgICBpZiAoc2VsZWN0ZWRNdXNjbGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICBxdWlja1N0YXJ0QnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgcXVpY2tTdGFydEJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKCdvcGFjaXR5LTUwJywgJ2N1cnNvci1ub3QtYWxsb3dlZCcpO1xuICAgICAgICAgICAgICAgIHF1aWNrU3RhcnRCdXR0b24uY2xhc3NMaXN0LmFkZCgnaG92ZXI6YmctYmx1ZS03MDAnKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnUXVpY2sgc3RhcnQgYnV0dG9uIGVuYWJsZWQnKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcXVpY2tTdGFydEJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgcXVpY2tTdGFydEJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdvcGFjaXR5LTUwJywgJ2N1cnNvci1ub3QtYWxsb3dlZCcpO1xuICAgICAgICAgICAgICAgIHF1aWNrU3RhcnRCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSgnaG92ZXI6YmctYmx1ZS03MDAnKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnUXVpY2sgc3RhcnQgYnV0dG9uIGRpc2FibGVkJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdRdWljayBzdGFydCBidXR0b24gbm90IGZvdW5kIScpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAqIOODr+ODvOOCr+OCouOCpuODiOOCkumWi+Wni1xuICAgKi9cbiAgICBzdGFydFdvcmtvdXQobXVzY2xlR3JvdXApIHtcbiAgICAgICAgY29uc29sZS5sb2coYFN0YXJ0aW5nIHdvcmtvdXQgZm9yOiAke211c2NsZUdyb3VwfWApO1xuXG4gICAgICAgIHRoaXMuY3VycmVudFdvcmtvdXQgPSB7XG4gICAgICAgICAgICBtdXNjbGVHcm91cCxcbiAgICAgICAgICAgIHN0YXJ0VGltZTogbmV3IERhdGUoKSxcbiAgICAgICAgICAgIHNlc3Npb25OYW1lOiBgJHttdXNjbGVHcm91cH3jga7jg6/jg7zjgq/jgqLjgqbjg4ggLSAke25ldyBEYXRlKCkudG9Mb2NhbGVEYXRlU3RyaW5nKCdqYS1KUCcpfWBcbiAgICAgICAgfTtcblxuICAgICAgICAvLyDjgq/jgqTjg4Pjgq/jgrnjgr/jg7zjg4jjgrvjgq/jgrfjg6fjg7PjgpLpnZ7ooajnpLrjgavjgZfjgabjgIHnj77lnKjjga7jg6/jg7zjgq/jgqLjgqbjg4jjgrvjgq/jgrfjg6fjg7PjgpLooajnpLpcbiAgICAgICAgY29uc3QgcXVpY2tTdGFydFNlY3Rpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubXVzY2xlLWNhcmQnKTtcbiAgICAgICAgaWYgKHF1aWNrU3RhcnRTZWN0aW9uKSB7XG4gICAgICAgICAgICBxdWlja1N0YXJ0U2VjdGlvbi5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcbiAgICAgICAgfVxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY3VycmVudC13b3Jrb3V0JykuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XG5cbiAgICAgICAgLy8g44K/44Kk44Oe44O844KS6ZaL5aeLXG4gICAgICAgIHRoaXMuc3RhcnRXb3Jrb3V0VGltZXIoKTtcblxuICAgICAgICBzaG93Tm90aWZpY2F0aW9uKGAke211c2NsZUdyb3VwfeOBruODr+ODvOOCr+OCouOCpuODiOOCkumWi+Wni+OBl+OBvuOBl+OBn2AsICdzdWNjZXNzJyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAqIOODr+ODvOOCr+OCouOCpuODiOOCkuWBnOatolxuICAgKi9cbiAgICBhc3luYyBzdG9wV29ya291dCgpIHtcbiAgICAgICAgaWYgKHRoaXMud29ya291dFRpbWVyKSB7XG4gICAgICAgICAgICBjbGVhckludGVydmFsKHRoaXMud29ya291dFRpbWVyKTtcbiAgICAgICAgICAgIHRoaXMud29ya291dFRpbWVyID0gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLmN1cnJlbnRXb3Jrb3V0KSB7XG4gICAgICAgICAgICBjb25zdCBlbmRUaW1lID0gbmV3IERhdGUoKTtcbiAgICAgICAgICAgIGNvbnN0IGR1cmF0aW9uID0gTWF0aC5mbG9vcihcbiAgICAgICAgICAgICAgICAoZW5kVGltZSAtIHRoaXMuY3VycmVudFdvcmtvdXQuc3RhcnRUaW1lKSAvIDYwMDAwXG4gICAgICAgICAgICApO1xuXG4gICAgICAgICAgICBzaG93Tm90aWZpY2F0aW9uKFxuICAgICAgICAgICAgICAgIGDjg6/jg7zjgq/jgqLjgqbjg4jjgpLntYLkuobjgZfjgb7jgZfjgZ/vvIgke2R1cmF0aW9ufeWIhu+8iWAsXG4gICAgICAgICAgICAgICAgJ3N1Y2Nlc3MnXG4gICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAvLyDjg6/jg7zjgq/jgqLjgqbjg4jlsaXmrbTjgavkv53lrZhcbiAgICAgICAgICAgIGF3YWl0IHRoaXMuc2F2ZVdvcmtvdXRUb0hpc3RvcnkoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIOePvuWcqOOBruODr+ODvOOCr+OCouOCpuODiOOCu+OCr+OCt+ODp+ODs+OCkumdnuihqOekuuOBq+OBl+OBpuOAgeOCr+OCpOODg+OCr+OCueOCv+ODvOODiOOCu+OCr+OCt+ODp+ODs+OCkuihqOekulxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY3VycmVudC13b3Jrb3V0JykuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XG4gICAgICAgIGNvbnN0IHF1aWNrU3RhcnRTZWN0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm11c2NsZS1jYXJkJyk7XG4gICAgICAgIGlmIChxdWlja1N0YXJ0U2VjdGlvbikge1xuICAgICAgICAgICAgcXVpY2tTdGFydFNlY3Rpb24uY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmN1cnJlbnRXb3Jrb3V0ID0gbnVsbDtcbiAgICB9XG5cbiAgICAvKipcbiAgICog44Ko44Kv44K144K144Kk44K644KS6L+95YqgXG4gICAqL1xuICAgIGFkZEV4ZXJjaXNlKCkge1xuICAgICAgICBjb25zdCBleGVyY2lzZU5hbWUgPSB3aW5kb3cucHJvbXB0KCfjgqjjgq/jgrXjgrXjgqTjgrrlkI3jgpLlhaXlipvjgZfjgabjgY/jgaDjgZXjgYQ6Jyk7XG4gICAgICAgIGlmIChleGVyY2lzZU5hbWUgJiYgZXhlcmNpc2VOYW1lLnRyaW0oKSkge1xuICAgICAgICAgICAgdGhpcy5hZGRFeGVyY2lzZVRvV29ya291dChleGVyY2lzZU5hbWUudHJpbSgpKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgKiDjg6/jg7zjgq/jgqLjgqbjg4jjgavjgqjjgq/jgrXjgrXjgqTjgrrjgpLov73liqBcbiAgICovXG4gICAgYWRkRXhlcmNpc2VUb1dvcmtvdXQoZXhlcmNpc2VOYW1lKSB7XG4gICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd3b3Jrb3V0LWV4ZXJjaXNlcycpO1xuICAgICAgICBpZiAoIWNvbnRhaW5lcikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgZXhlcmNpc2VFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGV4ZXJjaXNlRWxlbWVudC5jbGFzc05hbWUgPVxuICAgICAgJ2ZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBwLTQgYmctd2hpdGUgYm9yZGVyIGJvcmRlci1ncmF5LTIwMCByb3VuZGVkLWxnJztcbiAgICAgICAgZXhlcmNpc2VFbGVtZW50LmlubmVySFRNTCA9IGBcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4IGl0ZW1zLWNlbnRlclwiPlxuICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiZmFzIGZhLWR1bWJiZWxsIHRleHQtYmx1ZS01MDAgbXItM1wiPjwvaT5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImZvbnQtbWVkaXVtIHRleHQtZ3JheS05MDBcIj4ke2V4ZXJjaXNlTmFtZX08L3NwYW4+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTJcIj5cbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuLXNlY29uZGFyeSB0ZXh0LXNtIHB4LTMgcHktMVwiPlxuICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cImZhcyBmYS1wbHVzIG1yLTFcIj48L2k+44K744OD44OI6L+95YqgXG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0bi1kYW5nZXIgdGV4dC1zbSBweC0zIHB5LTFcIj5cbiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJmYXMgZmEtdHJhc2ggbXItMVwiPjwvaT7liYrpmaRcbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICBgO1xuXG4gICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChleGVyY2lzZUVsZW1lbnQpO1xuICAgICAgICBzaG93Tm90aWZpY2F0aW9uKGAke2V4ZXJjaXNlTmFtZX3jgpLov73liqDjgZfjgb7jgZfjgZ9gLCAnc3VjY2VzcycpO1xuICAgIH1cblxuICAgIC8qKlxuICAgKiDnrYvogonjgrDjg6vjg7zjg5fjg5zjgr/jg7PjgpLnlJ/miJBcbiAgICovXG4gICAgbG9hZE11c2NsZUdyb3VwcygpIHtcbiAgICAgICAgY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ211c2NsZS1ncm91cHMtZ3JpZCcpO1xuICAgICAgICBpZiAoIWNvbnRhaW5lcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignTXVzY2xlIGdyb3VwcyBncmlkIGNvbnRhaW5lciBub3QgZm91bmQnKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIOeti+iCieOCsOODq+ODvOODl+OBruOCouOCpOOCs+ODs+OBqOiJsuOCkuWumue+qVxuICAgICAgICBjb25zdCBtdXNjbGVHcm91cENvbmZpZyA9IHtcbiAgICAgICAgICAgIOiDuDoge1xuICAgICAgICAgICAgICAgIGljb246ICdmYXMgZmEtaGVhcnQnLFxuICAgICAgICAgICAgICAgIGNvbG9yOiAndGV4dC1yZWQtNTAwJyxcbiAgICAgICAgICAgICAgICBiZ0NvbG9yOiAnYmctcmVkLTUwJyxcbiAgICAgICAgICAgICAgICBob3ZlckNvbG9yOiAnaG92ZXI6YmctcmVkLTEwMCdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICDog4zkuK06IHtcbiAgICAgICAgICAgICAgICBpY29uOiAnZmFzIGZhLXVzZXInLFxuICAgICAgICAgICAgICAgIGNvbG9yOiAndGV4dC1ibHVlLTUwMCcsXG4gICAgICAgICAgICAgICAgYmdDb2xvcjogJ2JnLWJsdWUtNTAnLFxuICAgICAgICAgICAgICAgIGhvdmVyQ29sb3I6ICdob3ZlcjpiZy1ibHVlLTEwMCdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICDogqk6IHtcbiAgICAgICAgICAgICAgICBpY29uOiAnZmFzIGZhLWFycm93LXVwJyxcbiAgICAgICAgICAgICAgICBjb2xvcjogJ3RleHQtZ3JlZW4tNTAwJyxcbiAgICAgICAgICAgICAgICBiZ0NvbG9yOiAnYmctZ3JlZW4tNTAnLFxuICAgICAgICAgICAgICAgIGhvdmVyQ29sb3I6ICdob3ZlcjpiZy1ncmVlbi0xMDAnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAg6IWVOiB7XG4gICAgICAgICAgICAgICAgaWNvbjogJ2ZhcyBmYS1oYW5kLXBhcGVyJyxcbiAgICAgICAgICAgICAgICBjb2xvcjogJ3RleHQtcHVycGxlLTUwMCcsXG4gICAgICAgICAgICAgICAgYmdDb2xvcjogJ2JnLXB1cnBsZS01MCcsXG4gICAgICAgICAgICAgICAgaG92ZXJDb2xvcjogJ2hvdmVyOmJnLXB1cnBsZS0xMDAnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAg6ISaOiB7XG4gICAgICAgICAgICAgICAgaWNvbjogJ2ZhcyBmYS1ydW5uaW5nJyxcbiAgICAgICAgICAgICAgICBjb2xvcjogJ3RleHQtb3JhbmdlLTUwMCcsXG4gICAgICAgICAgICAgICAgYmdDb2xvcjogJ2JnLW9yYW5nZS01MCcsXG4gICAgICAgICAgICAgICAgaG92ZXJDb2xvcjogJ2hvdmVyOmJnLW9yYW5nZS0xMDAnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAg6IW5562LOiB7XG4gICAgICAgICAgICAgICAgaWNvbjogJ2ZhcyBmYS1kdW1iYmVsbCcsXG4gICAgICAgICAgICAgICAgY29sb3I6ICd0ZXh0LXllbGxvdy01MDAnLFxuICAgICAgICAgICAgICAgIGJnQ29sb3I6ICdiZy15ZWxsb3ctNTAnLFxuICAgICAgICAgICAgICAgIGhvdmVyQ29sb3I6ICdob3ZlcjpiZy15ZWxsb3ctMTAwJ1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIGNvbnRhaW5lci5pbm5lckhUTUwgPSB0aGlzLm11c2NsZUdyb3Vwc1xuICAgICAgICAgICAgLm1hcCgobXVzY2xlKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgY29uZmlnID0gbXVzY2xlR3JvdXBDb25maWdbbXVzY2xlXSB8fCB7XG4gICAgICAgICAgICAgICAgICAgIGljb246ICdmYXMgZmEtZHVtYmJlbGwnLFxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJ3RleHQtZ3JheS01MDAnLFxuICAgICAgICAgICAgICAgICAgICBiZ0NvbG9yOiAnYmctZ3JheS01MCcsXG4gICAgICAgICAgICAgICAgICAgIGhvdmVyQ29sb3I6ICdob3ZlcjpiZy1ncmF5LTEwMCdcbiAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIGBcbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwibXVzY2xlLWdyb3VwLWJ0biAke2NvbmZpZy5iZ0NvbG9yfSAke2NvbmZpZy5ob3ZlckNvbG9yfSBib3JkZXItMiBib3JkZXItZ3JheS0yMDAgcm91bmRlZC1sZyBwLTQgdGV4dC1jZW50ZXIgdHJhbnNpdGlvbi1hbGwgZHVyYXRpb24tMjAwIGhvdmVyOnNoYWRvdy1tZFwiIFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1tdXNjbGU9XCIke211c2NsZX1cIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXggZmxleC1jb2wgaXRlbXMtY2VudGVyIHNwYWNlLXktMlwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCIke2NvbmZpZy5pY29ufSAke2NvbmZpZy5jb2xvcn0gdGV4dC0yeGxcIj48L2k+XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImZvbnQtbWVkaXVtIHRleHQtZ3JheS04MDBcIj4ke211c2NsZX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgYDtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuam9pbignJyk7XG5cbiAgICAgICAgY29uc29sZS5sb2coJ011c2NsZSBncm91cCBidXR0b25zIGdlbmVyYXRlZDonLCB0aGlzLm11c2NsZUdyb3Vwcy5sZW5ndGgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgKiDpgbjmip7jgZXjgozjgZ/nrYvogonjgrDjg6vjg7zjg5fjgavln7rjgaXjgYTjgabjgqjjgq/jgrXjgrXjgqTjgrrjgpLooajnpLpcbiAgICovXG4gICAgbG9hZEV4ZXJjaXNlc0ZvclNlbGVjdGVkTXVzY2xlcygpIHtcbiAgICAgICAgY29uc3Qgc2VsZWN0ZWRNdXNjbGVzID0gQXJyYXkuZnJvbShcbiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5tdXNjbGUtZ3JvdXAtYnRuLnNlbGVjdGVkJylcbiAgICAgICAgKS5tYXAoKGJ0bikgPT4gYnRuLmRhdGFzZXQubXVzY2xlKTtcblxuICAgICAgICBpZiAoc2VsZWN0ZWRNdXNjbGVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgdGhpcy5jbGVhckV4ZXJjaXNlUHJlc2V0cygpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2V4ZXJjaXNlLXByZXNldHMnKTtcbiAgICAgICAgaWYgKCFjb250YWluZXIpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0V4ZXJjaXNlIHByZXNldHMgY29udGFpbmVyIG5vdCBmb3VuZCcpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8g6YG45oqe44GV44KM44Gf562L6IKJ44Kw44Or44O844OX44Gu44Ko44Kv44K144K144Kk44K644KS5Y+W5b6XXG4gICAgICAgIGNvbnN0IHJlbGV2YW50RXhlcmNpc2VzID0gdGhpcy5nZXREZWZhdWx0RXhlcmNpc2VzKCkuZmlsdGVyKChleGVyY2lzZSkgPT5cbiAgICAgICAgICAgIHNlbGVjdGVkTXVzY2xlcy5pbmNsdWRlcyhleGVyY2lzZS5tdXNjbGVfZ3JvdXApXG4gICAgICAgICk7XG5cbiAgICAgICAgaWYgKHJlbGV2YW50RXhlcmNpc2VzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgY29udGFpbmVyLmlubmVySFRNTCA9IGBcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXNwYW4tZnVsbCB0ZXh0LWNlbnRlciB0ZXh0LWdyYXktNTAwIHB5LTRcIj5cbiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJmYXMgZmEtaW5mby1jaXJjbGUgdGV4dC14bCBtYi0yXCI+PC9pPlxuICAgICAgICAgICAgICAgICAgICA8cD7pgbjmip7jgZXjgozjgZ/pg6jkvY3jga7jgqjjgq/jgrXjgrXjgqTjgrrjgYzopovjgaTjgYvjgorjgb7jgZvjgpM8L3A+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICBgO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgY29udGFpbmVyLmlubmVySFRNTCA9IHJlbGV2YW50RXhlcmNpc2VzXG4gICAgICAgICAgICAubWFwKFxuICAgICAgICAgICAgICAgIChleGVyY2lzZSkgPT4gYFxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImV4ZXJjaXNlLXByZXNldC1idG4gYmctd2hpdGUgYm9yZGVyIGJvcmRlci1ncmF5LTIwMCByb3VuZGVkLWxnIHAtMyB0ZXh0LWxlZnQgaG92ZXI6YmctZ3JheS01MCBob3Zlcjpib3JkZXItYmx1ZS0zMDAgdHJhbnNpdGlvbi1hbGwgZHVyYXRpb24tMjAwXCIgXG4gICAgICAgICAgICAgICAgICAgIGRhdGEtZXhlcmNpc2U9XCIke2V4ZXJjaXNlLm5hbWV9XCIgZGF0YS1tdXNjbGU9XCIke2V4ZXJjaXNlLm11c2NsZV9ncm91cH1cIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aDQgY2xhc3M9XCJmb250LW1lZGl1bSB0ZXh0LWdyYXktOTAwXCI+JHtleGVyY2lzZS5uYW1lfTwvaDQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz1cInRleHQtc20gdGV4dC1ncmF5LTUwMFwiPiR7ZXhlcmNpc2UubXVzY2xlX2dyb3VwfSDigKIgJHtleGVyY2lzZS5lcXVpcG1lbnR9PC9wPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgJHsn4piFJy5yZXBlYXQoZXhlcmNpc2UuZGlmZmljdWx0eSl9XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInRleHQteHMgdGV4dC1ncmF5LTQwMCBtbC0xXCI+JHtleGVyY2lzZS5kaWZmaWN1bHR5fS81PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICBgXG4gICAgICAgICAgICApXG4gICAgICAgICAgICAuam9pbignJyk7XG5cbiAgICAgICAgLy8g44Ko44Kv44K144K144Kk44K644Oc44K/44Oz44Gu44Kk44OZ44Oz44OI44Oq44K544OK44O844KS6Kit5a6aXG4gICAgICAgIGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKCcuZXhlcmNpc2UtcHJlc2V0LWJ0bicpLmZvckVhY2goKGJ0bikgPT4ge1xuICAgICAgICAgICAgYnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGV4ZXJjaXNlTmFtZSA9IGJ0bi5kYXRhc2V0LmV4ZXJjaXNlO1xuICAgICAgICAgICAgICAgIHRoaXMuYWRkRXhlcmNpc2VUb1dvcmtvdXQoZXhlcmNpc2VOYW1lKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcblxuICAgICAgICBjb25zb2xlLmxvZyhcbiAgICAgICAgICAgICdMb2FkZWQgZXhlcmNpc2VzIGZvciBzZWxlY3RlZCBtdXNjbGVzOicsXG4gICAgICAgICAgICBzZWxlY3RlZE11c2NsZXMsXG4gICAgICAgICAgICByZWxldmFudEV4ZXJjaXNlcy5sZW5ndGhcbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICog44Ko44Kv44K144K144Kk44K644OX44Oq44K744OD44OI44KS44Kv44Oq44KiXG4gICAqL1xuICAgIGNsZWFyRXhlcmNpc2VQcmVzZXRzKCkge1xuICAgICAgICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZXhlcmNpc2UtcHJlc2V0cycpO1xuICAgICAgICBpZiAoY29udGFpbmVyKSB7XG4gICAgICAgICAgICBjb250YWluZXIuaW5uZXJIVE1MID0gYFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtc3Bhbi1mdWxsIHRleHQtY2VudGVyIHRleHQtZ3JheS01MDAgcHktNFwiPlxuICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cImZhcyBmYS1oYW5kLXBvaW50ZXIgdGV4dC14bCBtYi0yXCI+PC9pPlxuICAgICAgICAgICAgICAgICAgICA8cD7nrYvogonpg6jkvY3jgpLpgbjmip7jgZfjgabjgY/jgaDjgZXjgYQ8L3A+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICBgO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAqIOeti+iCieOCsOODq+ODvOODl+OBruOCreODo+ODg+OCt+ODpeOCkuWIneacn+WMllxuICAgKi9cbiAgICBhc3luYyBpbml0aWFsaXplTXVzY2xlR3JvdXBDYWNoZSgpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmICghc3VwYWJhc2VTZXJ2aWNlLmlzQXZhaWxhYmxlKCkpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcbiAgICAgICAgICAgICAgICAgICAgJ1N1cGFiYXNlIG5vdCBhdmFpbGFibGUsIGNhbm5vdCBpbml0aWFsaXplIG11c2NsZSBncm91cCBjYWNoZSdcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VTZXJ2aWNlLmNsaWVudFxuICAgICAgICAgICAgICAgIC5mcm9tKCdtdXNjbGVfZ3JvdXBzJylcbiAgICAgICAgICAgICAgICAuc2VsZWN0KCdpZCwgbmFtZV9qYScpO1xuXG4gICAgICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gbG9hZCBtdXNjbGUgZ3JvdXBzOicsIGVycm9yKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgZGF0YS5mb3JFYWNoKChtdXNjbGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tdXNjbGVHcm91cENhY2hlLnNldChtdXNjbGUubmFtZV9qYSwgbXVzY2xlLmlkKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnTXVzY2xlIGdyb3VwIGNhY2hlIGluaXRpYWxpemVkOicsIHRoaXMubXVzY2xlR3JvdXBDYWNoZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbml0aWFsaXppbmcgbXVzY2xlIGdyb3VwIGNhY2hlOicsIGVycm9yKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgKiDnrYvogonjgrDjg6vjg7zjg5flkI3jgpJVVUlE44Gr5aSJ5o+bXG4gICAqL1xuICAgIGFzeW5jIGNvbnZlcnRNdXNjbGVHcm91cHNUb1VVSURzKG11c2NsZUdyb3VwTmFtZXMpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmICghc3VwYWJhc2VTZXJ2aWNlLmlzQXZhaWxhYmxlKCkpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcbiAgICAgICAgICAgICAgICAgICAgJ1N1cGFiYXNlIG5vdCBhdmFpbGFibGUsIGNhbm5vdCBjb252ZXJ0IG11c2NsZSBncm91cHMgdG8gVVVJRHMnXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IG11c2NsZUdyb3VwVVVJRHMgPSBbXTtcblxuICAgICAgICAgICAgZm9yIChjb25zdCBtdXNjbGVOYW1lIG9mIG11c2NsZUdyb3VwTmFtZXMpIHtcbiAgICAgICAgICAgICAgICAvLyDjgq3jg6Pjg4Pjgrfjg6XjgYvjgonnorroqo1cbiAgICAgICAgICAgICAgICBpZiAodGhpcy5tdXNjbGVHcm91cENhY2hlLmhhcyhtdXNjbGVOYW1lKSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB1dWlkID0gdGhpcy5tdXNjbGVHcm91cENhY2hlLmdldChtdXNjbGVOYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgbXVzY2xlR3JvdXBVVUlEcy5wdXNoKHV1aWQpO1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgVXNpbmcgY2FjaGVkIFVVSUQgZm9yICR7bXVzY2xlTmFtZX06ICR7dXVpZH1gKTtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8g44OH44O844K/44OZ44O844K544GL44KJ5Y+W5b6XXG4gICAgICAgICAgICAgICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VTZXJ2aWNlLmNsaWVudFxuICAgICAgICAgICAgICAgICAgICAuZnJvbSgnbXVzY2xlX2dyb3VwcycpXG4gICAgICAgICAgICAgICAgICAgIC5zZWxlY3QoJ2lkJylcbiAgICAgICAgICAgICAgICAgICAgLmVxKCduYW1lX2phJywgbXVzY2xlTmFtZSlcbiAgICAgICAgICAgICAgICAgICAgLnNpbmdsZSgpO1xuXG4gICAgICAgICAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAgICAgICAgICAgICAgICAgICBgRmFpbGVkIHRvIGdldCBVVUlEIGZvciBtdXNjbGUgZ3JvdXAgJHttdXNjbGVOYW1lfTpgLFxuICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKGRhdGEgJiYgZGF0YS5pZCkge1xuICAgICAgICAgICAgICAgICAgICAvLyDjgq3jg6Pjg4Pjgrfjg6Xjgavkv53lrZhcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tdXNjbGVHcm91cENhY2hlLnNldChtdXNjbGVOYW1lLCBkYXRhLmlkKTtcbiAgICAgICAgICAgICAgICAgICAgbXVzY2xlR3JvdXBVVUlEcy5wdXNoKGRhdGEuaWQpO1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgQ29udmVydGVkICR7bXVzY2xlTmFtZX0gdG8gVVVJRDogJHtkYXRhLmlkfWApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIG11c2NsZUdyb3VwVVVJRHM7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBjb252ZXJ0aW5nIG11c2NsZSBncm91cHMgdG8gVVVJRHM6JywgZXJyb3IpO1xuICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAqIOODr+ODvOOCr+OCouOCpuODiOWxpeattOOBq+S/neWtmFxuICAgKi9cbiAgICBhc3luYyBzYXZlV29ya291dFRvSGlzdG9yeSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLmN1cnJlbnRXb3Jrb3V0KSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnTm8gY3VycmVudCB3b3Jrb3V0IHRvIHNhdmUnKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIOmHjeikh+S/neWtmOOCkumYsuOBkOOBn+OCgeOBruODgeOCp+ODg+OCr1xuICAgICAgICBpZiAodGhpcy5jdXJyZW50V29ya291dC5zYXZlZCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ1dvcmtvdXQgYWxyZWFkeSBzYXZlZCwgc2tpcHBpbmcgZHVwbGljYXRlIHNhdmUnKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGVuZFRpbWUgPSBuZXcgRGF0ZSgpO1xuICAgICAgICBjb25zdCBkdXJhdGlvbiA9IE1hdGguZmxvb3IoXG4gICAgICAgICAgICAoZW5kVGltZSAtIHRoaXMuY3VycmVudFdvcmtvdXQuc3RhcnRUaW1lKSAvIDYwMDAwXG4gICAgICAgICk7XG5cbiAgICAgICAgLy8g562L6IKJ44Kw44Or44O844OX5ZCN44KSVVVJROOBq+WkieaPm1xuICAgICAgICBjb25zdCBtdXNjbGVHcm91cFVVSURzID0gYXdhaXQgdGhpcy5jb252ZXJ0TXVzY2xlR3JvdXBzVG9VVUlEcyhcbiAgICAgICAgICAgIHRoaXMuY3VycmVudFdvcmtvdXQubXVzY2xlR3JvdXBzXG4gICAgICAgICk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdDb252ZXJ0ZWQgbXVzY2xlIGdyb3VwcyB0byBVVUlEczonLCBtdXNjbGVHcm91cFVVSURzKTtcblxuICAgICAgICAvLyDnj77lnKjjga7jg6bjg7zjgrbjg7xJROOCkuWPluW+l1xuICAgICAgICBjb25zdCBjdXJyZW50VXNlciA9IGF3YWl0IGF1dGhNYW5hZ2VyLmdldEN1cnJlbnRVc2VyKCk7XG4gICAgICAgIGlmICghY3VycmVudFVzZXIpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ05vIGF1dGhlbnRpY2F0ZWQgdXNlciBmb3VuZCcpO1xuICAgICAgICAgICAgc2hvd05vdGlmaWNhdGlvbign44Ot44Kw44Kk44Oz44GM5b+F6KaB44Gn44GZJywgJ2Vycm9yJyk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCB3b3Jrb3V0RGF0YSA9IHtcbiAgICAgICAgICAgIHVzZXJfaWQ6IGN1cnJlbnRVc2VyLmlkLFxuICAgICAgICAgICAgc2Vzc2lvbl9uYW1lOiB0aGlzLmN1cnJlbnRXb3Jrb3V0LnNlc3Npb25OYW1lLFxuICAgICAgICAgICAgbXVzY2xlX2dyb3Vwc190cmFpbmVkOiBtdXNjbGVHcm91cFVVSURzLFxuICAgICAgICAgICAgd29ya291dF9kYXRlOiB0aGlzLmN1cnJlbnRXb3Jrb3V0LnN0YXJ0VGltZS50b0lTT1N0cmluZygpLFxuICAgICAgICAgICAgdG90YWxfZHVyYXRpb25fbWludXRlczogZHVyYXRpb24sXG4gICAgICAgICAgICBjcmVhdGVkX2F0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICAgICAgICB1cGRhdGVkX2F0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICAgICAgfTtcblxuICAgICAgICBjb25zb2xlLmxvZygnU2F2aW5nIHdvcmtvdXQgdG8gU3VwYWJhc2U6Jywgd29ya291dERhdGEpO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAoc3VwYWJhc2VTZXJ2aWNlLmlzQXZhaWxhYmxlKCkpIHtcbiAgICAgICAgICAgICAgICAvLyBTdXBhYmFzZeOBq+S/neWtmFxuICAgICAgICAgICAgICAgIGF3YWl0IHN1cGFiYXNlU2VydmljZS5zYXZlV29ya291dCh3b3Jrb3V0RGF0YSk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1dvcmtvdXQgc2F2ZWQgdG8gU3VwYWJhc2Ugc3VjY2Vzc2Z1bGx5Jyk7XG5cbiAgICAgICAgICAgICAgICAvLyDlsaXmrbTjgpLlho3oqq3jgb/ovrzjgb9cbiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLmxvYWRXb3Jrb3V0SGlzdG9yeSgpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcbiAgICAgICAgICAgICAgICAgICAgJ1N1cGFiYXNlIG5vdCBhdmFpbGFibGUsIHNhdmluZyB0byBsb2NhbFN0b3JhZ2UgYXMgZmFsbGJhY2snXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAvLyDjg5Xjgqnjg7zjg6vjg5Djg4Pjgq86IOODreODvOOCq+ODq+OCueODiOODrOODvOOCuOOBq+S/neWtmFxuICAgICAgICAgICAgICAgIGNvbnN0IGhpc3RvcnkgPSBKU09OLnBhcnNlKFxuICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnd29ya291dEhpc3RvcnknKSB8fCAnW10nXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICBoaXN0b3J5LnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAuLi53b3Jrb3V0RGF0YSxcbiAgICAgICAgICAgICAgICAgICAgZW5kVGltZSxcbiAgICAgICAgICAgICAgICAgICAgZHVyYXRpb25cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnd29ya291dEhpc3RvcnknLCBKU09OLnN0cmluZ2lmeShoaXN0b3J5KSk7XG4gICAgICAgICAgICAgICAgdGhpcy51cGRhdGVXb3Jrb3V0SGlzdG9yeShoaXN0b3J5KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8g54++5Zyo44Gu44Ov44O844Kv44Ki44Km44OI44Gr5L+d5a2Y5riI44G/44OV44Op44Kw44KS6Kit5a6aXG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRXb3Jrb3V0LnNhdmVkID0gdHJ1ZTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBzYXZlIHdvcmtvdXQ6JywgZXJyb3IpO1xuICAgICAgICAgICAgc2hvd05vdGlmaWNhdGlvbign44Ov44O844Kv44Ki44Km44OI44Gu5L+d5a2Y44Gr5aSx5pWX44GX44G+44GX44GfJywgJ2Vycm9yJyk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICog44Ov44O844Kv44Ki44Km44OI44K/44Kk44Oe44O844KS6ZaL5aeLXG4gICAqL1xuICAgIHN0YXJ0V29ya291dFRpbWVyKCkge1xuICAgICAgICB0aGlzLndvcmtvdXRTdGFydFRpbWUgPSBuZXcgRGF0ZSgpO1xuICAgICAgICB0aGlzLndvcmtvdXRUaW1lciA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlV29ya291dFRpbWVyKCk7XG4gICAgICAgIH0sIDEwMDApO1xuICAgIH1cblxuICAgIC8qKlxuICAgKiDjg6/jg7zjgq/jgqLjgqbjg4jjgr/jgqTjg57jg7zjgpLmm7TmlrBcbiAgICovXG4gICAgdXBkYXRlV29ya291dFRpbWVyKCkge1xuICAgICAgICBpZiAoIXRoaXMud29ya291dFN0YXJ0VGltZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTtcbiAgICAgICAgY29uc3QgZGlmZiA9IG5vdyAtIHRoaXMud29ya291dFN0YXJ0VGltZTtcbiAgICAgICAgY29uc3QgbWludXRlcyA9IE1hdGguZmxvb3IoZGlmZiAvIDYwMDAwKTtcbiAgICAgICAgY29uc3Qgc2Vjb25kcyA9IE1hdGguZmxvb3IoKGRpZmYgJSA2MDAwMCkgLyAxMDAwKTtcblxuICAgICAgICBjb25zdCB0aW1lckRpc3BsYXkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnd29ya291dC10aW1lcicpO1xuICAgICAgICBpZiAodGltZXJEaXNwbGF5KSB7XG4gICAgICAgICAgICB0aW1lckRpc3BsYXkudGV4dENvbnRlbnQgPSBgJHttaW51dGVzLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKX06JHtzZWNvbmRzLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKX1gO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAqIOODh+ODleOCqeODq+ODiOOCqOOCr+OCteOCteOCpOOCuuOCkuWPluW+l1xuICAgKi9cbiAgICBnZXREZWZhdWx0RXhlcmNpc2VzKCkge1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgLy8g6IO4562L44Ko44Kv44K144K144Kk44K6XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ+ODmeODs+ODgeODl+ODrOOCuScsXG4gICAgICAgICAgICAgICAgbXVzY2xlX2dyb3VwOiAn6IO4JyxcbiAgICAgICAgICAgICAgICBkaWZmaWN1bHR5OiAzLFxuICAgICAgICAgICAgICAgIGVxdWlwbWVudDogJ+ODkOODvOODmeODqydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ+ODl+ODg+OCt+ODpeOCouODg+ODlycsXG4gICAgICAgICAgICAgICAgbXVzY2xlX2dyb3VwOiAn6IO4JyxcbiAgICAgICAgICAgICAgICBkaWZmaWN1bHR5OiAyLFxuICAgICAgICAgICAgICAgIGVxdWlwbWVudDogJ+iHqumHjSdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ+ODgOODs+ODmeODq+ODleODqeOCpCcsXG4gICAgICAgICAgICAgICAgbXVzY2xlX2dyb3VwOiAn6IO4JyxcbiAgICAgICAgICAgICAgICBkaWZmaWN1bHR5OiAyLFxuICAgICAgICAgICAgICAgIGVxdWlwbWVudDogJ+ODgOODs+ODmeODqydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ+OCpOODs+OCr+ODqeOCpOODs+ODl+ODrOOCuScsXG4gICAgICAgICAgICAgICAgbXVzY2xlX2dyb3VwOiAn6IO4JyxcbiAgICAgICAgICAgICAgICBkaWZmaWN1bHR5OiAzLFxuICAgICAgICAgICAgICAgIGVxdWlwbWVudDogJ+ODkOODvOODmeODqydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ+ODh+OCo+ODg+ODl+OCuScsXG4gICAgICAgICAgICAgICAgbXVzY2xlX2dyb3VwOiAn6IO4JyxcbiAgICAgICAgICAgICAgICBkaWZmaWN1bHR5OiAzLFxuICAgICAgICAgICAgICAgIGVxdWlwbWVudDogJ+iHqumHjSdcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8vIOiDjOeti+OCqOOCr+OCteOCteOCpOOCulxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6ICfjg4fjg4Pjg4njg6rjg5Xjg4gnLFxuICAgICAgICAgICAgICAgIG11c2NsZV9ncm91cDogJ+iDjOS4rScsXG4gICAgICAgICAgICAgICAgZGlmZmljdWx0eTogNCxcbiAgICAgICAgICAgICAgICBlcXVpcG1lbnQ6ICfjg5Djg7zjg5njg6snXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6ICfjg5fjg6vjgqLjg4Pjg5cnLFxuICAgICAgICAgICAgICAgIG11c2NsZV9ncm91cDogJ+iDjOS4rScsXG4gICAgICAgICAgICAgICAgZGlmZmljdWx0eTogNCxcbiAgICAgICAgICAgICAgICBlcXVpcG1lbnQ6ICfoh6rph40nXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6ICfjg5njg7Pjg4jjgqrjg7zjg5Djg7zjg63jgqYnLFxuICAgICAgICAgICAgICAgIG11c2NsZV9ncm91cDogJ+iDjOS4rScsXG4gICAgICAgICAgICAgICAgZGlmZmljdWx0eTogMyxcbiAgICAgICAgICAgICAgICBlcXVpcG1lbnQ6ICfjg5Djg7zjg5njg6snXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6ICfjg6njg4Pjg4jjg5fjg6vjg4Djgqbjg7MnLFxuICAgICAgICAgICAgICAgIG11c2NsZV9ncm91cDogJ+iDjOS4rScsXG4gICAgICAgICAgICAgICAgZGlmZmljdWx0eTogMixcbiAgICAgICAgICAgICAgICBlcXVpcG1lbnQ6ICfjg57jgrfjg7MnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6ICfjg6/jg7Pjg4/jg7Pjg4njg4Djg7Pjg5njg6vjg63jgqYnLFxuICAgICAgICAgICAgICAgIG11c2NsZV9ncm91cDogJ+iDjOS4rScsXG4gICAgICAgICAgICAgICAgZGlmZmljdWx0eTogMyxcbiAgICAgICAgICAgICAgICBlcXVpcG1lbnQ6ICfjg4Djg7Pjg5njg6snXG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvLyDohJrnrYvjgqjjgq/jgrXjgrXjgqTjgrpcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiAn44K544Kv44Ov44OD44OIJyxcbiAgICAgICAgICAgICAgICBtdXNjbGVfZ3JvdXA6ICfohJonLFxuICAgICAgICAgICAgICAgIGRpZmZpY3VsdHk6IDMsXG4gICAgICAgICAgICAgICAgZXF1aXBtZW50OiAn44OQ44O844OZ44OrJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHsgbmFtZTogJ+ODqeODs+OCuCcsIG11c2NsZV9ncm91cDogJ+iEmicsIGRpZmZpY3VsdHk6IDIsIGVxdWlwbWVudDogJ+iHqumHjScgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiAn44Os44OD44Kw44OX44Os44K5JyxcbiAgICAgICAgICAgICAgICBtdXNjbGVfZ3JvdXA6ICfohJonLFxuICAgICAgICAgICAgICAgIGRpZmZpY3VsdHk6IDIsXG4gICAgICAgICAgICAgICAgZXF1aXBtZW50OiAn44Oe44K344OzJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiAn44OW44Or44Ks44Oq44Ki44Oz44K544Kv44Ov44OD44OIJyxcbiAgICAgICAgICAgICAgICBtdXNjbGVfZ3JvdXA6ICfohJonLFxuICAgICAgICAgICAgICAgIGRpZmZpY3VsdHk6IDMsXG4gICAgICAgICAgICAgICAgZXF1aXBtZW50OiAn6Ieq6YeNJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiAn44Kr44O844OV44Os44Kk44K6JyxcbiAgICAgICAgICAgICAgICBtdXNjbGVfZ3JvdXA6ICfohJonLFxuICAgICAgICAgICAgICAgIGRpZmZpY3VsdHk6IDEsXG4gICAgICAgICAgICAgICAgZXF1aXBtZW50OiAn6Ieq6YeNJ1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLy8g6IKp562L44Ko44Kv44K144K144Kk44K6XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ+OCquODvOODkOODvOODmOODg+ODieODl+ODrOOCuScsXG4gICAgICAgICAgICAgICAgbXVzY2xlX2dyb3VwOiAn6IKpJyxcbiAgICAgICAgICAgICAgICBkaWZmaWN1bHR5OiAzLFxuICAgICAgICAgICAgICAgIGVxdWlwbWVudDogJ+ODkOODvOODmeODqydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ+OCteOCpOODieODrOOCpOOCuicsXG4gICAgICAgICAgICAgICAgbXVzY2xlX2dyb3VwOiAn6IKpJyxcbiAgICAgICAgICAgICAgICBkaWZmaWN1bHR5OiAyLFxuICAgICAgICAgICAgICAgIGVxdWlwbWVudDogJ+ODgOODs+ODmeODqydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ+ODleODreODs+ODiOODrOOCpOOCuicsXG4gICAgICAgICAgICAgICAgbXVzY2xlX2dyb3VwOiAn6IKpJyxcbiAgICAgICAgICAgICAgICBkaWZmaWN1bHR5OiAyLFxuICAgICAgICAgICAgICAgIGVxdWlwbWVudDogJ+ODgOODs+ODmeODqydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ+ODquOCouODh+ODq+ODiOODleODqeOCpCcsXG4gICAgICAgICAgICAgICAgbXVzY2xlX2dyb3VwOiAn6IKpJyxcbiAgICAgICAgICAgICAgICBkaWZmaWN1bHR5OiAyLFxuICAgICAgICAgICAgICAgIGVxdWlwbWVudDogJ+ODgOODs+ODmeODqydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogJ+OCouODvOODjuODq+ODieODl+ODrOOCuScsXG4gICAgICAgICAgICAgICAgbXVzY2xlX2dyb3VwOiAn6IKpJyxcbiAgICAgICAgICAgICAgICBkaWZmaWN1bHR5OiAzLFxuICAgICAgICAgICAgICAgIGVxdWlwbWVudDogJ+ODgOODs+ODmeODqydcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8vIOiFleeti+OCqOOCr+OCteOCteOCpOOCulxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6ICfjg5Djg7zjg5njg6vjgqvjg7zjg6snLFxuICAgICAgICAgICAgICAgIG11c2NsZV9ncm91cDogJ+iFlScsXG4gICAgICAgICAgICAgICAgZGlmZmljdWx0eTogMixcbiAgICAgICAgICAgICAgICBlcXVpcG1lbnQ6ICfjg5Djg7zjg5njg6snXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6ICfjg4Djg7Pjg5njg6vjgqvjg7zjg6snLFxuICAgICAgICAgICAgICAgIG11c2NsZV9ncm91cDogJ+iFlScsXG4gICAgICAgICAgICAgICAgZGlmZmljdWx0eTogMixcbiAgICAgICAgICAgICAgICBlcXVpcG1lbnQ6ICfjg4Djg7Pjg5njg6snXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6ICfjg4jjg6njgqTjgrvjg4Pjg5fjg4fjgqPjg4Pjg5fjgrknLFxuICAgICAgICAgICAgICAgIG11c2NsZV9ncm91cDogJ+iFlScsXG4gICAgICAgICAgICAgICAgZGlmZmljdWx0eTogMyxcbiAgICAgICAgICAgICAgICBlcXVpcG1lbnQ6ICfoh6rph40nXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6ICfjg4/jg7Pjg57jg7zjgqvjg7zjg6snLFxuICAgICAgICAgICAgICAgIG11c2NsZV9ncm91cDogJ+iFlScsXG4gICAgICAgICAgICAgICAgZGlmZmljdWx0eTogMixcbiAgICAgICAgICAgICAgICBlcXVpcG1lbnQ6ICfjg4Djg7Pjg5njg6snXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6ICfjgq/jg63jg7zjgrrjgrDjg6rjg4Pjg5fjg5fjg4Pjgrfjg6XjgqLjg4Pjg5cnLFxuICAgICAgICAgICAgICAgIG11c2NsZV9ncm91cDogJ+iFlScsXG4gICAgICAgICAgICAgICAgZGlmZmljdWx0eTogMyxcbiAgICAgICAgICAgICAgICBlcXVpcG1lbnQ6ICfoh6rph40nXG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvLyDohbnnrYvjgqjjgq/jgrXjgrXjgqTjgrpcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiAn44OX44Op44Oz44KvJyxcbiAgICAgICAgICAgICAgICBtdXNjbGVfZ3JvdXA6ICfohbnnrYsnLFxuICAgICAgICAgICAgICAgIGRpZmZpY3VsdHk6IDIsXG4gICAgICAgICAgICAgICAgZXF1aXBtZW50OiAn6Ieq6YeNJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiAn44Kv44Op44Oz44OBJyxcbiAgICAgICAgICAgICAgICBtdXNjbGVfZ3JvdXA6ICfohbnnrYsnLFxuICAgICAgICAgICAgICAgIGRpZmZpY3VsdHk6IDEsXG4gICAgICAgICAgICAgICAgZXF1aXBtZW50OiAn6Ieq6YeNJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiAn44K144Kk44OJ44OX44Op44Oz44KvJyxcbiAgICAgICAgICAgICAgICBtdXNjbGVfZ3JvdXA6ICfohbnnrYsnLFxuICAgICAgICAgICAgICAgIGRpZmZpY3VsdHk6IDIsXG4gICAgICAgICAgICAgICAgZXF1aXBtZW50OiAn6Ieq6YeNJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiAn44Ot44K344Ki44Oz44OE44Kk44K544OIJyxcbiAgICAgICAgICAgICAgICBtdXNjbGVfZ3JvdXA6ICfohbnnrYsnLFxuICAgICAgICAgICAgICAgIGRpZmZpY3VsdHk6IDIsXG4gICAgICAgICAgICAgICAgZXF1aXBtZW50OiAn6Ieq6YeNJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiAn44Oe44Km44Oz44OG44Oz44Kv44Op44Kk44Oe44O8JyxcbiAgICAgICAgICAgICAgICBtdXNjbGVfZ3JvdXA6ICfohbnnrYsnLFxuICAgICAgICAgICAgICAgIGRpZmZpY3VsdHk6IDMsXG4gICAgICAgICAgICAgICAgZXF1aXBtZW50OiAn6Ieq6YeNJ1xuICAgICAgICAgICAgfVxuICAgICAgICBdO1xuICAgIH1cblxuICAgIC8qKlxuICAgKiDjg6/jg7zjgq/jgqLjgqbjg4jlsaXmrbTjgpLmm7TmlrBcbiAgICovXG4gICAgdXBkYXRlV29ya291dEhpc3Rvcnkod29ya291dEhpc3RvcnkpIHtcbiAgICAgICAgY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3dvcmtvdXQtaGlzdG9yeScpO1xuICAgICAgICBpZiAoIWNvbnRhaW5lcikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc29sZS5sb2coJ1VwZGF0aW5nIHdvcmtvdXQgaGlzdG9yeSB3aXRoIGRhdGE6Jywgd29ya291dEhpc3RvcnkpO1xuXG4gICAgICAgIGlmICh3b3Jrb3V0SGlzdG9yeS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIGNvbnRhaW5lci5pbm5lckhUTUwgPSBgXG4gICAgICAgIDxkaXYgY2xhc3M9XCJ0ZXh0LWNlbnRlciBweS04IHRleHQtZ3JheS01MDBcIj5cbiAgICAgICAgICA8aSBjbGFzcz1cImZhcyBmYS1oaXN0b3J5IHRleHQtNHhsIG1iLTRcIj48L2k+XG4gICAgICAgICAgPHA+44G+44Gg44Ov44O844Kv44Ki44Km44OI44GM6KiY6Yyy44GV44KM44Gm44GE44G+44Gb44KTPC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIGA7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCByZWNlbnRXb3Jrb3V0cyA9IHdvcmtvdXRIaXN0b3J5XG4gICAgICAgICAgICAuc29ydCgoYSwgYikgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGVBID0gYS53b3Jrb3V0X2RhdGUgfHwgYS5zdGFydFRpbWUgfHwgYS5jcmVhdGVkX2F0O1xuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGVCID0gYi53b3Jrb3V0X2RhdGUgfHwgYi5zdGFydFRpbWUgfHwgYi5jcmVhdGVkX2F0O1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgRGF0ZShkYXRlQikgLSBuZXcgRGF0ZShkYXRlQSk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLnNsaWNlKDAsIDEwKTtcblxuICAgICAgICBjb250YWluZXIuaW5uZXJIVE1MID0gcmVjZW50V29ya291dHNcbiAgICAgICAgICAgIC5tYXAoKHdvcmtvdXQpID0+IHtcbiAgICAgICAgICAgICAgICAvLyDjg4fjg7zjgr/jg5njg7zjgrnjga7mp4vpgKDjgavlv5zjgZjjgabpganliIfjgarjg5XjgqPjg7zjg6vjg4njgpLlj5blvpdcbiAgICAgICAgICAgICAgICBjb25zdCBzZXNzaW9uTmFtZSA9XG4gICAgICAgICAgd29ya291dC5zZXNzaW9uX25hbWUgfHwgd29ya291dC5zZXNzaW9uTmFtZSB8fCAn44Ov44O844Kv44Ki44Km44OIJztcbiAgICAgICAgICAgICAgICBjb25zdCBtdXNjbGVHcm91cHMgPVxuICAgICAgICAgIHdvcmtvdXQubXVzY2xlX2dyb3Vwc190cmFpbmVkIHx8XG4gICAgICAgICAgd29ya291dC5tdXNjbGVHcm91cHMgfHxcbiAgICAgICAgICB3b3Jrb3V0Lm11c2NsZV9ncm91cHMgfHxcbiAgICAgICAgICBbXTtcbiAgICAgICAgICAgICAgICBjb25zdCBkdXJhdGlvbiA9XG4gICAgICAgICAgd29ya291dC50b3RhbF9kdXJhdGlvbl9taW51dGVzIHx8XG4gICAgICAgICAgd29ya291dC5kdXJhdGlvbiB8fFxuICAgICAgICAgIHdvcmtvdXQudG90YWxfZHVyYXRpb24gfHxcbiAgICAgICAgICAwO1xuICAgICAgICAgICAgICAgIGNvbnN0IHdvcmtvdXREYXRlID1cbiAgICAgICAgICB3b3Jrb3V0LndvcmtvdXRfZGF0ZSB8fFxuICAgICAgICAgIHdvcmtvdXQuc3RhcnRUaW1lIHx8XG4gICAgICAgICAgd29ya291dC5jcmVhdGVkX2F0IHx8XG4gICAgICAgICAgd29ya291dC5kYXRlO1xuXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1Byb2Nlc3Npbmcgd29ya291dDonLCB7XG4gICAgICAgICAgICAgICAgICAgIHNlc3Npb25OYW1lLFxuICAgICAgICAgICAgICAgICAgICBtdXNjbGVHcm91cHMsXG4gICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uLFxuICAgICAgICAgICAgICAgICAgICB3b3Jrb3V0RGF0ZVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIGBcbiAgICAgIDxkaXYgY2xhc3M9XCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gcC00IGJvcmRlci1iIGJvcmRlci1ncmF5LTIwMFwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleCBpdGVtcy1jZW50ZXJcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleC1zaHJpbmstMFwiPlxuICAgICAgICAgICAgPGkgY2xhc3M9XCJmYXMgZmEtZHVtYmJlbGwgdGV4dC1ibHVlLTYwMFwiPjwvaT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwibWwtNFwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1ncmF5LTkwMFwiPiR7c2Vzc2lvbk5hbWV9PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGV4dC1zbSB0ZXh0LWdyYXktNTAwXCI+JHtBcnJheS5pc0FycmF5KG11c2NsZUdyb3VwcykgPyBtdXNjbGVHcm91cHMuam9pbignLCAnKSA6IG11c2NsZUdyb3VwcyB8fCAn6YOo5L2N5LiN5piOJ308L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJ0ZXh0LXJpZ2h0XCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cInRleHQtc20gdGV4dC1ncmF5LTkwMFwiPiR7ZHVyYXRpb2595YiGPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cInRleHQtc20gdGV4dC1ncmF5LTUwMFwiPiR7dGhpcy5mb3JtYXREYXRlKHdvcmtvdXREYXRlKX08L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICBgO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5qb2luKCcnKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICog5pel5LuY44KS44OV44Kp44O844Oe44OD44OIXG4gICAqL1xuICAgIGZvcm1hdERhdGUoZGF0ZVN0cmluZykge1xuICAgICAgICBpZiAoIWRhdGVTdHJpbmcpIHtcbiAgICAgICAgICAgIHJldHVybiAn5pel5LuY5LiN5piOJztcbiAgICAgICAgfVxuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoZGF0ZVN0cmluZyk7XG4gICAgICAgICAgICBpZiAoaXNOYU4oZGF0ZS5nZXRUaW1lKCkpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICfml6Xku5jkuI3mmI4nO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGRhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKCdqYS1KUCcpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIGZvcm1hdCBkYXRlOicsIGRhdGVTdHJpbmcsIGVycm9yKTtcbiAgICAgICAgICAgIHJldHVybiAn5pel5LuY5LiN5piOJztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgKiDjg63jg7zjgqvjg6vjgrnjg4jjg6zjg7zjgrjjgYvjgonoqq3jgb/ovrzjgb9cbiAgICovXG4gICAgbG9hZEZyb21Mb2NhbFN0b3JhZ2Uoa2V5KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpIHx8ICdbXScpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihgRmFpbGVkIHRvIGxvYWQgZnJvbSBsb2NhbFN0b3JhZ2UgKCR7a2V5fSk6YCwgZXJyb3IpO1xuICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAqIOODhOODvOODq+ODgeODg+ODl+OCkuioreWumlxuICAgKi9cbiAgICBzZXR1cFRvb2x0aXBzKCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ1NldHRpbmcgdXAgdG9vbHRpcHMgZm9yIHdvcmtvdXQgcGFnZScpO1xuXG4gICAgICAgICAgICAvLyDnrYvogonpg6jkvY3jg5zjgr/jg7Pjga7jg4Tjg7zjg6vjg4Hjg4Pjg5dcbiAgICAgICAgICAgIHRvb2x0aXBNYW5hZ2VyLmFkZFRvb2x0aXAoXG4gICAgICAgICAgICAgICAgJy5tdXNjbGUtZ3JvdXAtYnRuW2RhdGEtbXVzY2xlPVwi6IO4XCJdJyxcbiAgICAgICAgICAgICAgICAn6IO4562L77yI5aSn6IO4562L77yJ44KS6Y2b44GI44KL44Ko44Kv44K144K144Kk44K644CC44OZ44Oz44OB44OX44Os44K544CB44OX44OD44K344Ol44Ki44OD44OX44Gq44Gp44CCJyxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAndG9wJyxcbiAgICAgICAgICAgICAgICAgICAgdGhlbWU6ICdwcmltYXJ5JyxcbiAgICAgICAgICAgICAgICAgICAgYW5pbWF0aW9uOiAnYm91bmNlJyxcbiAgICAgICAgICAgICAgICAgICAgYXJyb3c6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGRlbGF5OiAyMDBcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApO1xuXG4gICAgICAgICAgICB0b29sdGlwTWFuYWdlci5hZGRUb29sdGlwKFxuICAgICAgICAgICAgICAgICcubXVzY2xlLWdyb3VwLWJ0bltkYXRhLW11c2NsZT1cIuiDjOS4rVwiXScsXG4gICAgICAgICAgICAgICAgJ+iDjOeti+e+pOOCkumNm+OBiOOCi+OCqOOCr+OCteOCteOCpOOCuuOAguODqeODg+ODiOODl+ODq+ODgOOCpuODs+OAgeODreODvOOCpOODs+OCsOOBquOBqeOAgicsXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ3RvcCcsXG4gICAgICAgICAgICAgICAgICAgIHRoZW1lOiAnc3VjY2VzcycsXG4gICAgICAgICAgICAgICAgICAgIGFuaW1hdGlvbjogJ3NsaWRlJyxcbiAgICAgICAgICAgICAgICAgICAgYXJyb3c6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGRlbGF5OiAyMDBcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApO1xuXG4gICAgICAgICAgICB0b29sdGlwTWFuYWdlci5hZGRUb29sdGlwKFxuICAgICAgICAgICAgICAgICcubXVzY2xlLWdyb3VwLWJ0bltkYXRhLW11c2NsZT1cIuiCqVwiXScsXG4gICAgICAgICAgICAgICAgJ+iCqe+8iOS4ieinkueti++8ieOCkumNm+OBiOOCi+OCqOOCr+OCteOCteOCpOOCuuOAguOCt+ODp+ODq+ODgOODvOODl+ODrOOCueOAgeOCteOCpOODieODrOOCpOOCuuOBquOBqeOAgicsXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ3RvcCcsXG4gICAgICAgICAgICAgICAgICAgIHRoZW1lOiAnd2FybmluZycsXG4gICAgICAgICAgICAgICAgICAgIGFuaW1hdGlvbjogJ3NjYWxlJyxcbiAgICAgICAgICAgICAgICAgICAgYXJyb3c6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGRlbGF5OiAyMDBcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApO1xuXG4gICAgICAgICAgICB0b29sdGlwTWFuYWdlci5hZGRUb29sdGlwKFxuICAgICAgICAgICAgICAgICcubXVzY2xlLWdyb3VwLWJ0bltkYXRhLW11c2NsZT1cIuiFlVwiXScsXG4gICAgICAgICAgICAgICAgJ+S4iuiFleS6jOmgreeti+ODu+S4iemgreeti+OCkumNm+OBiOOCi+OCqOOCr+OCteOCteOCpOOCuuOAguOCouODvOODoOOCq+ODvOODq+OAgeODiOODqeOCpOOCu+ODg+ODl+OCueOBquOBqeOAgicsXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ3RvcCcsXG4gICAgICAgICAgICAgICAgICAgIHRoZW1lOiAncHJpbWFyeScsXG4gICAgICAgICAgICAgICAgICAgIGFuaW1hdGlvbjogJ2ZhZGVJbicsXG4gICAgICAgICAgICAgICAgICAgIGFycm93OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBkZWxheTogMjAwXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgdG9vbHRpcE1hbmFnZXIuYWRkVG9vbHRpcChcbiAgICAgICAgICAgICAgICAnLm11c2NsZS1ncm91cC1idG5bZGF0YS1tdXNjbGU9XCLohJpcIl0nLFxuICAgICAgICAgICAgICAgICfohJrpg6jvvIjlpKfohb/lm5vpoK3nrYvjg7vjg4/jg6Djgrnjg4jjg6rjg7PjgrDvvInjgpLpjZvjgYjjgovjgqjjgq/jgrXjgrXjgqTjgrrjgILjgrnjgq/jg6/jg4Pjg4jjgIHjg6zjg4PjgrDjg5fjg6zjgrnjgarjganjgIInLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246ICd0b3AnLFxuICAgICAgICAgICAgICAgICAgICB0aGVtZTogJ3N1Y2Nlc3MnLFxuICAgICAgICAgICAgICAgICAgICBhbmltYXRpb246ICdib3VuY2UnLFxuICAgICAgICAgICAgICAgICAgICBhcnJvdzogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgZGVsYXk6IDIwMFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIHRvb2x0aXBNYW5hZ2VyLmFkZFRvb2x0aXAoXG4gICAgICAgICAgICAgICAgJy5tdXNjbGUtZ3JvdXAtYnRuW2RhdGEtbXVzY2xlPVwi6IW5562LXCJdJyxcbiAgICAgICAgICAgICAgICAn6IW5562L576k44KS6Y2b44GI44KL44Ko44Kv44K144K144Kk44K644CC44Kv44Op44Oz44OB44CB44OX44Op44Oz44Kv44Gq44Gp44CCJyxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAndG9wJyxcbiAgICAgICAgICAgICAgICAgICAgdGhlbWU6ICd3YXJuaW5nJyxcbiAgICAgICAgICAgICAgICAgICAgYW5pbWF0aW9uOiAnc2xpZGUnLFxuICAgICAgICAgICAgICAgICAgICBhcnJvdzogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgZGVsYXk6IDIwMFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIC8vIOOCr+OCpOODg+OCr+OCueOCv+ODvOODiOODnOOCv+ODs+OBruODhOODvOODq+ODgeODg+ODl1xuICAgICAgICAgICAgdG9vbHRpcE1hbmFnZXIuYWRkVG9vbHRpcChcbiAgICAgICAgICAgICAgICAnI3F1aWNrLXN0YXJ0LWJ0bicsXG4gICAgICAgICAgICAgICAgJ+aOqOWlqOOBleOCjOOCi+eti+iCiemDqOS9jeOBruOCqOOCr+OCteOCteOCpOOCuuOCkuiHquWLlemBuOaKnuOBl+OBpuODr+ODvOOCr+OCouOCpuODiOOCkumWi+Wni+OBl+OBvuOBmeOAgicsXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ3RvcCcsXG4gICAgICAgICAgICAgICAgICAgIHRoZW1lOiAncHJpbWFyeScsXG4gICAgICAgICAgICAgICAgICAgIGFuaW1hdGlvbjogJ2JvdW5jZScsXG4gICAgICAgICAgICAgICAgICAgIGFycm93OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBkZWxheTogMzAwXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgLy8g44Ov44O844Kv44Ki44Km44OI6ZaL5aeL44Oc44K/44Oz44Gu44OE44O844Or44OB44OD44OXXG4gICAgICAgICAgICB0b29sdGlwTWFuYWdlci5hZGRUb29sdGlwKFxuICAgICAgICAgICAgICAgICcjc3RhcnQtd29ya291dC1idG4nLFxuICAgICAgICAgICAgICAgICfpgbjmip7jgZfjgZ/jgqjjgq/jgrXjgrXjgqTjgrrjgafjg6/jg7zjgq/jgqLjgqbjg4jjgpLplovlp4vjgZfjgb7jgZnjgILjgr/jgqTjg57jg7zjgYzoh6rli5Xjgafplovlp4vjgZXjgozjgb7jgZnjgIInLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246ICd0b3AnLFxuICAgICAgICAgICAgICAgICAgICB0aGVtZTogJ3N1Y2Nlc3MnLFxuICAgICAgICAgICAgICAgICAgICBhbmltYXRpb246ICdzY2FsZScsXG4gICAgICAgICAgICAgICAgICAgIGFycm93OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBkZWxheTogMzAwXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgLy8g44Ov44O844Kv44Ki44Km44OI57WC5LqG44Oc44K/44Oz44Gu44OE44O844Or44OB44OD44OXXG4gICAgICAgICAgICB0b29sdGlwTWFuYWdlci5hZGRUb29sdGlwKFxuICAgICAgICAgICAgICAgICcjZW5kLXdvcmtvdXQtYnRuJyxcbiAgICAgICAgICAgICAgICAn54++5Zyo44Gu44Ov44O844Kv44Ki44Km44OI44KS57WC5LqG44GX44CB57WQ5p6c44KS5L+d5a2Y44GX44G+44GZ44CCJyxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAndG9wJyxcbiAgICAgICAgICAgICAgICAgICAgdGhlbWU6ICdlcnJvcicsXG4gICAgICAgICAgICAgICAgICAgIGFuaW1hdGlvbjogJ2ZhZGVJbicsXG4gICAgICAgICAgICAgICAgICAgIGFycm93OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBkZWxheTogMzAwXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgLy8g44Ko44Kv44K144K144Kk44K66L+95Yqg44Oc44K/44Oz44Gu44OE44O844Or44OB44OD44OXXG4gICAgICAgICAgICB0b29sdGlwTWFuYWdlci5hZGRUb29sdGlwKFxuICAgICAgICAgICAgICAgICcjYWRkLWV4ZXJjaXNlLWJ0bicsXG4gICAgICAgICAgICAgICAgJ+aWsOOBl+OBhOOCqOOCr+OCteOCteOCpOOCuuOCkuODr+ODvOOCr+OCouOCpuODiOOBq+i/veWKoOOBl+OBvuOBmeOAgicsXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ3RvcCcsXG4gICAgICAgICAgICAgICAgICAgIHRoZW1lOiAncHJpbWFyeScsXG4gICAgICAgICAgICAgICAgICAgIGFuaW1hdGlvbjogJ3NsaWRlJyxcbiAgICAgICAgICAgICAgICAgICAgYXJyb3c6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGRlbGF5OiAyMDBcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAvLyDjgrvjg4Pjg4jov73liqDjg5zjgr/jg7Pjga7jg4Tjg7zjg6vjg4Hjg4Pjg5dcbiAgICAgICAgICAgIHRvb2x0aXBNYW5hZ2VyLmFkZFRvb2x0aXAoXG4gICAgICAgICAgICAgICAgJy5hZGQtc2V0LWJ0bicsXG4gICAgICAgICAgICAgICAgJ+OBk+OBruOCqOOCr+OCteOCteOCpOOCuuOBq+aWsOOBl+OBhOOCu+ODg+ODiOOCkui/veWKoOOBl+OBvuOBmeOAgicsXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ3RvcCcsXG4gICAgICAgICAgICAgICAgICAgIHRoZW1lOiAnc3VjY2VzcycsXG4gICAgICAgICAgICAgICAgICAgIGFuaW1hdGlvbjogJ3NjYWxlJyxcbiAgICAgICAgICAgICAgICAgICAgYXJyb3c6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGRlbGF5OiAyMDBcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAvLyDjgrvjg4Pjg4jliYrpmaTjg5zjgr/jg7Pjga7jg4Tjg7zjg6vjg4Hjg4Pjg5dcbiAgICAgICAgICAgIHRvb2x0aXBNYW5hZ2VyLmFkZFRvb2x0aXAoJy5yZW1vdmUtc2V0LWJ0bicsICfjgZPjga7jgrvjg4Pjg4jjgpLliYrpmaTjgZfjgb7jgZnjgIInLCB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246ICd0b3AnLFxuICAgICAgICAgICAgICAgIHRoZW1lOiAnZXJyb3InLFxuICAgICAgICAgICAgICAgIGFuaW1hdGlvbjogJ2ZhZGVJbicsXG4gICAgICAgICAgICAgICAgYXJyb3c6IHRydWUsXG4gICAgICAgICAgICAgICAgZGVsYXk6IDIwMFxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIC8vIOOCqOOCr+OCteOCteOCpOOCuuWJiumZpOODnOOCv+ODs+OBruODhOODvOODq+ODgeODg+ODl1xuICAgICAgICAgICAgdG9vbHRpcE1hbmFnZXIuYWRkVG9vbHRpcChcbiAgICAgICAgICAgICAgICAnLnJlbW92ZS1leGVyY2lzZS1idG4nLFxuICAgICAgICAgICAgICAgICfjgZPjga7jgqjjgq/jgrXjgrXjgqTjgrrjgpLjg6/jg7zjgq/jgqLjgqbjg4jjgYvjgonliYrpmaTjgZfjgb7jgZnjgIInLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246ICd0b3AnLFxuICAgICAgICAgICAgICAgICAgICB0aGVtZTogJ2Vycm9yJyxcbiAgICAgICAgICAgICAgICAgICAgYW5pbWF0aW9uOiAnc2xpZGUnLFxuICAgICAgICAgICAgICAgICAgICBhcnJvdzogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgZGVsYXk6IDIwMFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCfinIUgVG9vbHRpcHMgc2V0dXAgY29tcGxldGUgZm9yIHdvcmtvdXQgcGFnZScpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcign4p2MIEZhaWxlZCB0byBzZXR1cCB0b29sdGlwczonLCBlcnJvcik7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vIE1QQUluaXRpYWxpemVy55So44Gu44Ko44Kv44K544Od44O844OIXG5jb25zdCB3b3Jrb3V0UGFnZSA9IG5ldyBXb3Jrb3V0UGFnZSgpO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgaW5pdGlhbGl6ZTogYXN5bmMgKCkgPT4ge1xuICAgICAgICBhd2FpdCB3b3Jrb3V0UGFnZS5pbml0aWFsaXplKCk7XG4gICAgfVxufTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUVBLElBQUFBLFVBQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLFdBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLGdCQUFBLEdBQUFGLE9BQUE7QUFDQSxJQUFBRyxZQUFBLEdBQUFILE9BQUE7QUFDQSxJQUFBSSxRQUFBLEdBQUFKLE9BQUE7QUFDQSxJQUFBSyxlQUFBLEdBQUFMLE9BQUE7QUFBNEQsU0FBQU0sUUFBQUMsQ0FBQSxFQUFBQyxDQUFBLFFBQUFDLENBQUEsR0FBQUMsTUFBQSxDQUFBQyxJQUFBLENBQUFKLENBQUEsT0FBQUcsTUFBQSxDQUFBRSxxQkFBQSxRQUFBQyxDQUFBLEdBQUFILE1BQUEsQ0FBQUUscUJBQUEsQ0FBQUwsQ0FBQSxHQUFBQyxDQUFBLEtBQUFLLENBQUEsR0FBQUEsQ0FBQSxDQUFBQyxNQUFBLFdBQUFOLENBQUEsV0FBQUUsTUFBQSxDQUFBSyx3QkFBQSxDQUFBUixDQUFBLEVBQUFDLENBQUEsRUFBQVEsVUFBQSxPQUFBUCxDQUFBLENBQUFRLElBQUEsQ0FBQUMsS0FBQSxDQUFBVCxDQUFBLEVBQUFJLENBQUEsWUFBQUosQ0FBQTtBQUFBLFNBQUFVLGNBQUFaLENBQUEsYUFBQUMsQ0FBQSxNQUFBQSxDQUFBLEdBQUFZLFNBQUEsQ0FBQUMsTUFBQSxFQUFBYixDQUFBLFVBQUFDLENBQUEsV0FBQVcsU0FBQSxDQUFBWixDQUFBLElBQUFZLFNBQUEsQ0FBQVosQ0FBQSxRQUFBQSxDQUFBLE9BQUFGLE9BQUEsQ0FBQUksTUFBQSxDQUFBRCxDQUFBLE9BQUFhLE9BQUEsV0FBQWQsQ0FBQSxJQUFB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