20659f636855ad036ea24167694d90d5
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.muscleGroupService = void 0;
var _supabaseService = require("./supabaseService.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } // muscleGroupService.js - 筋肉部位管理サービス
/**
 * 筋肉部位管理サービス
 * 筋肉部位の定義、マッピング、取得を一元管理
 */
var MuscleGroupService = /*#__PURE__*/function () {
  function MuscleGroupService() {
    _classCallCheck(this, MuscleGroupService);
    this.muscleGroups = null;
    this.cache = new Map();
    this.cacheExpiry = 5 * 60 * 1000; // 5分
  }

  /**
   * 筋肉部位一覧を取得（キャッシュ付き）
   * @returns {Promise<Array>} 筋肉部位一覧
   */
  return _createClass(MuscleGroupService, [{
    key: "getMuscleGroups",
    value: (function () {
      var _getMuscleGroups = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {
        var cacheKey, cached, _yield$supabaseServic, data, error, muscleGroups, _t;
        return _regenerator().w(function (_context) {
          while (1) switch (_context.p = _context.n) {
            case 0:
              cacheKey = 'muscle_groups'; // キャッシュチェック
              if (!this.cache.has(cacheKey)) {
                _context.n = 1;
                break;
              }
              cached = this.cache.get(cacheKey);
              if (!(Date.now() - cached.timestamp < this.cacheExpiry)) {
                _context.n = 1;
                break;
              }
              return _context.a(2, cached.data);
            case 1:
              _context.p = 1;
              if (_supabaseService.supabaseService.isAvailable()) {
                _context.n = 2;
                break;
              }
              console.warn('Supabase not available, using fallback muscle groups');
              return _context.a(2, this.getFallbackMuscleGroups());
            case 2:
              _context.n = 3;
              return _supabaseService.supabaseService.client.from('muscle_groups').select('*').eq('is_active', true).order('display_order');
            case 3:
              _yield$supabaseServic = _context.v;
              data = _yield$supabaseServic.data;
              error = _yield$supabaseServic.error;
              if (!error) {
                _context.n = 4;
                break;
              }
              throw new Error(error.message);
            case 4:
              muscleGroups = data || []; // キャッシュに保存
              this.cache.set(cacheKey, {
                data: muscleGroups,
                timestamp: Date.now()
              });
              return _context.a(2, muscleGroups);
            case 5:
              _context.p = 5;
              _t = _context.v;
              console.error('Failed to get muscle groups:', _t);
              return _context.a(2, this.getFallbackMuscleGroups());
          }
        }, _callee, this, [[1, 5]]);
      }));
      function getMuscleGroups() {
        return _getMuscleGroups.apply(this, arguments);
      }
      return getMuscleGroups;
    }()
    /**
     * フォールバック用の筋肉部位データ
     * @returns {Array} 筋肉部位一覧
     */
    )
  }, {
    key: "getFallbackMuscleGroups",
    value: function getFallbackMuscleGroups() {
      return [{
        id: 'chest',
        name: 'chest',
        name_en: 'Chest',
        name_ja: '胸',
        description: 'Pectoral muscles including upper, middle, and lower chest',
        recovery_hours: 72,
        muscle_size: 'large',
        color_code: '#EF4444',
        icon_name: 'chest',
        display_order: 1,
        is_active: true
      }, {
        id: 'back',
        name: 'back',
        name_en: 'Back',
        name_ja: '背中',
        description: 'Latissimus dorsi, rhomboids, middle and lower trapezius',
        recovery_hours: 72,
        muscle_size: 'large',
        color_code: '#10B981',
        icon_name: 'back',
        display_order: 2,
        is_active: true
      }, {
        id: 'shoulders',
        name: 'shoulders',
        name_en: 'Shoulders',
        name_ja: '肩',
        description: 'Deltoids (anterior, medial, posterior)',
        recovery_hours: 48,
        muscle_size: 'small',
        color_code: '#F59E0B',
        icon_name: 'shoulders',
        display_order: 3,
        is_active: true
      }, {
        id: 'arms',
        name: 'arms',
        name_en: 'Arms',
        name_ja: '腕',
        description: 'Biceps, triceps, and forearms',
        recovery_hours: 48,
        muscle_size: 'small',
        color_code: '#8B5CF6',
        icon_name: 'arms',
        display_order: 4,
        is_active: true
      }, {
        id: 'legs',
        name: 'legs',
        name_en: 'Legs',
        name_ja: '脚',
        description: 'Quadriceps, hamstrings, glutes, and calves',
        recovery_hours: 72,
        muscle_size: 'large',
        color_code: '#06B6D4',
        icon_name: 'legs',
        display_order: 5,
        is_active: true
      }, {
        id: 'abs',
        name: 'abs',
        name_en: 'Abs',
        name_ja: '腹',
        description: 'Abdominal muscles and core',
        recovery_hours: 48,
        muscle_size: 'small',
        color_code: '#F97316',
        icon_name: 'abs',
        display_order: 6,
        is_active: true
      }];
    }

    /**
     * 筋肉部位IDから筋肉部位情報を取得
     * @param {string} muscleGroupId - 筋肉部位ID
     * @returns {Promise<Object|null>} 筋肉部位情報
     */
  }, {
    key: "getMuscleGroupById",
    value: (function () {
      var _getMuscleGroupById = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2(muscleGroupId) {
        var muscleGroups, found;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              if (muscleGroupId) {
                _context2.n = 1;
                break;
              }
              return _context2.a(2, null);
            case 1:
              _context2.n = 2;
              return this.getMuscleGroups();
            case 2:
              muscleGroups = _context2.v;
              console.log('Searching for muscle group ID:', muscleGroupId);
              console.log('Available muscle groups:', muscleGroups.map(function (g) {
                return {
                  id: g.id,
                  name_ja: g.name_ja
                };
              }));
              found = muscleGroups.find(function (group) {
                return group.id === muscleGroupId;
              });
              console.log('Found muscle group:', found);
              return _context2.a(2, found || null);
          }
        }, _callee2, this);
      }));
      function getMuscleGroupById(_x) {
        return _getMuscleGroupById.apply(this, arguments);
      }
      return getMuscleGroupById;
    }()
    /**
     * 筋肉部位名から筋肉部位情報を取得
     * @param {string} muscleGroupName - 筋肉部位名（日本語、英語、IDのいずれか）
     * @returns {Promise<Object|null>} 筋肉部位情報
     */
    )
  }, {
    key: "getMuscleGroupByName",
    value: (function () {
      var _getMuscleGroupByName = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3(muscleGroupName) {
        var muscleGroups, found;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              if (muscleGroupName) {
                _context3.n = 1;
                break;
              }
              return _context3.a(2, null);
            case 1:
              _context3.n = 2;
              return this.getMuscleGroups();
            case 2:
              muscleGroups = _context3.v;
              console.log('Searching for muscle group name:', muscleGroupName);
              console.log('Available muscle groups:', muscleGroups.map(function (g) {
                return {
                  name: g.name,
                  name_ja: g.name_ja,
                  name_en: g.name_en
                };
              }));
              found = muscleGroups.find(function (group) {
                return group.name === muscleGroupName || group.name_ja === muscleGroupName || group.name_en === muscleGroupName;
              });
              console.log('Found muscle group by name:', found);
              return _context3.a(2, found || null);
          }
        }, _callee3, this);
      }));
      function getMuscleGroupByName(_x2) {
        return _getMuscleGroupByName.apply(this, arguments);
      }
      return getMuscleGroupByName;
    }()
    /**
     * 筋肉部位の表示名を取得
     * @param {string} muscleGroupId - 筋肉部位ID
     * @returns {Promise<string>} 表示名
     */
    )
  }, {
    key: "getMuscleGroupDisplayName",
    value: (function () {
      var _getMuscleGroupDisplayName = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4(muscleGroupId) {
        var muscleGroup;
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.n) {
            case 0:
              _context4.n = 1;
              return this.getMuscleGroupById(muscleGroupId);
            case 1:
              muscleGroup = _context4.v;
              return _context4.a(2, muscleGroup ? muscleGroup.name_ja : muscleGroupId);
          }
        }, _callee4, this);
      }));
      function getMuscleGroupDisplayName(_x3) {
        return _getMuscleGroupDisplayName.apply(this, arguments);
      }
      return getMuscleGroupDisplayName;
    }()
    /**
     * 筋肉部位の色コードを取得
     * @param {string} muscleGroupId - 筋肉部位ID
     * @returns {Promise<string>} 色コード
     */
    )
  }, {
    key: "getMuscleGroupColor",
    value: (function () {
      var _getMuscleGroupColor = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5(muscleGroupId) {
        var muscleGroup;
        return _regenerator().w(function (_context5) {
          while (1) switch (_context5.n) {
            case 0:
              _context5.n = 1;
              return this.getMuscleGroupById(muscleGroupId);
            case 1:
              muscleGroup = _context5.v;
              return _context5.a(2, muscleGroup ? muscleGroup.color_code : '#3B82F6');
          }
        }, _callee5, this);
      }));
      function getMuscleGroupColor(_x4) {
        return _getMuscleGroupColor.apply(this, arguments);
      }
      return getMuscleGroupColor;
    }()
    /**
     * 筋肉部位の回復時間を取得
     * @param {string} muscleGroupId - 筋肉部位ID
     * @returns {Promise<number>} 回復時間（時間）
     */
    )
  }, {
    key: "getMuscleGroupRecoveryHours",
    value: (function () {
      var _getMuscleGroupRecoveryHours = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6(muscleGroupId) {
        var muscleGroup;
        return _regenerator().w(function (_context6) {
          while (1) switch (_context6.n) {
            case 0:
              _context6.n = 1;
              return this.getMuscleGroupById(muscleGroupId);
            case 1:
              muscleGroup = _context6.v;
              return _context6.a(2, muscleGroup ? muscleGroup.recovery_hours : 72);
          }
        }, _callee6, this);
      }));
      function getMuscleGroupRecoveryHours(_x5) {
        return _getMuscleGroupRecoveryHours.apply(this, arguments);
      }
      return getMuscleGroupRecoveryHours;
    }()
    /**
     * 筋肉部位のサイズカテゴリを取得
     * @param {string} muscleGroupId - 筋肉部位ID
     * @returns {Promise<string>} サイズカテゴリ（large/small）
     */
    )
  }, {
    key: "getMuscleGroupSize",
    value: (function () {
      var _getMuscleGroupSize = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee7(muscleGroupId) {
        var muscleGroup;
        return _regenerator().w(function (_context7) {
          while (1) switch (_context7.n) {
            case 0:
              _context7.n = 1;
              return this.getMuscleGroupById(muscleGroupId);
            case 1:
              muscleGroup = _context7.v;
              return _context7.a(2, muscleGroup ? muscleGroup.muscle_size : 'large');
          }
        }, _callee7, this);
      }));
      function getMuscleGroupSize(_x6) {
        return _getMuscleGroupSize.apply(this, arguments);
      }
      return getMuscleGroupSize;
    }()
    /**
     * 筋肉部位のマッピング（旧システムとの互換性用）
     * @param {string} oldMuscleGroupId - 旧システムの筋肉部位ID
     * @returns {string} 新しい筋肉部位ID
     */
    )
  }, {
    key: "getMuscleGroupMapping",
    value: function getMuscleGroupMapping(oldMuscleGroupId) {
      var mapping = {
        chest: 'chest',
        back: 'back',
        shoulder: 'shoulders',
        arm: 'arms',
        leg: 'legs',
        core: 'abs'
      };
      return mapping[oldMuscleGroupId] || oldMuscleGroupId;
    }

    /**
     * 筋肉部位のカテゴリ詳細情報を取得
     * @param {string} muscleGroupId - 筋肉部位ID
     * @returns {Promise<Object|null>} カテゴリ詳細情報
     */
  }, {
    key: "getMuscleGroupCategoryInfo",
    value: (function () {
      var _getMuscleGroupCategoryInfo = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee8(muscleGroupId) {
        var muscleGroupMapping, mappedId, muscleGroup, categoryInfo, result;
        return _regenerator().w(function (_context8) {
          while (1) switch (_context8.n) {
            case 0:
              // 筋肉部位IDのマッピング（HTMLのdata-muscle属性とサービス内のIDを対応）
              muscleGroupMapping = {
                chest: 'chest',
                back: 'back',
                legs: 'legs',
                shoulders: 'shoulders',
                arms: 'arms',
                core: 'abs' // HTMLでは'core'だが、データベースでは'abs'
              };
              mappedId = muscleGroupMapping[muscleGroupId] || muscleGroupId;
              console.log('Getting category info for:', muscleGroupId, 'mapped to:', mappedId);

              // まずIDで検索
              _context8.n = 1;
              return this.getMuscleGroupById(mappedId);
            case 1:
              muscleGroup = _context8.v;
              if (muscleGroup) {
                _context8.n = 3;
                break;
              }
              console.log('Trying to find by name...');
              _context8.n = 2;
              return this.getMuscleGroupByName(muscleGroupId);
            case 2:
              muscleGroup = _context8.v;
            case 3:
              if (muscleGroup) {
                _context8.n = 4;
                break;
              }
              console.warn('Muscle group not found by ID or name:', muscleGroupId, 'mapped to:', mappedId);
              // フォールバック: 筋肉部位が見つからない場合でも、カテゴリ情報は返す
              console.log('Using fallback category info for:', muscleGroupId);
              return _context8.a(2, this.getFallbackCategoryInfo(muscleGroupId));
            case 4:
              console.log('Found muscle group:', muscleGroup);
              categoryInfo = {
                chest: {
                  name: '胸筋',
                  nameEn: 'Chest',
                  icon: 'fas fa-heart',
                  color: 'text-red-500',
                  description: '大胸筋、小胸筋、前鋸筋を鍛えるエクササイズ',
                  benefits: ['胸筋の厚みと幅を向上', '上半身の安定性向上', '姿勢の改善', 'プッシュ系動作の強化'],
                  exercises: ['プッシュアップ（腕立て伏せ）', 'ベンチプレス', 'ダンベルフライ', 'インクラインプレス', 'ディップス', 'ケーブルクロスオーバー', 'プッシュアップバリエーション', 'ダンベルプレス'],
                  tips: ['胸筋を意識して動作を行う', '肩甲骨を安定させる', '適切な可動域を保つ', '呼吸を意識する'],
                  commonMistakes: ['肩が前に出すぎる', '可動域が狭い', '反動を使いすぎる', '呼吸を止める']
                },
                back: {
                  name: '背筋',
                  nameEn: 'Back',
                  icon: 'fas fa-user',
                  color: 'text-green-500',
                  description: '広背筋、僧帽筋、菱形筋、脊柱起立筋を鍛えるエクササイズ',
                  benefits: ['背中の厚みと幅を向上', '姿勢の改善', '肩甲骨の安定性向上', '引く動作の強化'],
                  exercises: ['プルアップ（懸垂）', 'ラットプルダウン', 'ベントオーバーロウ', 'ワンハンドダンベルロウ', 'シーテッドロウ', 'フェイスプル', 'デッドリフト', 'リバースフライ'],
                  tips: ['肩甲骨を寄せる動作を意識', '胸を張って姿勢を保つ', '背筋を意識して動作', '適切な重量を選択'],
                  commonMistakes: ['肩が上がる', '腰が丸まる', '反動を使いすぎる', '可動域が狭い']
                },
                legs: {
                  name: '脚筋',
                  nameEn: 'Legs',
                  icon: 'fas fa-running',
                  color: 'text-purple-500',
                  description: '大腿四頭筋、ハムストリングス、臀筋、ふくらはぎを鍛えるエクササイズ',
                  benefits: ['下半身の筋力向上', 'バランス能力向上', '代謝の向上', '日常動作の改善'],
                  exercises: ['スクワット', 'ランジ', 'デッドリフト', 'レッグプレス', 'レッグカール', 'レッグエクステンション', 'カーフレイズ', 'ブルガリアンスクワット'],
                  tips: ['膝の向きに注意', '重心を安定させる', '深い可動域を意識', '呼吸を意識する'],
                  commonMistakes: ['膝が内側に入る', '腰が丸まる', '可動域が浅い', '反動を使いすぎる']
                },
                shoulders: {
                  name: '肩筋',
                  nameEn: 'Shoulders',
                  icon: 'fas fa-dumbbell',
                  color: 'text-blue-500',
                  description: '三角筋（前部・中部・後部）を鍛えるエクササイズ',
                  benefits: ['肩の幅と厚みを向上', '肩の安定性向上', '姿勢の改善', 'オーバーヘッド動作の強化'],
                  exercises: ['ショルダープレス', 'サイドレイズ', 'フロントレイズ', 'リアデルトフライ', 'アーノルドプレス', 'アップライトロウ', 'フェイスプル', 'バックフライ'],
                  tips: ['肩甲骨を安定させる', '適切な重量を選択', '可動域を意識', 'バランスよく鍛える'],
                  commonMistakes: ['重量が重すぎる', '肩が上がる', '可動域が狭い', '前部ばかり鍛える']
                },
                arms: {
                  name: '腕筋',
                  nameEn: 'Arms',
                  icon: 'fas fa-fist-raised',
                  color: 'text-orange-500',
                  description: '上腕二頭筋、上腕三頭筋、前腕筋を鍛えるエクササイズ',
                  benefits: ['腕の筋力向上', '握力の向上', '腕の太さと形の改善', 'プッシュ・プル動作の強化'],
                  exercises: ['ダンベルカール', 'ハンマーカール', 'トライセップディップス', 'トライセッププッシュダウン', 'オーバーヘッドエクステンション', 'クローズグリッププッシュアップ', 'リバースカール', 'プリーチャーカール'],
                  tips: ['適切な重量を選択', '可動域を意識', '反動を使わない', 'バランスよく鍛える'],
                  commonMistakes: ['反動を使いすぎる', '重量が重すぎる', '可動域が狭い', '片方ばかり鍛える']
                },
                abs: {
                  name: '腹',
                  nameEn: 'Core',
                  icon: 'fas fa-circle',
                  color: 'text-yellow-500',
                  description: '腹筋、背筋、横腹筋、深層筋を鍛えるエクササイズ',
                  benefits: ['体幹の安定性向上', '姿勢の改善', '腰痛の予防', 'パフォーマンス向上'],
                  exercises: ['プランク', 'クランチ', 'サイドプランク', 'ロシアンツイスト', 'マウンテンクライマー', 'デッドバグ', 'バードドッグ', 'レッグレイズ'],
                  tips: ['呼吸を意識する', '正しい姿勢を保つ', 'ゆっくりと動作', '継続的に行う'],
                  commonMistakes: ['呼吸を止める', '腰を反らしすぎる', '反動を使う', '継続しない']
                }
              };
              result = categoryInfo[mappedId] || null;
              console.log('Category info result:', result);
              return _context8.a(2, result);
          }
        }, _callee8, this);
      }));
      function getMuscleGroupCategoryInfo(_x7) {
        return _getMuscleGroupCategoryInfo.apply(this, arguments);
      }
      return getMuscleGroupCategoryInfo;
    }()
    /**
     * 筋肉部位のフィルターオプションを生成
     * @returns {Promise<Array>} フィルターオプション
     */
    )
  }, {
    key: "getMuscleGroupFilterOptions",
    value: (function () {
      var _getMuscleGroupFilterOptions = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee9() {
        var muscleGroups;
        return _regenerator().w(function (_context9) {
          while (1) switch (_context9.n) {
            case 0:
              _context9.n = 1;
              return this.getMuscleGroups();
            case 1:
              muscleGroups = _context9.v;
              return _context9.a(2, muscleGroups.map(function (group) {
                return {
                  value: group.id,
                  text: group.name_ja,
                  color: group.color_code
                };
              }));
          }
        }, _callee9, this);
      }));
      function getMuscleGroupFilterOptions() {
        return _getMuscleGroupFilterOptions.apply(this, arguments);
      }
      return getMuscleGroupFilterOptions;
    }()
    /**
     * フォールバック用のカテゴリ情報を取得
     * @param {string} muscleGroupId - 筋肉部位ID
     * @returns {Object|null} カテゴリ情報
     */
    )
  }, {
    key: "getFallbackCategoryInfo",
    value: function getFallbackCategoryInfo(muscleGroupId) {
      var fallbackInfo = {
        chest: {
          name: '胸筋',
          nameEn: 'Chest',
          icon: 'fas fa-heart',
          color: 'text-red-500',
          description: '大胸筋、小胸筋、前鋸筋を鍛えるエクササイズ',
          benefits: ['胸筋の厚みと幅を向上', '上半身の安定性向上', '姿勢の改善', 'プッシュ系動作の強化'],
          exercises: ['プッシュアップ', 'ベンチプレス', 'ダンベルフライ', 'インクラインプレス', 'ディップス'],
          tips: ['胸筋を意識して動作を行う', '肩甲骨を安定させる', '適切な可動域を保つ', '呼吸を意識する'],
          commonMistakes: ['肩が前に出すぎる', '可動域が狭い', '反動を使いすぎる', '呼吸を止める']
        },
        back: {
          name: '背筋',
          nameEn: 'Back',
          icon: 'fas fa-user',
          color: 'text-green-500',
          description: '広背筋、僧帽筋、菱形筋、脊柱起立筋を鍛えるエクササイズ',
          benefits: ['背中の厚みと幅を向上', '姿勢の改善', '肩甲骨の安定性向上', '引く動作の強化'],
          exercises: ['プルアップ', 'ラットプルダウン', 'ベントオーバーロウ', 'ワンハンドダンベルロウ', 'シーテッドロウ'],
          tips: ['肩甲骨を寄せる動作を意識', '胸を張って姿勢を保つ', '背筋を意識して動作', '適切な重量を選択'],
          commonMistakes: ['肩が上がる', '腰が丸まる', '反動を使いすぎる', '可動域が狭い']
        },
        legs: {
          name: '脚筋',
          nameEn: 'Legs',
          icon: 'fas fa-running',
          color: 'text-purple-500',
          description: '大腿四頭筋、ハムストリングス、臀筋、ふくらはぎを鍛えるエクササイズ',
          benefits: ['下半身の筋力向上', 'バランス能力向上', '代謝の向上', '日常動作の改善'],
          exercises: ['スクワット', 'ランジ', 'デッドリフト', 'レッグプレス', 'レッグカール'],
          tips: ['膝の向きに注意', '重心を安定させる', '深い可動域を意識', '呼吸を意識する'],
          commonMistakes: ['膝が内側に入る', '腰が丸まる', '可動域が浅い', '反動を使いすぎる']
        },
        shoulders: {
          name: '肩筋',
          nameEn: 'Shoulders',
          icon: 'fas fa-dumbbell',
          color: 'text-blue-500',
          description: '三角筋（前部・中部・後部）を鍛えるエクササイズ',
          benefits: ['肩の幅と厚みを向上', '肩の安定性向上', '姿勢の改善', 'オーバーヘッド動作の強化'],
          exercises: ['ショルダープレス', 'サイドレイズ', 'フロントレイズ', 'リアデルトフライ', 'アーノルドプレス'],
          tips: ['肩甲骨を安定させる', '適切な重量を選択', '可動域を意識', 'バランスよく鍛える'],
          commonMistakes: ['重量が重すぎる', '肩が上がる', '可動域が狭い', '前部ばかり鍛える']
        },
        arms: {
          name: '腕筋',
          nameEn: 'Arms',
          icon: 'fas fa-fist-raised',
          color: 'text-orange-500',
          description: '上腕二頭筋、上腕三頭筋、前腕筋を鍛えるエクササイズ',
          benefits: ['腕の筋力向上', '握力の向上', '腕の太さと形の改善', 'プッシュ・プル動作の強化'],
          exercises: ['ダンベルカール', 'ハンマーカール', 'トライセップディップス', 'トライセッププッシュダウン', 'オーバーヘッドエクステンション'],
          tips: ['適切な重量を選択', '可動域を意識', '反動を使わない', 'バランスよく鍛える'],
          commonMistakes: ['反動を使いすぎる', '重量が重すぎる', '可動域が狭い', '片方ばかり鍛える']
        },
        core: {
          name: '腹',
          nameEn: 'Core',
          icon: 'fas fa-circle',
          color: 'text-yellow-500',
          description: '腹筋、背筋、横腹筋、深層筋を鍛えるエクササイズ',
          benefits: ['体幹の安定性向上', '姿勢の改善', '腰痛の予防', 'パフォーマンス向上'],
          exercises: ['プランク', 'クランチ', 'サイドプランク', 'ロシアンツイスト', 'マウンテンクライマー'],
          tips: ['呼吸を意識する', '正しい姿勢を保つ', 'ゆっくりと動作', '継続的に行う'],
          commonMistakes: ['呼吸を止める', '腰を反らしすぎる', '反動を使う', '継続しない']
        }
      };
      return fallbackInfo[muscleGroupId] || null;
    }

    /**
     * キャッシュをクリア
     */
  }, {
    key: "clearCache",
    value: function clearCache() {
      this.cache.clear();
      this.muscleGroups = null;
    }

    /**
     * 筋肉部位を追加
     * @param {Object} muscleGroupData - 筋肉部位データ
     * @returns {Promise<Object>} 追加された筋肉部位
     */
  }, {
    key: "addMuscleGroup",
    value: (function () {
      var _addMuscleGroup = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee0(muscleGroupData) {
        var result, _t2;
        return _regenerator().w(function (_context0) {
          while (1) switch (_context0.p = _context0.n) {
            case 0:
              _context0.p = 0;
              if (_supabaseService.supabaseService.isAvailable()) {
                _context0.n = 1;
                break;
              }
              throw new Error('Supabase not available');
            case 1:
              _context0.n = 2;
              return _supabaseService.supabaseService.saveData('muscle_groups', muscleGroupData);
            case 2:
              result = _context0.v;
              this.clearCache(); // キャッシュをクリア
              return _context0.a(2, result);
            case 3:
              _context0.p = 3;
              _t2 = _context0.v;
              console.error('Error adding muscle group:', _t2);
              throw _t2;
            case 4:
              return _context0.a(2);
          }
        }, _callee0, this, [[0, 3]]);
      }));
      function addMuscleGroup(_x8) {
        return _addMuscleGroup.apply(this, arguments);
      }
      return addMuscleGroup;
    }()
    /**
     * 筋肉部位を更新
     * @param {string} id - 筋肉部位ID
     * @param {Object} muscleGroupData - 更新データ
     * @returns {Promise<Object>} 更新された筋肉部位
     */
    )
  }, {
    key: "updateMuscleGroup",
    value: (function () {
      var _updateMuscleGroup = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee1(id, muscleGroupData) {
        var result, _t3;
        return _regenerator().w(function (_context1) {
          while (1) switch (_context1.p = _context1.n) {
            case 0:
              _context1.p = 0;
              if (_supabaseService.supabaseService.isAvailable()) {
                _context1.n = 1;
                break;
              }
              throw new Error('Supabase not available');
            case 1:
              _context1.n = 2;
              return _supabaseService.supabaseService.saveData('muscle_groups', _objectSpread(_objectSpread({}, muscleGroupData), {}, {
                id: id
              }));
            case 2:
              result = _context1.v;
              this.clearCache(); // キャッシュをクリア
              return _context1.a(2, result);
            case 3:
              _context1.p = 3;
              _t3 = _context1.v;
              console.error('Error updating muscle group:', _t3);
              throw _t3;
            case 4:
              return _context1.a(2);
          }
        }, _callee1, this, [[0, 3]]);
      }));
      function updateMuscleGroup(_x9, _x0) {
        return _updateMuscleGroup.apply(this, arguments);
      }
      return updateMuscleGroup;
    }()
    /**
     * 筋肉部位を削除
     * @param {string} id - 筋肉部位ID
     * @returns {Promise<void>}
     */
    )
  }, {
    key: "deleteMuscleGroup",
    value: (function () {
      var _deleteMuscleGroup = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee10(id) {
        var _t4;
        return _regenerator().w(function (_context10) {
          while (1) switch (_context10.p = _context10.n) {
            case 0:
              _context10.p = 0;
              if (_supabaseService.supabaseService.isAvailable()) {
                _context10.n = 1;
                break;
              }
              throw new Error('Supabase not available');
            case 1:
              _context10.n = 2;
              return _supabaseService.supabaseService.saveData('muscle_groups', {
                id: id,
                deleted: true
              });
            case 2:
              this.clearCache(); // キャッシュをクリア
              _context10.n = 4;
              break;
            case 3:
              _context10.p = 3;
              _t4 = _context10.v;
              console.error('Error deleting muscle group:', _t4);
              throw _t4;
            case 4:
              return _context10.a(2);
          }
        }, _callee10, this, [[0, 3]]);
      }));
      function deleteMuscleGroup(_x1) {
        return _deleteMuscleGroup.apply(this, arguments);
      }
      return deleteMuscleGroup;
    }())
  }]);
}(); // シングルトンインスタンスをエクスポート
var muscleGroupService = exports.muscleGroupService = new MuscleGroupService();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,