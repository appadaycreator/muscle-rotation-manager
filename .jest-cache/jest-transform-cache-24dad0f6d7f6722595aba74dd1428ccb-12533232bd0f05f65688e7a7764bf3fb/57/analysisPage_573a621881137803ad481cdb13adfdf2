da4dad040b0de8fc443c68e82d597c1d
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _authManager = require("../modules/authManager.js");
var _workoutDataService = require("../services/workoutDataService.js");
var _progressiveOverloadService = require("../services/progressiveOverloadService.js");
var _helpers = require("../utils/helpers.js");
var _errorHandler = require("../utils/errorHandler.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } // analysisPage.js - 分析ページの機能
var AnalysisPage = /*#__PURE__*/function () {
  function AnalysisPage() {
    _classCallCheck(this, AnalysisPage);
    this.workoutData = [];
    this.charts = {};
    this.isLoading = false;
    this.progressiveOverloadData = null;
    this.selectedExercise = null;
    this.selectedMuscleGroup = null;
    this.analysisPeriod = 90; // デフォルト90日
  }

  /**
   * 分析ページを初期化
   */
  return _createClass(AnalysisPage, [{
    key: "initialize",
    value: (function () {
      var _initialize = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {
        var _this = this;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              console.log('Analysis page initialized');

              // 認証チェックをスキップして分析ページを表示
              _context2.n = 1;
              return (0, _helpers.safeAsync)(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {
                return _regenerator().w(function (_context) {
                  while (1) switch (_context.n) {
                    case 0:
                      // 分析ページのコンテンツを表示
                      _this.renderAnalysisPage();
                      _context.n = 1;
                      return _this.loadWorkoutData();
                    case 1:
                      _context.n = 2;
                      return _this.loadProgressiveOverloadData();
                    case 2:
                      _this.renderStatistics();
                      _this.renderProgressiveOverloadSection();
                      _this.renderCharts();
                      _this.generateAnalysisReport();
                      _this.setupEventListeners();
                    case 3:
                      return _context.a(2);
                  }
                }, _callee);
              })), '分析ページの初期化', function (error) {
                (0, _errorHandler.handleError)(error, {
                  context: '分析ページ初期化',
                  showNotification: true
                });
              });
            case 1:
              return _context2.a(2);
          }
        }, _callee2);
      }));
      function initialize() {
        return _initialize.apply(this, arguments);
      }
      return initialize;
    }()
    /**
     * ログインプロンプトを表示
     */
    )
  }, {
    key: "showLoginPrompt",
    value: function showLoginPrompt() {
      var mainContent = (0, _helpers.safeGetElement)('#main-content');
      if (!mainContent) {
        return;
      }
      mainContent.innerHTML = "\n            <div class=\"min-h-screen flex items-center justify-center bg-gray-50\">\n                <div class=\"max-w-md w-full bg-white rounded-lg shadow-md p-6 text-center\">\n                    <div class=\"mb-6\">\n                        <div class=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-blue-100 mb-4\">\n                            <svg class=\"h-6 w-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"></path>\n                            </svg>\n                        </div>\n                        <h2 class=\"text-2xl font-bold text-gray-900 mb-2\">\u30ED\u30B0\u30A4\u30F3\u304C\u5FC5\u8981\u3067\u3059</h2>\n                        <p class=\"text-gray-600 mb-6\">\u5206\u6790\u6A5F\u80FD\u3092\u4F7F\u7528\u3059\u308B\u306B\u306F\u30ED\u30B0\u30A4\u30F3\u3057\u3066\u304F\u3060\u3055\u3044\u3002</p>\n                    </div>\n                    <div class=\"space-y-3\">\n                        <button id=\"login-btn\" class=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors\">\n                            \u30ED\u30B0\u30A4\u30F3\n                        </button>\n                        <button onclick=\"window.location.href='/index.html'\" class=\"w-full bg-gray-200 text-gray-800 py-2 px-4 rounded-md hover:bg-gray-300 transition-colors\">\n                            \u30DB\u30FC\u30E0\u306B\u623B\u308B\n                        </button>\n                    </div>\n                </div>\n            </div>\n        ";

      // ログインボタンのイベントリスナーを設定
      var loginBtn = document.getElementById('login-btn');
      if (loginBtn) {
        loginBtn.addEventListener('click', function () {
          _authManager.authManager.showAuthModal('login');
        });
      }
    }

    /**
     * 分析ページのコンテンツを表示
     */
  }, {
    key: "renderAnalysisPage",
    value: function renderAnalysisPage() {
      var mainContent = (0, _helpers.safeGetElement)('#main-content');
      if (!mainContent) {
        return;
      }
      mainContent.innerHTML = "\n            <div class=\"mb-8\">\n                <h1 class=\"text-3xl font-bold text-gray-900\">\u5206\u6790</h1>\n                <p class=\"mt-2 text-gray-600\">\u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u30C7\u30FC\u30BF\u3092\u5206\u6790\u3057\u3001\u9032\u6357\u3092\u53EF\u8996\u5316\u3057\u307E\u3057\u3087\u3046</p>\n            </div>\n\n            <!-- \u7DCF\u5408\u7D71\u8A08 -->\n            <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n                <div class=\"bg-white overflow-hidden shadow rounded-lg\">\n                    <div class=\"p-5\">\n                        <div class=\"flex items-center\">\n                            <div class=\"flex-shrink-0\">\n                                <i class=\"fas fa-dumbbell text-2xl text-blue-600\"></i>\n                            </div>\n                            <div class=\"ml-5 w-0 flex-1\">\n                                <dl>\n                                    <dt class=\"text-sm font-medium text-gray-500 truncate\">\u7DCF\u30EF\u30FC\u30AF\u30A2\u30A6\u30C8\u6570</dt>\n                                    <dd class=\"text-lg font-medium text-gray-900\" id=\"total-workouts\">0</dd>\n                                </dl>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"bg-white overflow-hidden shadow rounded-lg\">\n                    <div class=\"p-5\">\n                        <div class=\"flex items-center\">\n                            <div class=\"flex-shrink-0\">\n                                <i class=\"fas fa-clock text-2xl text-green-600\"></i>\n                            </div>\n                            <div class=\"ml-5 w-0 flex-1\">\n                                <dl>\n                                    <dt class=\"text-sm font-medium text-gray-500 truncate\">\u7DCF\u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u6642\u9593</dt>\n                                    <dd class=\"text-lg font-medium text-gray-900\" id=\"total-hours\">0\u6642\u9593</dd>\n                                </dl>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"bg-white overflow-hidden shadow rounded-lg\">\n                    <div class=\"p-5\">\n                        <div class=\"flex items-center\">\n                            <div class=\"flex-shrink-0\">\n                                <i class=\"fas fa-chart-line text-2xl text-purple-600\"></i>\n                            </div>\n                            <div class=\"ml-5 w-0 flex-1\">\n                                <dl>\n                                    <dt class=\"text-sm font-medium text-gray-500 truncate\">\u5E73\u5747\u30BB\u30C3\u30B7\u30E7\u30F3\u6642\u9593</dt>\n                                    <dd class=\"text-lg font-medium text-gray-900\" id=\"avg-session-time\">0\u6642\u9593</dd>\n                                </dl>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- \u7B4B\u8089\u90E8\u4F4D\u5225\u7D71\u8A08 -->\n            <div class=\"bg-white shadow rounded-lg mb-8\">\n                <div class=\"px-4 py-5 sm:p-6\">\n                    <h3 class=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\u7B4B\u8089\u90E8\u4F4D\u5225\u7D71\u8A08</h3>\n                    <div id=\"muscle-group-stats\">\n                        <div class=\"text-center text-gray-500 py-4\">\n                            <i class=\"fas fa-spinner fa-spin text-xl mb-2\"></i>\n                            <p>\u7D71\u8A08\u30C7\u30FC\u30BF\u3092\u8AAD\u307F\u8FBC\u307F\u4E2D...</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- \u30D7\u30ED\u30B0\u30EC\u30C3\u30B7\u30D6\u30FB\u30AA\u30FC\u30D0\u30FC\u30ED\u30FC\u30C9\u5206\u6790 -->\n            <div class=\"bg-white shadow rounded-lg mb-8\">\n                <div class=\"px-4 py-5 sm:p-6\">\n                    <div class=\"flex justify-between items-center mb-4\">\n                        <h3 class=\"text-lg leading-6 font-medium text-gray-900\">\u30D7\u30ED\u30B0\u30EC\u30C3\u30B7\u30D6\u30FB\u30AA\u30FC\u30D0\u30FC\u30ED\u30FC\u30C9\u5206\u6790</h3>\n                        <div class=\"flex items-center space-x-2\">\n                            <label class=\"text-sm text-gray-600\">\u671F\u9593:</label>\n                            <select id=\"analysis-period\" class=\"border border-gray-300 rounded-md px-2 py-1 text-sm\">\n                                <option value=\"30\">30\u65E5</option>\n                                <option value=\"60\">60\u65E5</option>\n                                <option value=\"90\" selected>90\u65E5</option>\n                                <option value=\"180\">180\u65E5</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div id=\"progressive-overload-content\">\n                        <div class=\"text-center text-gray-500 py-4\">\n                            <i class=\"fas fa-spinner fa-spin text-xl mb-2\"></i>\n                            <p>\u30D7\u30ED\u30B0\u30EC\u30C3\u30B7\u30D6\u30FB\u30AA\u30FC\u30D0\u30FC\u30ED\u30FC\u30C9\u5206\u6790\u3092\u8AAD\u307F\u8FBC\u307F\u4E2D...</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- \u9032\u6B69\u7D71\u8A08 -->\n            <div class=\"bg-white shadow rounded-lg mb-8\">\n                <div class=\"px-4 py-5 sm:p-6\">\n                    <h3 class=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\u9032\u6B69\u7D71\u8A08</h3>\n                    <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                        <div class=\"text-center\">\n                            <div class=\"text-2xl font-bold text-green-600\" id=\"strength-progress\">-</div>\n                            <div class=\"text-sm text-gray-500\">\u7B4B\u529B\u5411\u4E0A\u7387</div>\n                        </div>\n                        <div class=\"text-center\">\n                            <div class=\"text-2xl font-bold text-blue-600\" id=\"endurance-progress\">-</div>\n                            <div class=\"text-sm text-gray-500\">\u6301\u4E45\u529B\u5411\u4E0A\u7387</div>\n                        </div>\n                        <div class=\"text-center\">\n                            <div class=\"text-2xl font-bold text-purple-600\" id=\"overall-score\">-</div>\n                            <div class=\"text-sm text-gray-500\">\u7DCF\u5408\u30B9\u30B3\u30A2</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- \u9032\u6357\u30B0\u30E9\u30D5 -->\n            <div class=\"bg-white shadow rounded-lg mb-8\">\n                <div class=\"px-4 py-5 sm:p-6\">\n                    <h3 class=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\u9032\u6357\u30B0\u30E9\u30D5</h3>\n                    <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                        <!-- \u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u983B\u5EA6\u30B0\u30E9\u30D5 -->\n                        <div>\n                            <h4 class=\"text-md font-medium text-gray-700 mb-3\">\u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u983B\u5EA6</h4>\n                            <div class=\"h-64\">\n                                <canvas id=\"frequency-chart\"></canvas>\n                            </div>\n                        </div>\n                        \n                        <!-- \u90E8\u4F4D\u5225\u30B0\u30E9\u30D5 -->\n                        <div>\n                            <h4 class=\"text-md font-medium text-gray-700 mb-3\">\u90E8\u4F4D\u5225\u5206\u5E03</h4>\n                            <div class=\"h-64\">\n                                <canvas id=\"muscle-group-chart\"></canvas>\n                            </div>\n                        </div>\n                        \n                        <!-- \u91CD\u91CF\u9032\u6B69\u30B0\u30E9\u30D5 -->\n                        <div>\n                            <h4 class=\"text-md font-medium text-gray-700 mb-3\">\u91CD\u91CF\u9032\u6B69</h4>\n                            <div class=\"h-64\">\n                                <canvas id=\"weight-progress-chart\"></canvas>\n                            </div>\n                        </div>\n                        \n                        <!-- \u30BB\u30C3\u30C8\u6570\u9032\u6B69\u30B0\u30E9\u30D5 -->\n                        <div>\n                            <h4 class=\"text-md font-medium text-gray-700 mb-3\">\u30BB\u30C3\u30C8\u6570\u9032\u6B69</h4>\n                            <div class=\"h-64\">\n                                <canvas id=\"sets-progress-chart\"></canvas>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- \u8A73\u7D30\u7D71\u8A08 -->\n            <div class=\"bg-white shadow rounded-lg\">\n                <div class=\"px-4 py-5 sm:p-6\">\n                    <h3 class=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\u8A73\u7D30\u7D71\u8A08</h3>\n                    <div id=\"detailed-stats\">\n                        <div class=\"text-center text-gray-500 py-4\">\n                            <i class=\"fas fa-spinner fa-spin text-xl mb-2\"></i>\n                            <p>\u8A73\u7D30\u30C7\u30FC\u30BF\u3092\u8AAD\u307F\u8FBC\u307F\u4E2D...</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- \u5206\u6790\u30EC\u30DD\u30FC\u30C8 -->\n            <div class=\"bg-white shadow rounded-lg mt-8\">\n                <div class=\"px-4 py-5 sm:p-6\">\n                    <h3 class=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\u5206\u6790\u30EC\u30DD\u30FC\u30C8</h3>\n                    <div id=\"analysis-report\">\n                        <div class=\"text-center text-gray-500 py-4\">\n                            <i class=\"fas fa-spinner fa-spin text-xl mb-2\"></i>\n                            <p>\u30EC\u30DD\u30FC\u30C8\u3092\u751F\u6210\u4E2D...</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ";
    }

    /**
     * ワークアウトデータを読み込み
     */
  }, {
    key: "loadWorkoutData",
    value: (function () {
      var _loadWorkoutData = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {
        var _iterator, _step, workout, _t, _t2;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.p = _context3.n) {
            case 0:
              _context3.p = 0;
              this.isLoading = true;

              // ワークアウトデータサービスから読み込み
              _context3.n = 1;
              return _workoutDataService.workoutDataService.loadWorkouts({
                limit: 1000
              });
            case 1:
              this.workoutData = _context3.v;
              if (!(this.workoutData.length === 0)) {
                _context3.n = 8;
                break;
              }
              this.workoutData = this.generateSampleWorkoutData();

              // サンプルデータを保存
              _iterator = _createForOfIteratorHelper(this.workoutData);
              _context3.p = 2;
              _iterator.s();
            case 3:
              if ((_step = _iterator.n()).done) {
                _context3.n = 5;
                break;
              }
              workout = _step.value;
              _context3.n = 4;
              return _workoutDataService.workoutDataService.saveWorkout(workout);
            case 4:
              _context3.n = 3;
              break;
            case 5:
              _context3.n = 7;
              break;
            case 6:
              _context3.p = 6;
              _t = _context3.v;
              _iterator.e(_t);
            case 7:
              _context3.p = 7;
              _iterator.f();
              return _context3.f(7);
            case 8:
              console.log("Loaded ".concat(this.workoutData.length, " workouts for analysis"));
              _context3.n = 10;
              break;
            case 9:
              _context3.p = 9;
              _t2 = _context3.v;
              console.error('Error loading workout data:', _t2);
              this.workoutData = this.generateSampleWorkoutData();
              (0, _helpers.showNotification)('ワークアウトデータの読み込みに失敗しました', 'error');
            case 10:
              _context3.p = 10;
              this.isLoading = false;
              return _context3.f(10);
            case 11:
              return _context3.a(2);
          }
        }, _callee3, this, [[2, 6, 7, 8], [0, 9, 10, 11]]);
      }));
      function loadWorkoutData() {
        return _loadWorkoutData.apply(this, arguments);
      }
      return loadWorkoutData;
    }()
    /**
     * プログレッシブ・オーバーロードデータを読み込み
     */
    )
  }, {
    key: "loadProgressiveOverloadData",
    value: (function () {
      var _loadProgressiveOverloadData = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {
        var _t3;
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.p = _context4.n) {
            case 0:
              _context4.p = 0;
              console.log('Loading progressive overload data...');
              _context4.n = 1;
              return _progressiveOverloadService.progressiveOverloadService.getOverallProgress(this.analysisPeriod);
            case 1:
              this.progressiveOverloadData = _context4.v;
              console.log('Progressive overload data loaded:', this.progressiveOverloadData);
              _context4.n = 3;
              break;
            case 2:
              _context4.p = 2;
              _t3 = _context4.v;
              console.error('Error loading progressive overload data:', _t3);
              (0, _helpers.showNotification)('プログレッシブ・オーバーロードデータの読み込みに失敗しました', 'error');
            case 3:
              return _context4.a(2);
          }
        }, _callee4, this, [[0, 2]]);
      }));
      function loadProgressiveOverloadData() {
        return _loadProgressiveOverloadData.apply(this, arguments);
      }
      return loadProgressiveOverloadData;
    }()
    /**
     * サンプルワークアウトデータを生成
     * @returns {Array} サンプルワークアウトデータ配列
     */
    )
  }, {
    key: "generateSampleWorkoutData",
    value: function generateSampleWorkoutData() {
      var today = new Date();
      var sampleData = [];

      // 過去90日分のサンプルデータを生成
      for (var i = 0; i < 90; i++) {
        var date = new Date(today);
        date.setDate(date.getDate() - i);

        // 2-3日に1回の頻度でワークアウトを生成
        if (i % 2 === 0 || i % 3 === 0) {
          var muscleGroups = ['胸', '背中', '肩', '腕', '脚', '腹筋'];
          var randomMuscles = muscleGroups.sort(function () {
            return 0.5 - Math.random();
          }).slice(0, 2);

          // 重量の進歩をシミュレート
          var baseWeight = 80;
          var progressFactor = Math.max(0, (90 - i) / 90); // 時間とともに重量が増加
          var weight = Math.floor(baseWeight + progressFactor * 20);
          sampleData.push({
            id: "sample-".concat(i),
            date: date.toISOString().split('T')[0],
            muscle_groups: randomMuscles,
            exercises: [{
              name: 'ベンチプレス',
              sets: 3,
              reps: 10,
              weight: weight
            }, {
              name: 'プッシュアップ',
              sets: 3,
              reps: 15,
              weight: 0
            }],
            duration: 45 + Math.floor(Math.random() * 30),
            // 45-75分
            notes: 'サンプルワークアウト'
          });
        }
      }
      return sampleData;
    }

    /**
     * 統計情報をレンダリング
     */
  }, {
    key: "renderStatistics",
    value: function renderStatistics() {
      this.renderOverallStats();
      this.renderMuscleGroupStats();
      this.renderProgressStats();
    }

    /**
     * 総合統計をレンダリング
     */
  }, {
    key: "renderOverallStats",
    value: function renderOverallStats() {
      var totalWorkouts = this.workoutData.length;
      var totalHours = this.workoutData.reduce(function (sum, workout) {
        return sum + (workout.duration || 0);
      }, 0) / 3600;
      var avgSessionTime = totalWorkouts > 0 ? totalHours / totalWorkouts : 0;

      // 要素の存在確認を追加
      var totalWorkoutsEl = (0, _helpers.safeGetElement)('#total-workouts');
      var totalHoursEl = (0, _helpers.safeGetElement)('#total-hours');
      var avgSessionTimeEl = (0, _helpers.safeGetElement)('#avg-session-time');
      if (totalWorkoutsEl) {
        totalWorkoutsEl.textContent = totalWorkouts;
      }
      if (totalHoursEl) {
        totalHoursEl.textContent = "".concat(totalHours.toFixed(1), "\u6642\u9593");
      }
      if (avgSessionTimeEl) {
        avgSessionTimeEl.textContent = "".concat(avgSessionTime.toFixed(1), "\u6642\u9593");
      }
    }

    /**
     * 部位別統計をレンダリング
     */
  }, {
    key: "renderMuscleGroupStats",
    value: function renderMuscleGroupStats() {
      var _this2 = this;
      var muscleGroupCounts = {};
      this.workoutData.forEach(function (workout) {
        var muscleGroups = workout.muscle_groups || workout.muscleGroups || [];
        muscleGroups.forEach(function (muscle) {
          muscleGroupCounts[muscle] = (muscleGroupCounts[muscle] || 0) + 1;
        });
      });
      var container = (0, _helpers.safeGetElement)('#muscle-group-stats');
      if (!container) {
        return;
      }
      container.innerHTML = Object.entries(muscleGroupCounts).sort(function (_ref2, _ref3) {
        var _ref4 = _slicedToArray(_ref2, 2),
          a = _ref4[1];
        var _ref5 = _slicedToArray(_ref3, 2),
          b = _ref5[1];
        return b - a;
      }).slice(0, 5).map(function (_ref6) {
        var _ref7 = _slicedToArray(_ref6, 2),
          muscle = _ref7[0],
          count = _ref7[1];
        return "\n                <div class=\"flex justify-between\">\n                    <span class=\"text-gray-600\">".concat(_this2.getMuscleGroupName(muscle), "</span>\n                    <span class=\"font-bold text-blue-600\">").concat(count, "\u56DE</span>\n                </div>\n            ");
      }).join('');
    }

    /**
     * 筋肉部位名を取得
     */
  }, {
    key: "getMuscleGroupName",
    value: function getMuscleGroupName(muscleId) {
      // 筋肉部位名のマッピング
      var muscleGroupNames = {
        chest: '胸',
        back: '背中',
        shoulders: '肩',
        arms: '腕',
        legs: '脚',
        core: '腹筋',
        胸: '胸',
        背中: '背中',
        肩: '肩',
        腕: '腕',
        脚: '脚',
        腹筋: '腹筋'
      };
      return muscleGroupNames[muscleId] || muscleId;
    }

    /**
     * 進歩統計をレンダリング
     */
  }, {
    key: "renderProgressStats",
    value: function renderProgressStats() {
      // 簡易的な進歩率計算
      var recentWorkouts = this.workoutData.slice(-10);
      var olderWorkouts = this.workoutData.slice(-20, -10);
      var recentAvgWeight = this.calculateAverageWeight(recentWorkouts);
      var olderAvgWeight = this.calculateAverageWeight(olderWorkouts);
      var strengthProgress = olderAvgWeight > 0 ? ((recentAvgWeight - olderAvgWeight) / olderAvgWeight * 100).toFixed(1) : 0;

      // 要素の存在確認を追加
      var strengthProgressEl = (0, _helpers.safeGetElement)('#strength-progress');
      var enduranceProgressEl = (0, _helpers.safeGetElement)('#endurance-progress');
      var overallScoreEl = (0, _helpers.safeGetElement)('#overall-score');
      if (strengthProgressEl) {
        strengthProgressEl.textContent = "".concat(strengthProgress, "%");
      }
      if (enduranceProgressEl) {
        enduranceProgressEl.textContent = '計算中...';
      }
      if (overallScoreEl) {
        overallScoreEl.textContent = this.calculateOverallScore();
      }
    }

    /**
     * 平均重量を計算
     */
  }, {
    key: "calculateAverageWeight",
    value: function calculateAverageWeight(workouts) {
      if (workouts.length === 0) {
        return 0;
      }
      var totalWeight = 0;
      var count = 0;
      workouts.forEach(function (workout) {
        if (workout.exercises || workout.training_logs) {
          var exercises = workout.exercises || workout.training_logs || [];
          exercises.forEach(function (exercise) {
            if (exercise.weights && Array.isArray(exercise.weights)) {
              exercise.weights.forEach(function (weight) {
                if (weight > 0) {
                  totalWeight += weight;
                  count++;
                }
              });
            }
          });
        }
      });
      return count > 0 ? totalWeight / count : 0;
    }

    /**
     * 総合スコアを計算
     */
  }, {
    key: "calculateOverallScore",
    value: function calculateOverallScore() {
      var totalWorkouts = this.workoutData.length;
      var consistency = Math.min(totalWorkouts / 30, 1) * 100; // 30日で正規化
      var frequency = Math.min(totalWorkouts / 10, 1) * 100; // 10回で正規化

      return Math.round((consistency + frequency) / 2);
    }

    /**
     * チャートをレンダリング
     */
  }, {
    key: "renderCharts",
    value: (function () {
      var _renderCharts = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5() {
        var _t4;
        return _regenerator().w(function (_context5) {
          while (1) switch (_context5.p = _context5.n) {
            case 0:
              _context5.p = 0;
              if (!(typeof Chart === 'undefined')) {
                _context5.n = 1;
                break;
              }
              console.error('Chart.js is not loaded');
              (0, _helpers.showNotification)('グラフライブラリの読み込みに失敗しました', 'error');
              return _context5.a(2);
            case 1:
              _context5.n = 2;
              return this.renderFrequencyChart();
            case 2:
              _context5.n = 3;
              return this.renderMuscleGroupChart();
            case 3:
              _context5.n = 4;
              return this.renderWeightProgressChart();
            case 4:
              _context5.n = 5;
              return this.renderSetsProgressChart();
            case 5:
              console.log('All charts rendered successfully');
              _context5.n = 7;
              break;
            case 6:
              _context5.p = 6;
              _t4 = _context5.v;
              console.error('Error rendering charts:', _t4);
              (0, _errorHandler.handleError)(_t4, {
                context: 'チャート描画',
                showNotification: true
              });
            case 7:
              return _context5.a(2);
          }
        }, _callee5, this, [[0, 6]]);
      }));
      function renderCharts() {
        return _renderCharts.apply(this, arguments);
      }
      return renderCharts;
    }()
    /**
     * トレーニング頻度チャートをレンダリング
     */
    )
  }, {
    key: "renderFrequencyChart",
    value: (function () {
      var _renderFrequencyChart = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6() {
        var canvas, frequencyData, _t5;
        return _regenerator().w(function (_context6) {
          while (1) switch (_context6.p = _context6.n) {
            case 0:
              _context6.p = 0;
              canvas = (0, _helpers.safeGetElement)('#frequency-chart');
              if (canvas) {
                _context6.n = 1;
                break;
              }
              console.warn('Frequency chart canvas not found');
              return _context6.a(2);
            case 1:
              frequencyData = this.calculateFrequencyData();
              this.charts.frequency = new Chart(canvas, {
                type: 'line',
                data: {
                  labels: frequencyData.labels,
                  datasets: [{
                    label: 'トレーニング回数',
                    data: frequencyData.data,
                    borderColor: '#3b82f6',
                    backgroundColor: 'rgba(59, 130, 246, 0.1)',
                    tension: 0.4
                  }]
                },
                options: {
                  responsive: true,
                  maintainAspectRatio: false,
                  plugins: {
                    legend: {
                      display: false
                    }
                  },
                  scales: {
                    y: {
                      beginAtZero: true,
                      ticks: {
                        stepSize: 1
                      }
                    }
                  }
                }
              });
              console.log('Frequency chart rendered successfully');
              _context6.n = 3;
              break;
            case 2:
              _context6.p = 2;
              _t5 = _context6.v;
              console.error('Error rendering frequency chart:', _t5);
            case 3:
              return _context6.a(2);
          }
        }, _callee6, this, [[0, 2]]);
      }));
      function renderFrequencyChart() {
        return _renderFrequencyChart.apply(this, arguments);
      }
      return renderFrequencyChart;
    }()
    /**
     * 部位別チャートをレンダリング
     */
    )
  }, {
    key: "renderMuscleGroupChart",
    value: (function () {
      var _renderMuscleGroupChart = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee7() {
        var canvas, muscleGroupData, _t6;
        return _regenerator().w(function (_context7) {
          while (1) switch (_context7.p = _context7.n) {
            case 0:
              _context7.p = 0;
              canvas = (0, _helpers.safeGetElement)('#muscle-group-chart');
              if (canvas) {
                _context7.n = 1;
                break;
              }
              console.warn('Muscle group chart canvas not found');
              return _context7.a(2);
            case 1:
              muscleGroupData = this.calculateMuscleGroupData();
              this.charts.muscleGroup = new Chart(canvas, {
                type: 'doughnut',
                data: {
                  labels: muscleGroupData.labels,
                  datasets: [{
                    data: muscleGroupData.data,
                    backgroundColor: ['#ef4444', '#3b82f6', '#10b981', '#f59e0b', '#8b5cf6', '#ec4899']
                  }]
                },
                options: {
                  responsive: true,
                  maintainAspectRatio: false,
                  plugins: {
                    legend: {
                      position: 'bottom'
                    }
                  }
                }
              });
              console.log('Muscle group chart rendered successfully');
              _context7.n = 3;
              break;
            case 2:
              _context7.p = 2;
              _t6 = _context7.v;
              console.error('Error rendering muscle group chart:', _t6);
            case 3:
              return _context7.a(2);
          }
        }, _callee7, this, [[0, 2]]);
      }));
      function renderMuscleGroupChart() {
        return _renderMuscleGroupChart.apply(this, arguments);
      }
      return renderMuscleGroupChart;
    }()
    /**
     * 重量推移チャートをレンダリング
     */
    )
  }, {
    key: "renderWeightProgressChart",
    value: (function () {
      var _renderWeightProgressChart = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee8() {
        var canvas, weightData, _t7;
        return _regenerator().w(function (_context8) {
          while (1) switch (_context8.p = _context8.n) {
            case 0:
              _context8.p = 0;
              canvas = (0, _helpers.safeGetElement)('#weight-progress-chart');
              if (canvas) {
                _context8.n = 1;
                break;
              }
              console.warn('Weight progress chart canvas not found');
              return _context8.a(2);
            case 1:
              weightData = this.calculateWeightProgressData();
              this.charts.weightProgress = new Chart(canvas, {
                type: 'line',
                data: {
                  labels: weightData.labels,
                  datasets: [{
                    label: '平均重量 (kg)',
                    data: weightData.data,
                    borderColor: '#f59e0b',
                    backgroundColor: 'rgba(245, 158, 11, 0.1)',
                    tension: 0.4
                  }]
                },
                options: {
                  responsive: true,
                  maintainAspectRatio: false,
                  plugins: {
                    legend: {
                      display: false
                    }
                  },
                  scales: {
                    y: {
                      beginAtZero: true
                    }
                  }
                }
              });
              console.log('Weight progress chart rendered successfully');
              _context8.n = 3;
              break;
            case 2:
              _context8.p = 2;
              _t7 = _context8.v;
              console.error('Error rendering weight progress chart:', _t7);
            case 3:
              return _context8.a(2);
          }
        }, _callee8, this, [[0, 2]]);
      }));
      function renderWeightProgressChart() {
        return _renderWeightProgressChart.apply(this, arguments);
      }
      return renderWeightProgressChart;
    }()
    /**
     * セット数推移チャートをレンダリング
     */
    )
  }, {
    key: "renderSetsProgressChart",
    value: (function () {
      var _renderSetsProgressChart = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee9() {
        var canvas, setsData, _t8;
        return _regenerator().w(function (_context9) {
          while (1) switch (_context9.p = _context9.n) {
            case 0:
              _context9.p = 0;
              canvas = (0, _helpers.safeGetElement)('#sets-progress-chart');
              if (canvas) {
                _context9.n = 1;
                break;
              }
              console.warn('Sets progress chart canvas not found');
              return _context9.a(2);
            case 1:
              setsData = this.calculateSetsProgressData();
              this.charts.setsProgress = new Chart(canvas, {
                type: 'bar',
                data: {
                  labels: setsData.labels,
                  datasets: [{
                    label: 'セット数',
                    data: setsData.data,
                    backgroundColor: '#8b5cf6',
                    borderColor: '#7c3aed',
                    borderWidth: 1
                  }]
                },
                options: {
                  responsive: true,
                  maintainAspectRatio: false,
                  plugins: {
                    legend: {
                      display: false
                    }
                  },
                  scales: {
                    y: {
                      beginAtZero: true,
                      ticks: {
                        stepSize: 1
                      }
                    }
                  }
                }
              });
              console.log('Sets progress chart rendered successfully');
              _context9.n = 3;
              break;
            case 2:
              _context9.p = 2;
              _t8 = _context9.v;
              console.error('Error rendering sets progress chart:', _t8);
            case 3:
              return _context9.a(2);
          }
        }, _callee9, this, [[0, 2]]);
      }));
      function renderSetsProgressChart() {
        return _renderSetsProgressChart.apply(this, arguments);
      }
      return renderSetsProgressChart;
    }()
    /**
     * 頻度データを計算
     */
    )
  }, {
    key: "calculateFrequencyData",
    value: function calculateFrequencyData() {
      var last30Days = [];
      var today = new Date();
      for (var i = 29; i >= 0; i--) {
        var date = new Date(today);
        date.setDate(date.getDate() - i);
        last30Days.push(date.toISOString().split('T')[0]);
      }
      var frequencyMap = {};
      last30Days.forEach(function (date) {
        frequencyMap[date] = 0;
      });
      this.workoutData.forEach(function (workout) {
        var workoutDate = new Date(workout.date || workout.startTime).toISOString().split('T')[0];
        if (Object.prototype.hasOwnProperty.call(frequencyMap, workoutDate)) {
          frequencyMap[workoutDate]++;
        }
      });
      return {
        labels: last30Days.map(function (date) {
          return new Date(date).toLocaleDateString('ja-JP', {
            month: 'short',
            day: 'numeric'
          });
        }),
        data: Object.values(frequencyMap)
      };
    }

    /**
     * 部位別データを計算
     */
  }, {
    key: "calculateMuscleGroupData",
    value: function calculateMuscleGroupData() {
      var _this3 = this;
      var muscleGroupCounts = {};
      this.workoutData.forEach(function (workout) {
        var muscleGroups = workout.muscle_groups || workout.muscleGroups || [];
        muscleGroups.forEach(function (muscle) {
          muscleGroupCounts[muscle] = (muscleGroupCounts[muscle] || 0) + 1;
        });
      });
      var sorted = Object.entries(muscleGroupCounts).sort(function (_ref8, _ref9) {
        var _ref0 = _slicedToArray(_ref8, 2),
          a = _ref0[1];
        var _ref1 = _slicedToArray(_ref9, 2),
          b = _ref1[1];
        return b - a;
      }).slice(0, 6);
      return {
        labels: sorted.map(function (_ref10) {
          var _ref11 = _slicedToArray(_ref10, 1),
            muscle = _ref11[0];
          return _this3.getMuscleGroupName(muscle);
        }),
        data: sorted.map(function (_ref12) {
          var _ref13 = _slicedToArray(_ref12, 2),
            count = _ref13[1];
          return count;
        })
      };
    }

    /**
     * 重量進歩データを計算
     */
  }, {
    key: "calculateWeightProgressData",
    value: function calculateWeightProgressData() {
      var _this4 = this;
      // 簡易的な重量進歩データ
      var last10Workouts = this.workoutData.slice(-10);
      var labels = last10Workouts.map(function (_, index) {
        return "\u30BB\u30C3\u30B7\u30E7\u30F3".concat(index + 1);
      });
      var data = last10Workouts.map(function (workout) {
        return _this4.calculateAverageWeight([workout]);
      });
      return {
        labels: labels,
        data: data
      };
    }

    /**
     * セット数進歩データを計算
     */
  }, {
    key: "calculateSetsProgressData",
    value: function calculateSetsProgressData() {
      var last10Workouts = this.workoutData.slice(-10);
      var labels = last10Workouts.map(function (_, index) {
        return "\u30BB\u30C3\u30B7\u30E7\u30F3".concat(index + 1);
      });
      var data = last10Workouts.map(function (workout) {
        if (workout.exercises || workout.training_logs) {
          var exercises = workout.exercises || workout.training_logs || [];
          return exercises.reduce(function (sum, exercise) {
            return sum + (exercise.sets || 0);
          }, 0);
        }
        return 0;
      });
      return {
        labels: labels,
        data: data
      };
    }

    /**
     * 分析レポートを生成
     */
  }, {
    key: "generateAnalysisReport",
    value: function generateAnalysisReport() {
      var container = (0, _helpers.safeGetElement)('#analysis-report');
      if (!container) {
        return;
      }
      var report = this.generateReport();
      container.innerHTML = report;
    }

    /**
     * レポートを生成
     */
  }, {
    key: "generateReport",
    value: function generateReport() {
      var totalWorkouts = this.workoutData.length;
      var totalHours = this.workoutData.reduce(function (sum, workout) {
        return sum + (workout.duration || 0);
      }, 0) / 3600;
      var muscleGroupCounts = {};
      this.workoutData.forEach(function (workout) {
        var muscleGroups = workout.muscle_groups || workout.muscleGroups || [];
        muscleGroups.forEach(function (muscle) {
          muscleGroupCounts[muscle] = (muscleGroupCounts[muscle] || 0) + 1;
        });
      });
      var mostTrainedMuscle = Object.entries(muscleGroupCounts).sort(function (_ref14, _ref15) {
        var _ref16 = _slicedToArray(_ref14, 2),
          a = _ref16[1];
        var _ref17 = _slicedToArray(_ref15, 2),
          b = _ref17[1];
        return b - a;
      })[0];
      return "\n            <div class=\"space-y-4\">\n                <div class=\"p-4 bg-blue-50 rounded-lg\">\n                    <h4 class=\"font-semibold text-blue-800 mb-2\">\u7DCF\u5408\u8A55\u4FA1</h4>\n                    <p class=\"text-blue-700\">\n                        \u3053\u308C\u307E\u3067\u306B".concat(totalWorkouts, "\u56DE\u306E\u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u3092\u5B9F\u65BD\u3057\u3001\n                        \u5408\u8A08").concat(totalHours.toFixed(1), "\u6642\u9593\u306E\u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u3092\u884C\u3044\u307E\u3057\u305F\u3002\n                    </p>\n                </div>\n                \n                <div class=\"p-4 bg-green-50 rounded-lg\">\n                    <h4 class=\"font-semibold text-green-800 mb-2\">\u6700\u3082\u935B\u3048\u3066\u3044\u308B\u90E8\u4F4D</h4>\n                    <p class=\"text-green-700\">\n                        ").concat(mostTrainedMuscle ? "".concat(this.getMuscleGroupName(mostTrainedMuscle[0]), "\uFF08").concat(mostTrainedMuscle[1], "\u56DE\uFF09") : 'データが不足しています', "\n                    </p>\n                </div>\n                \n                <div class=\"p-4 bg-yellow-50 rounded-lg\">\n                    <h4 class=\"font-semibold text-yellow-800 mb-2\">\u63A8\u5968\u4E8B\u9805</h4>\n                    <p class=\"text-yellow-700\">\n                        \u7D99\u7D9A\u7684\u306A\u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u3092\u7D9A\u3051\u308B\u3053\u3068\u3067\u3001\u3055\u3089\u306A\u308B\u9032\u6B69\u304C\u671F\u5F85\u3067\u304D\u307E\u3059\u3002\n                        \u30D0\u30E9\u30F3\u30B9\u306E\u53D6\u308C\u305F\u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u3092\u5FC3\u304C\u3051\u307E\u3057\u3087\u3046\u3002\n                    </p>\n                </div>\n            </div>\n        ");
    }

    /**
     * チャートを破棄
     */
  }, {
    key: "destroy",
    value: function destroy() {
      Object.values(this.charts).forEach(function (chart) {
        if (chart && typeof chart.destroy === 'function') {
          chart.destroy();
        }
      });
      this.charts = {};
    }
  }]);
}(); // デフォルトエクスポート
var analysisPage = new AnalysisPage();
var _default = exports["default"] = analysisPage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,