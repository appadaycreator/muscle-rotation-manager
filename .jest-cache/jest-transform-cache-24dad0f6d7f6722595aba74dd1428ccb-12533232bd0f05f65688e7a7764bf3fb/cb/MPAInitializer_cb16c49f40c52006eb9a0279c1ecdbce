11cb4ea2153a2136e1c86d7fc46d9662
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _authManager = require("../modules/authManager.js");
var _supabaseService = require("../services/supabaseService.js");
var _helpers = require("../utils/helpers.js");
var _errorHandler = require("../utils/errorHandler.js");
var _TooltipManager = require("../utils/TooltipManager.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, "default": e }; if (null === e || "object" != _typeof(e) && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t0 in e) "default" !== _t0 && {}.hasOwnProperty.call(e, _t0) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t0)) && (i.get || i.set) ? o(f, _t0, i) : f[_t0] = e[_t0]); return f; })(e, t); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, _regeneratorDefine2(e, r, n, t); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } // js/core/MPAInitializer.js - MPA初期化スクリプト
/**
 * MPA初期化クラス
 * 各ページで共通の初期化処理を実行
 *
 * @class MPAInitializer
 * @version 2.0.0
 * @since 1.0.0
 */
var MPAInitializer = /*#__PURE__*/function () {
  /**
   * MPA初期化クラスのコンストラクタ
   * @param {Object} options - 初期化オプション
   * @param {boolean} options.autoInitialize - 自動初期化（デフォルト: true）
   * @param {boolean} options.enablePerformanceMonitoring - パフォーマンス監視（デフォルト: true）
   */
  function MPAInitializer() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    _classCallCheck(this, MPAInitializer);
    this.isInitialized = false;
    this.currentPage = this.getCurrentPageName();
    this.autoInitialize = options.autoInitialize !== false;
    this.enablePerformanceMonitoring = options.enablePerformanceMonitoring !== false;
    this.initializationTime = null;
    this.componentLoadTimes = new Map();
    this.errorCount = 0;
    this.maxRetries = 3;
    this.retryDelay = 1000;
  }

  /**
   * 現在のページ名を取得
   */
  return _createClass(MPAInitializer, [{
    key: "getCurrentPageName",
    value: function getCurrentPageName() {
      var path = window.location.pathname;
      var pageMap = {
        '/': 'dashboard',
        '/index.html': 'dashboard',
        '/workout.html': 'workout',
        '/calendar.html': 'calendar',
        '/analysis.html': 'analysis',
        '/progress.html': 'progress',
        '/exercises.html': 'exercises',
        '/settings.html': 'settings',
        '/help.html': 'help',
        '/privacy.html': 'privacy',
        // GitHub Pages用のパス
        '/muscle-rotation-manager/': 'dashboard',
        '/muscle-rotation-manager/index.html': 'dashboard',
        '/muscle-rotation-manager/workout.html': 'workout',
        '/muscle-rotation-manager/calendar.html': 'calendar',
        '/muscle-rotation-manager/analysis.html': 'analysis',
        '/muscle-rotation-manager/progress.html': 'progress',
        '/muscle-rotation-manager/exercises.html': 'exercises',
        '/muscle-rotation-manager/settings.html': 'settings',
        '/muscle-rotation-manager/help.html': 'help',
        '/muscle-rotation-manager/privacy.html': 'privacy'
      };
      return pageMap[path] || 'dashboard';
    }

    /**
     * MPA初期化を実行
     * @param {Object} options - 初期化オプション
     * @param {boolean} options.force - 強制初期化（デフォルト: false）
     * @param {boolean} options.skipAuth - 認証チェックをスキップ（デフォルト: false）
     * @returns {Promise<boolean>} 初期化成功かどうか
     */
  }, {
    key: "initialize",
    value: (function () {
      var _initialize = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {
        var options,
          startTime,
          _args = arguments,
          _t;
        return _regenerator().w(function (_context) {
          while (1) switch (_context.p = _context.n) {
            case 0:
              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};
              if (!(this.isInitialized && !options.force)) {
                _context.n = 1;
                break;
              }
              console.log('⚠️ MPA already initialized, skipping...');
              return _context.a(2, true);
            case 1:
              console.log("\uD83D\uDE80 Initializing MPA for page: ".concat(this.currentPage));
              startTime = performance.now();
              this.errorCount = 0;
              _context.p = 2;
              _context.n = 3;
              return this.initializeAuthManager();
            case 3:
              _context.n = 4;
              return this.initializeTooltipManager();
            case 4:
              _context.n = 5;
              return this.waitForSupabaseInitialization();
            case 5:
              if (options.skipAuth) {
                _context.n = 6;
                break;
              }
              _context.n = 6;
              return this.checkAuthentication();
            case 6:
              _context.n = 7;
              return this.loadCommonComponents();
            case 7:
              _context.n = 8;
              return this.initializePageSpecific();
            case 8:
              // 5. イベントリスナーの設定
              this.setupEventListeners();

              // 6. エラーハンドリングの設定
              this.setupErrorHandling();

              // 7. パフォーマンス監視の設定
              if (this.enablePerformanceMonitoring) {
                this.setupPerformanceMonitoring();
              }
              this.initializationTime = performance.now() - startTime;
              this.isInitialized = true;
              console.log("\u2705 MPA initialization complete (".concat(this.initializationTime.toFixed(2), "ms)"));

              // 初期化完了イベントを発火
              this.dispatchEvent('mpaInitialized', {
                page: this.currentPage,
                initTime: this.initializationTime,
                componentLoadTimes: Object.fromEntries(this.componentLoadTimes)
              });
              return _context.a(2, true);
            case 9:
              _context.p = 9;
              _t = _context.v;
              this.errorCount++;
              console.error("\u274C MPA initialization failed (attempt ".concat(this.errorCount, "):"), _t);

              // リトライロジック
              if (!(this.errorCount < this.maxRetries)) {
                _context.n = 12;
                break;
              }
              console.log("\uD83D\uDD04 Retrying MPA initialization in ".concat(this.retryDelay, "ms..."));
              _context.n = 10;
              return this.delay(this.retryDelay);
            case 10:
              _context.n = 11;
              return this.initialize(_objectSpread(_objectSpread({}, options), {}, {
                force: true
              }));
            case 11:
              return _context.a(2, _context.v);
            case 12:
              this.handleInitializationError(_t);
              return _context.a(2, false);
          }
        }, _callee, this, [[2, 9]]);
      }));
      function initialize() {
        return _initialize.apply(this, arguments);
      }
      return initialize;
    }()
    /**
     * 認証状態をチェック
     */
    )
  }, {
    key: "checkAuthentication",
    value: (function () {
      var _checkAuthentication = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {
        var isAuthenticated, currentUser, _t2;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.p = _context2.n) {
            case 0:
              _context2.p = 0;
              if (_supabaseService.supabaseService.isAvailable()) {
                _context2.n = 1;
                break;
              }
              console.log('🔐 Supabase not available, skipping authentication check');
              return _context2.a(2, true);
            case 1:
              _context2.n = 2;
              return _authManager.authManager.isAuthenticated();
            case 2:
              isAuthenticated = _context2.v;
              _context2.n = 3;
              return _authManager.authManager.getCurrentUser();
            case 3:
              currentUser = _context2.v;
              console.log('🔐 Authentication check:', {
                isAuthenticated: isAuthenticated,
                user: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.email) || 'anonymous'
              });
              if (isAuthenticated) {
                _context2.n = 4;
                break;
              }
              this.showLoginPrompt();
              return _context2.a(2, false);
            case 4:
              return _context2.a(2, true);
            case 5:
              _context2.p = 5;
              _t2 = _context2.v;
              console.error('❌ Authentication check failed:', _t2);
              this.showLoginPrompt();
              return _context2.a(2, false);
          }
        }, _callee2, this, [[0, 5]]);
      }));
      function checkAuthentication() {
        return _checkAuthentication.apply(this, arguments);
      }
      return checkAuthentication;
    }()
    /**
     * ログインプロンプトを表示
     */
    )
  }, {
    key: "showLoginPrompt",
    value: function showLoginPrompt() {
      var mainContent = document.getElementById('main-content');
      if (mainContent) {
        mainContent.innerHTML = "\n                <div class=\"min-h-screen flex items-center justify-center bg-gray-50\">\n                    <div class=\"max-w-md w-full space-y-8\">\n                        <div class=\"text-center\">\n                            <h2 class=\"mt-6 text-3xl font-extrabold text-gray-900\">\n                                \u30ED\u30B0\u30A4\u30F3\u304C\u5FC5\u8981\u3067\u3059\n                            </h2>\n                            <p class=\"mt-2 text-sm text-gray-600\">\n                                \u3053\u306E\u30DA\u30FC\u30B8\u306B\u30A2\u30AF\u30BB\u30B9\u3059\u308B\u306B\u306F\u30ED\u30B0\u30A4\u30F3\u3057\u3066\u304F\u3060\u3055\u3044\n                            </p>\n                        </div>\n                        <div class=\"mt-8 space-y-6\">\n                            <div class=\"space-y-4\">\n                                <button onclick=\"window.location.href='index.html'\"\n                                        class=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                                    <i class=\"fas fa-home mr-2\"></i>\n                                    \u30DB\u30FC\u30E0\u306B\u623B\u308B\n                                </button>\n                                <button data-action=\"login\"\n                                        class=\"group relative w-full flex justify-center py-2 px-4 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                                    <i class=\"fas fa-sign-in-alt mr-2\"></i>\n                                    \u30ED\u30B0\u30A4\u30F3\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ";
      }
    }

    /**
     * 共通コンポーネントを読み込み
     */
  }, {
    key: "loadCommonComponents",
    value: (function () {
      var _loadCommonComponents = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {
        var _yield$Promise$allSet, _yield$Promise$allSet2, headerResult, sidebarResult, footerResult, _t3;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.p = _context3.n) {
            case 0:
              _context3.p = 0;
              console.log('🔄 Loading common components...');

              // ヘッダー、サイドバー、フッターを並行読み込み
              _context3.n = 1;
              return Promise.allSettled([this.loadHeader(), this.loadSidebar(), this.loadFooter()]);
            case 1:
              _yield$Promise$allSet = _context3.v;
              _yield$Promise$allSet2 = _slicedToArray(_yield$Promise$allSet, 3);
              headerResult = _yield$Promise$allSet2[0];
              sidebarResult = _yield$Promise$allSet2[1];
              footerResult = _yield$Promise$allSet2[2];
              // 結果をログ出力
              console.log('Component loading results:', {
                header: headerResult.status,
                sidebar: sidebarResult.status,
                footer: footerResult.status
              });

              // エラーハンドリング
              if (headerResult.status === 'rejected') {
                console.warn('Header loading failed:', headerResult.reason);
              }
              if (sidebarResult.status === 'rejected') {
                console.warn('Sidebar loading failed:', sidebarResult.reason);
              }
              if (footerResult.status === 'rejected') {
                console.warn('Footer loading failed:', footerResult.reason);
              }

              // ヘッダーが読み込まれた後に認証イベントリスナーを再設定
              if (!(headerResult.status === 'fulfilled')) {
                _context3.n = 3;
                break;
              }
              console.log('🔄 Re-setting up auth event listeners after header load');
              _context3.n = 2;
              return _authManager.authManager.setupEventListeners();
            case 2:
              // 認証UIを更新
              console.log('🔄 Updating auth UI after header load');
              _context3.n = 3;
              return _authManager.authManager.updateAuthUI();
            case 3:
              _context3.n = 5;
              break;
            case 4:
              _context3.p = 4;
              _t3 = _context3.v;
              console.error('❌ Failed to load common components:', _t3);
              throw _t3;
            case 5:
              return _context3.a(2);
          }
        }, _callee3, this, [[0, 4]]);
      }));
      function loadCommonComponents() {
        return _loadCommonComponents.apply(this, arguments);
      }
      return loadCommonComponents;
    }()
    /**
     * ヘッダーを読み込み
     */
    )
  }, {
    key: "loadHeader",
    value: (function () {
      var _loadHeader = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {
        var headerContainer, response, headerHTML, _t4;
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.p = _context4.n) {
            case 0:
              headerContainer = document.getElementById('header-container');
              if (headerContainer) {
                _context4.n = 1;
                break;
              }
              throw new Error('Header container not found');
            case 1:
              _context4.p = 1;
              _context4.n = 2;
              return fetch('partials/header.html');
            case 2:
              response = _context4.v;
              if (response.ok) {
                _context4.n = 3;
                break;
              }
              throw new Error("Failed to load header: ".concat(response.status));
            case 3:
              _context4.n = 4;
              return response.text();
            case 4:
              headerHTML = _context4.v;
              headerContainer.innerHTML = headerHTML;
              console.log('✅ Header loaded successfully');
              _context4.n = 6;
              break;
            case 5:
              _context4.p = 5;
              _t4 = _context4.v;
              console.error('❌ Header loading failed:', _t4);
              throw _t4;
            case 6:
              return _context4.a(2);
          }
        }, _callee4, null, [[1, 5]]);
      }));
      function loadHeader() {
        return _loadHeader.apply(this, arguments);
      }
      return loadHeader;
    }()
    /**
     * サイドバーを読み込み
     */
    )
  }, {
    key: "loadSidebar",
    value: (function () {
      var _loadSidebar = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5() {
        var sidebarContainer, response, sidebarHTML, _t5;
        return _regenerator().w(function (_context5) {
          while (1) switch (_context5.p = _context5.n) {
            case 0:
              sidebarContainer = document.getElementById('sidebar-container');
              if (sidebarContainer) {
                _context5.n = 1;
                break;
              }
              throw new Error('Sidebar container not found');
            case 1:
              _context5.p = 1;
              _context5.n = 2;
              return fetch('partials/sidebar.html');
            case 2:
              response = _context5.v;
              if (response.ok) {
                _context5.n = 3;
                break;
              }
              throw new Error("Failed to load sidebar: ".concat(response.status));
            case 3:
              _context5.n = 4;
              return response.text();
            case 4:
              sidebarHTML = _context5.v;
              sidebarContainer.innerHTML = sidebarHTML;
              console.log('✅ Sidebar loaded successfully');
              _context5.n = 6;
              break;
            case 5:
              _context5.p = 5;
              _t5 = _context5.v;
              console.error('❌ Sidebar loading failed:', _t5);
              throw _t5;
            case 6:
              return _context5.a(2);
          }
        }, _callee5, null, [[1, 5]]);
      }));
      function loadSidebar() {
        return _loadSidebar.apply(this, arguments);
      }
      return loadSidebar;
    }()
    /**
     * フッターを読み込み
     */
    )
  }, {
    key: "loadFooter",
    value: (function () {
      var _loadFooter = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6() {
        var footerContainer, response, footerHTML, _t6;
        return _regenerator().w(function (_context6) {
          while (1) switch (_context6.p = _context6.n) {
            case 0:
              footerContainer = document.getElementById('footer-container');
              if (footerContainer) {
                _context6.n = 1;
                break;
              }
              throw new Error('Footer container not found');
            case 1:
              _context6.p = 1;
              _context6.n = 2;
              return fetch('partials/footer.html');
            case 2:
              response = _context6.v;
              if (response.ok) {
                _context6.n = 3;
                break;
              }
              throw new Error("Failed to load footer: ".concat(response.status));
            case 3:
              _context6.n = 4;
              return response.text();
            case 4:
              footerHTML = _context6.v;
              footerContainer.innerHTML = footerHTML;
              console.log('✅ Footer loaded successfully');
              _context6.n = 6;
              break;
            case 5:
              _context6.p = 5;
              _t6 = _context6.v;
              console.error('❌ Footer loading failed:', _t6);
              throw _t6;
            case 6:
              return _context6.a(2);
          }
        }, _callee6, null, [[1, 5]]);
      }));
      function loadFooter() {
        return _loadFooter.apply(this, arguments);
      }
      return loadFooter;
    }()
    /**
     * ページ固有の初期化
     */
    )
  }, {
    key: "initializePageSpecific",
    value: (function () {
      var _initializePageSpecific = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee7() {
        var pageModule, _t7;
        return _regenerator().w(function (_context7) {
          while (1) switch (_context7.p = _context7.n) {
            case 0:
              _context7.p = 0;
              console.log("\uD83D\uDD04 Initializing page-specific functionality for: ".concat(this.currentPage));

              // ページ固有のJavaScriptモジュールを動的インポート
              _context7.n = 1;
              return this.loadPageModule(this.currentPage);
            case 1:
              pageModule = _context7.v;
              if (!(pageModule && typeof pageModule.initialize === 'function')) {
                _context7.n = 3;
                break;
              }
              console.log("\uD83D\uDD04 Calling initialize for ".concat(this.currentPage, " page module"));
              _context7.n = 2;
              return pageModule.initialize();
            case 2:
              console.log("\u2705 Page-specific initialization complete for: ".concat(this.currentPage));
              _context7.n = 4;
              break;
            case 3:
              console.warn("\u26A0\uFE0F No initialize method found for ".concat(this.currentPage, " page module"));
            case 4:
              _context7.n = 6;
              break;
            case 5:
              _context7.p = 5;
              _t7 = _context7.v;
              console.warn("\u26A0\uFE0F Page-specific initialization failed for ".concat(this.currentPage, ":"), _t7);
              // ページ固有の初期化に失敗してもアプリケーションは動作する
            case 6:
              return _context7.a(2);
          }
        }, _callee7, this, [[0, 5]]);
      }));
      function initializePageSpecific() {
        return _initializePageSpecific.apply(this, arguments);
      }
      return initializePageSpecific;
    }()
    /**
     * ページモジュールを動的インポート
     */
    )
  }, {
    key: "loadPageModule",
    value: (function () {
      var _loadPageModule = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee8(pageName) {
        var moduleMap, moduleLoader, module, _t8;
        return _regenerator().w(function (_context8) {
          while (1) switch (_context8.p = _context8.n) {
            case 0:
              _context8.p = 0;
              moduleMap = {
                dashboard: function dashboard() {
                  return Promise.resolve().then(function () {
                    return _interopRequireWildcard(require('../pages/dashboardPage.js'));
                  });
                },
                workout: function workout() {
                  return Promise.resolve().then(function () {
                    return _interopRequireWildcard(require('../pages/workoutPage.js'));
                  });
                },
                calendar: function calendar() {
                  return Promise.resolve().then(function () {
                    return _interopRequireWildcard(require('../pages/calendarPage.js'));
                  });
                },
                analysis: function analysis() {
                  return Promise.resolve().then(function () {
                    return _interopRequireWildcard(require('../pages/analysisPage.js'));
                  });
                },
                progress: function progress() {
                  return Promise.resolve().then(function () {
                    return _interopRequireWildcard(require('../pages/progressPage.js'));
                  });
                },
                exercises: function exercises() {
                  return Promise.resolve().then(function () {
                    return _interopRequireWildcard(require('../pages/exercisePage.js'));
                  });
                },
                settings: function settings() {
                  return Promise.resolve().then(function () {
                    return _interopRequireWildcard(require('../pages/settingsPage.js'));
                  });
                }
              };
              moduleLoader = moduleMap[pageName];
              if (moduleLoader) {
                _context8.n = 1;
                break;
              }
              console.warn("No module loader found for page: ".concat(pageName));
              return _context8.a(2, null);
            case 1:
              _context8.n = 2;
              return moduleLoader();
            case 2:
              module = _context8.v;
              return _context8.a(2, module["default"] || module);
            case 3:
              _context8.p = 3;
              _t8 = _context8.v;
              console.error("\u274C Failed to load page module for ".concat(pageName, ":"), _t8);
              return _context8.a(2, null);
          }
        }, _callee8, null, [[0, 3]]);
      }));
      function loadPageModule(_x) {
        return _loadPageModule.apply(this, arguments);
      }
      return loadPageModule;
    }()
    /**
     * イベントリスナーを設定
     */
    )
  }, {
    key: "setupEventListeners",
    value: function setupEventListeners() {
      console.log('🔄 Setting up event listeners...');

      // ナビゲーションリンクのクリックイベント（MPA用）
      document.addEventListener('click', function (e) {
        var navLink = e.target.closest('a[href]');
        if (navLink && navLink.getAttribute('href').startsWith('/')) {
          // MPAではデフォルトのナビゲーションを使用
          var href = navLink.getAttribute('href');
          console.log('🔗 Navigation link clicked:', href);
          // デフォルトのナビゲーションを許可（e.preventDefault()を削除）
        }
      });

      // モバイルメニューのイベント
      this.setupMobileMenu();

      // オンライン/オフライン状態の監視
      this.setupOnlineStatusMonitoring();
      console.log('✅ Event listeners setup complete');
    }

    /**
     * モバイルメニューを設定
     */
  }, {
    key: "setupMobileMenu",
    value: function setupMobileMenu() {
      var mobileMenuBtn = document.getElementById('mobile-menu-btn');
      var mobileSidebar = document.getElementById('mobile-sidebar');
      var mobileSidebarClose = document.getElementById('mobile-sidebar-close');
      if (mobileMenuBtn && mobileSidebar) {
        mobileMenuBtn.addEventListener('click', function () {
          mobileSidebar.classList.add('open');
        });
      }
      if (mobileSidebarClose && mobileSidebar) {
        mobileSidebarClose.addEventListener('click', function () {
          mobileSidebar.classList.remove('open');
        });
      }

      // モバイルサイドバー外クリックで閉じる
      document.addEventListener('click', function (e) {
        if (mobileSidebar && !mobileSidebar.contains(e.target) && !(mobileMenuBtn !== null && mobileMenuBtn !== void 0 && mobileMenuBtn.contains(e.target))) {
          mobileSidebar.classList.remove('open');
        }
      });
    }

    /**
     * オンライン状態の監視を設定
     */
  }, {
    key: "setupOnlineStatusMonitoring",
    value: function setupOnlineStatusMonitoring() {
      window.addEventListener('online', function () {
        console.log('🌐 Online status restored');
        (0, _helpers.showNotification)('オンラインに復帰しました', 'success');
      });
      window.addEventListener('offline', function () {
        console.log('📱 Offline status detected');
        (0, _helpers.showNotification)('オフラインになりました', 'warning');
      });
    }

    /**
     * エラーハンドリングを設定
     */
  }, {
    key: "setupErrorHandling",
    value: function setupErrorHandling() {
      // グローバルエラーハンドリング
      window.addEventListener('error', function (event) {
        console.error('❌ Global JavaScript error:', event.error);
        (0, _errorHandler.handleError)(event.error, {
          context: 'Global Error Handler',
          showNotification: true
        });
      });

      // 未処理のPromise拒否をキャッチ
      window.addEventListener('unhandledrejection', function (event) {
        console.error('❌ Unhandled Promise Rejection:', event.reason);
        (0, _errorHandler.handleError)(event.reason, {
          context: 'Unhandled Promise Rejection',
          showNotification: true
        });
      });
    }

    /**
     * 初期化エラーを処理
     */
  }, {
    key: "handleInitializationError",
    value: function handleInitializationError(error) {
      var mainContent = document.getElementById('main-content');
      if (mainContent) {
        mainContent.innerHTML = "\n                <div class=\"min-h-screen flex items-center justify-center bg-gray-50\">\n                    <div class=\"max-w-md w-full space-y-8\">\n                        <div class=\"text-center\">\n                            <i class=\"fas fa-exclamation-triangle text-6xl text-red-500 mb-4\"></i>\n                            <h2 class=\"text-3xl font-extrabold text-gray-900\">\n                                \u521D\u671F\u5316\u30A8\u30E9\u30FC\n                            </h2>\n                            <p class=\"mt-2 text-sm text-gray-600\">\n                                \u30A2\u30D7\u30EA\u30B1\u30FC\u30B7\u30E7\u30F3\u306E\u521D\u671F\u5316\u306B\u5931\u6557\u3057\u307E\u3057\u305F\n                            </p>\n                        </div>\n                        <div class=\"mt-8 space-y-6\">\n                            <button onclick=\"window.location.reload()\"\n                                    class=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                                <i class=\"fas fa-redo mr-2\"></i>\n                                \u30DA\u30FC\u30B8\u3092\u518D\u8AAD\u307F\u8FBC\u307F\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            ";
      }
    }

    /**
     * 初期化状態を取得
     */
  }, {
    key: "isReady",
    value: function isReady() {
      return this.isInitialized;
    }

    /**
     * 現在のページ名を取得
     */
  }, {
    key: "getCurrentPage",
    value: function getCurrentPage() {
      return this.currentPage;
    }

    /**
     * 認証管理の初期化
     * @returns {Promise<void>}
     */
  }, {
    key: "initializeAuthManager",
    value: (function () {
      var _initializeAuthManager = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee9() {
        var _t9;
        return _regenerator().w(function (_context9) {
          while (1) switch (_context9.p = _context9.n) {
            case 0:
              _context9.p = 0;
              console.log('🔐 Initializing auth manager...');
              _context9.n = 1;
              return _authManager.authManager.initialize();
            case 1:
              console.log('✅ Auth manager initialized');
              _context9.n = 3;
              break;
            case 2:
              _context9.p = 2;
              _t9 = _context9.v;
              console.error('❌ Auth manager initialization failed:', _t9);
              throw _t9;
            case 3:
              return _context9.a(2);
          }
        }, _callee9, null, [[0, 2]]);
      }));
      function initializeAuthManager() {
        return _initializeAuthManager.apply(this, arguments);
      }
      return initializeAuthManager;
    }()
    /**
     * ツールチップマネージャーを初期化
     */
    )
  }, {
    key: "initializeTooltipManager",
    value: (function () {
      var _initializeTooltipManager = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee0() {
        return _regenerator().w(function (_context0) {
          while (1) switch (_context0.n) {
            case 0:
              try {
                console.log('💡 Initializing tooltip manager...');
                _TooltipManager.tooltipManager.initialize();
                console.log('✅ Tooltip manager initialized');
              } catch (error) {
                console.error('❌ Tooltip manager initialization failed:', error);
                // ツールチップの初期化に失敗してもアプリケーションは動作する
              }
            case 1:
              return _context0.a(2);
          }
        }, _callee0);
      }));
      function initializeTooltipManager() {
        return _initializeTooltipManager.apply(this, arguments);
      }
      return initializeTooltipManager;
    }()
    /**
     * Supabaseの初期化完了を待つ
     */
    )
  }, {
    key: "waitForSupabaseInitialization",
    value: (function () {
      var _waitForSupabaseInitialization = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee1() {
        var maxWaitTime, checkInterval, elapsedTime;
        return _regenerator().w(function (_context1) {
          while (1) switch (_context1.n) {
            case 0:
              maxWaitTime = 10000; // 10秒
              checkInterval = 100; // 100ms
              elapsedTime = 0;
              console.log('⏳ Waiting for Supabase initialization...');
            case 1:
              if (!(elapsedTime < maxWaitTime)) {
                _context1.n = 4;
                break;
              }
              if (!_supabaseService.supabaseService.isAvailable()) {
                _context1.n = 2;
                break;
              }
              console.log('✅ Supabase initialization confirmed');
              return _context1.a(2, true);
            case 2:
              _context1.n = 3;
              return new Promise(function (resolve) {
                return setTimeout(resolve, checkInterval);
              });
            case 3:
              elapsedTime += checkInterval;
              _context1.n = 1;
              break;
            case 4:
              console.warn('⚠️ Supabase initialization timeout - proceeding without Supabase');
              return _context1.a(2, false);
          }
        }, _callee1);
      }));
      function waitForSupabaseInitialization() {
        return _waitForSupabaseInitialization.apply(this, arguments);
      }
      return waitForSupabaseInitialization;
    }()
    /**
     * パフォーマンス監視の設定
     */
    )
  }, {
    key: "setupPerformanceMonitoring",
    value: function setupPerformanceMonitoring() {
      var _this = this;
      console.log('📊 Setting up performance monitoring...');

      // ページ読み込み時間の監視
      window.addEventListener('load', function () {
        var loadTime = performance.now();
        console.log("\uD83D\uDCCA Page load time: ".concat(loadTime.toFixed(2), "ms"));
        _this.dispatchEvent('performanceMetric', {
          metric: 'pageLoadTime',
          value: loadTime,
          timestamp: new Date().toISOString()
        });
      });

      // メモリ使用量の監視（開発モードのみ）
      if (window.DEV_MODE && performance.memory) {
        setInterval(function () {
          var memory = performance.memory;
          var memoryInfo = {
            used: Math.round(memory.usedJSHeapSize / 1024 / 1024),
            total: Math.round(memory.totalJSHeapSize / 1024 / 1024),
            limit: Math.round(memory.jsHeapSizeLimit / 1024 / 1024)
          };
          console.log('📊 Memory usage:', memoryInfo);
          _this.dispatchEvent('performanceMetric', {
            metric: 'memoryUsage',
            value: memoryInfo,
            timestamp: new Date().toISOString()
          });
        }, 30000); // 30秒ごと
      }
      console.log('✅ Performance monitoring setup complete');
    }

    /**
     * カスタムイベントを発火
     * @param {string} eventName - イベント名
     * @param {Object} detail - イベント詳細
     */
  }, {
    key: "dispatchEvent",
    value: function dispatchEvent(eventName) {
      var detail = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var event = new CustomEvent(eventName, {
        detail: _objectSpread({
          page: this.currentPage,
          timestamp: new Date().toISOString()
        }, detail)
      });
      window.dispatchEvent(event);
    }

    /**
     * 遅延実行
     * @param {number} ms - 遅延時間（ミリ秒）
     * @returns {Promise<void>}
     */
  }, {
    key: "delay",
    value: function delay(ms) {
      return new Promise(function (resolve) {
        return setTimeout(resolve, ms);
      });
    }

    /**
     * MPAの健全性チェック
     * @returns {Object} 健全性チェック結果
     */
  }, {
    key: "healthCheck",
    value: function healthCheck() {
      var issues = [];
      if (this.errorCount > 3) {
        issues.push('High error count');
      }
      if (this.initializationTime && this.initializationTime > 10000) {
        issues.push('Slow initialization');
      }
      if (this.componentLoadTimes.size === 0) {
        issues.push('No components loaded');
      }
      return {
        isHealthy: issues.length === 0,
        issues: issues,
        score: Math.max(0, 100 - issues.length * 25),
        metrics: {
          errorCount: this.errorCount,
          initializationTime: this.initializationTime,
          componentCount: this.componentLoadTimes.size
        }
      };
    }

    /**
     * MPAの最適化を実行
     * @returns {Promise<void>}
     */
  }, {
    key: "optimize",
    value: (function () {
      var _optimize = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee10() {
        return _regenerator().w(function (_context10) {
          while (1) switch (_context10.n) {
            case 0:
              console.log('🔧 Optimizing MPA...');

              // メモリ使用量の最適化
              if (window.gc) {
                window.gc();
              }

              // 不要なイベントリスナーの削除
              this.cleanup();
              console.log('✅ MPA optimization complete');
            case 1:
              return _context10.a(2);
          }
        }, _callee10, this);
      }));
      function optimize() {
        return _optimize.apply(this, arguments);
      }
      return optimize;
    }()
    /**
     * クリーンアップ処理
     */
    )
  }, {
    key: "cleanup",
    value: function cleanup() {
      console.log('🧹 Cleaning up MPA...');

      // イベントリスナーの削除
      this.removeAllEventListeners();

      // コンポーネント読み込み時間のクリア
      this.componentLoadTimes.clear();
      console.log('✅ MPA cleanup complete');
    }

    /**
     * 全イベントリスナーを削除
     */
  }, {
    key: "removeAllEventListeners",
    value: function removeAllEventListeners() {
      var _this2 = this;
      // カスタムイベントリスナーの削除
      var events = ['online', 'offline', 'error', 'unhandledrejection'];
      events.forEach(function (event) {
        window.removeEventListener(event, _this2["handle".concat(event.charAt(0).toUpperCase() + event.slice(1))]);
      });
    }

    /**
     * MPAの状態を取得
     * @returns {Object} MPAの状態
     */
  }, {
    key: "getState",
    value: function getState() {
      return {
        isInitialized: this.isInitialized,
        currentPage: this.currentPage,
        initializationTime: this.initializationTime,
        errorCount: this.errorCount,
        componentLoadTimes: Object.fromEntries(this.componentLoadTimes),
        autoInitialize: this.autoInitialize,
        enablePerformanceMonitoring: this.enablePerformanceMonitoring
      };
    }
  }]);
}(); // グローバル初期化インスタンス
var mpaInitializer = new MPAInitializer();

// DOM読み込み完了時に初期化を実行
document.addEventListener('DOMContentLoaded', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee11() {
  return _regenerator().w(function (_context11) {
    while (1) switch (_context11.n) {
      case 0:
        console.log('🔄 DOM loaded, initializing MPA...');
        _context11.n = 1;
        return mpaInitializer.initialize();
      case 1:
        return _context11.a(2);
    }
  }, _callee11);
})));

// グローバルに公開
window.mpaInitializer = mpaInitializer;
var _default = exports["default"] = mpaInitializer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,