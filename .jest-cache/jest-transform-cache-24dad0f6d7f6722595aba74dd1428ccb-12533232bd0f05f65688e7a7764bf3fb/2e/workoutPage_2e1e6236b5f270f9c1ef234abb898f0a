027cf2f538af0ba4db8f93cb27a7ac79
"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.WorkoutPage = void 0;
var _BasePage2 = require("../core/BasePage.js");
var _Navigation = require("../components/Navigation.js");
var _supabaseService = require("../services/supabaseService.js");
var _workoutDataService = require("../services/workoutDataService.js");
var _authManager = require("../modules/authManager.js");
var _helpers = require("../utils/helpers.js");
var _TooltipManager = require("../utils/TooltipManager.js");
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == _typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); } // js/pages/WorkoutPage.js - ワークアウトページ（シンプル版）
/**
 * ワークアウトページクラス（シンプル版）
 */
var WorkoutPage = exports.WorkoutPage = /*#__PURE__*/function (_BasePage) {
  function WorkoutPage() {
    var _this;
    _classCallCheck(this, WorkoutPage);
    _this = _callSuper(this, WorkoutPage);
    _this.navigation = new _Navigation.Navigation();
    _this.currentWorkout = null;
    _this.workoutTimer = null;
    _this.workoutStartTime = null;
    _this.exercises = [];
    _this.muscleGroups = ['胸', '背中', '肩', '腕', '脚', '腹筋'];
    _this.selectedMuscles = [];
    _this.selectedExercises = [];
    _this.eventListenersSetup = false;
    _this.muscleGroupCache = new Map(); // 筋肉グループ名からUUIDへのキャッシュ
    _this.currentExercise = null; // 現在のエクササイズ
    _this.currentSet = 0; // 現在のセット数
    _this.setData = []; // セットデータ
    _this.restTimer = null; // レストタイマー
    _this.restStartTime = null; // レスト開始時間

    console.log('WorkoutPage constructor called');
    console.log('Muscle groups initialized:', _this.muscleGroups);

    // 筋肉グループのキャッシュを初期化
    _this.initializeMuscleGroupCache();
    return _this;
  }

  /**
   * 認証状態をチェック（オーバーライド）
   */
  _inherits(WorkoutPage, _BasePage);
  return _createClass(WorkoutPage, [{
    key: "checkAuthentication",
    value: (function () {
      var _checkAuthentication = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {
        return _regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              return _context.a(2, true);
          }
        }, _callee);
      }));
      function checkAuthentication() {
        return _checkAuthentication.apply(this, arguments);
      }
      return checkAuthentication;
    }()
    /**
     * ページ固有の初期化処理
     */
    )
  }, {
    key: "onInitialize",
    value: (function () {
      var _onInitialize = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {
        var _this2 = this;
        var isAuthenticated;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              _context2.n = 1;
              return this.checkAuthentication();
            case 1:
              isAuthenticated = _context2.v;
              if (isAuthenticated) {
                _context2.n = 2;
                break;
              }
              return _context2.a(2);
            case 2:
              _context2.n = 3;
              return this.navigation.initialize();
            case 3:
              // ツールチップ機能を初期化
              _TooltipManager.tooltipManager.initialize();

              // エクササイズデータを読み込み
              _context2.n = 4;
              return this.loadExerciseData();
            case 4:
              // 筋肉グループボタンを生成
              this.loadMuscleGroups();

              // エクササイズプリセットを初期化
              this.clearExercisePresets();

              // DOM要素が読み込まれた後にイベントリスナーを設定
              setTimeout(function () {
                console.log('Setting up event listeners after DOM load...');

                // 筋肉部位ボタンの存在を確認
                var muscleButtons = document.querySelectorAll('.muscle-group-btn');
                console.log('Found muscle group buttons:', muscleButtons.length);
                muscleButtons.forEach(function (btn, index) {
                  console.log("Button ".concat(index, ":"), btn.dataset.muscle, btn);
                });

                // イベントリスナーが既に設定されている場合はスキップ
                if (!_this2.eventListenersSetup) {
                  _this2.setupEventListeners();
                  _this2.setupTooltips();
                  _this2.eventListenersSetup = true;
                }
                _this2.updateQuickStartButton();
                console.log('Event listeners setup complete');
              }, 100);
            case 5:
              return _context2.a(2);
          }
        }, _callee2, this);
      }));
      function onInitialize() {
        return _onInitialize.apply(this, arguments);
      }
      return onInitialize;
    }()
    /**
     * ログインプロンプトを表示
     */
    )
  }, {
    key: "showLoginPrompt",
    value: function showLoginPrompt() {
      var mainContent = document.getElementById('main-content');
      if (!mainContent) {
        return;
      }
      mainContent.innerHTML = "\n            <div class=\"min-h-screen flex items-center justify-center bg-gray-50\">\n                <div class=\"max-w-md w-full bg-white rounded-lg shadow-md p-6 text-center\">\n                    <div class=\"mb-6\">\n                        <div class=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-blue-100 mb-4\">\n                            <svg class=\"h-6 w-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"></path>\n                            </svg>\n                        </div>\n                        <h2 class=\"text-2xl font-bold text-gray-900 mb-2\">\u30ED\u30B0\u30A4\u30F3\u304C\u5FC5\u8981\u3067\u3059</h2>\n                        <p class=\"text-gray-600 mb-6\">\u30EF\u30FC\u30AF\u30A2\u30A6\u30C8\u6A5F\u80FD\u3092\u4F7F\u7528\u3059\u308B\u306B\u306F\u30ED\u30B0\u30A4\u30F3\u3057\u3066\u304F\u3060\u3055\u3044\u3002</p>\n                    </div>\n                    <div class=\"space-y-3\">\n                        <button id=\"login-btn\" class=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors\">\n                            \u30ED\u30B0\u30A4\u30F3\n                        </button>\n                        <button onclick=\"window.location.href='/index.html'\" class=\"w-full bg-gray-200 text-gray-800 py-2 px-4 rounded-md hover:bg-gray-300 transition-colors\">\n                            \u30DB\u30FC\u30E0\u306B\u623B\u308B\n                        </button>\n                    </div>\n                </div>\n            </div>\n        ";

      // ログインボタンのイベントリスナーを設定
      var loginBtn = document.getElementById('login-btn');
      if (loginBtn) {
        loginBtn.addEventListener('click', function () {
          _authManager.authManager.showAuthModal('login');
        });
      }
    }

    /**
     * エクササイズデータを読み込み
     */
  }, {
    key: "loadExerciseData",
    value: (function () {
      var _loadExerciseData = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {
        var _t;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.p = _context3.n) {
            case 0:
              _context3.p = 0;
              if (!_supabaseService.supabaseService.isAvailable()) {
                _context3.n = 2;
                break;
              }
              _context3.n = 1;
              return _supabaseService.supabaseService.getExercises();
            case 1:
              this.exercises = _context3.v;
              _context3.n = 3;
              break;
            case 2:
              this.exercises = this.getDefaultExercises();
            case 3:
              _context3.n = 4;
              return this.loadWorkoutHistory();
            case 4:
              _context3.n = 6;
              break;
            case 5:
              _context3.p = 5;
              _t = _context3.v;
              console.error('Failed to load exercise data:', _t);
              (0, _helpers.showNotification)('エクササイズデータの読み込みに失敗しました', 'error');
            case 6:
              return _context3.a(2);
          }
        }, _callee3, this, [[0, 5]]);
      }));
      function loadExerciseData() {
        return _loadExerciseData.apply(this, arguments);
      }
      return loadExerciseData;
    }()
    /**
     * ワークアウト履歴を読み込み
     */
    )
  }, {
    key: "loadWorkoutHistory",
    value: (function () {
      var _loadWorkoutHistory = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {
        var workoutHistory, _t2;
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.p = _context4.n) {
            case 0:
              _context4.p = 0;
              console.log('Loading workout history...');

              // ワークアウトデータサービスから履歴を読み込み
              _context4.n = 1;
              return _workoutDataService.workoutDataService.loadWorkouts({
                limit: 50
              });
            case 1:
              workoutHistory = _context4.v;
              console.log('Workout history loaded:', workoutHistory.length, 'workouts');
              this.updateWorkoutHistory(workoutHistory);
              _context4.n = 3;
              break;
            case 2:
              _context4.p = 2;
              _t2 = _context4.v;
              console.error('Failed to load workout history:', _t2);
              // エラーが発生した場合は空の履歴を表示
              this.updateWorkoutHistory([]);
            case 3:
              return _context4.a(2);
          }
        }, _callee4, this, [[0, 2]]);
      }));
      function loadWorkoutHistory() {
        return _loadWorkoutHistory.apply(this, arguments);
      }
      return loadWorkoutHistory;
    }()
    /**
     * イベントリスナーを設定
     */
    )
  }, {
    key: "setupEventListeners",
    value: function setupEventListeners() {
      var _this3 = this;
      console.log('Setting up event listeners...');

      // 既存のイベントリスナーを削除
      this.removeEventListeners();

      // 筋肉部位ボタンのクリック
      this.muscleGroupClickHandler = function (e) {
        console.log('Click event detected on:', e.target);
        console.log('Event target classList:', e.target.classList);
        console.log('Closest muscle-group-btn:', e.target.closest('.muscle-group-btn'));
        if (e.target.closest('.muscle-group-btn')) {
          var button = e.target.closest('.muscle-group-btn');
          console.log('Muscle group button clicked:', button.dataset.muscle);
          _this3.toggleMuscleGroup(button);
        } else {
          console.log('Click was not on a muscle group button');
        }
      };

      // クイックスタートワークアウトボタン
      this.quickStartClickHandler = function (e) {
        if (e.target.id === 'quick-start-workout') {
          e.preventDefault();
          _this3.startQuickWorkout();
        }
      };

      // ワークアウト終了ボタン
      this.stopWorkoutClickHandler = /*#__PURE__*/function () {
        var _ref = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5(e) {
          return _regenerator().w(function (_context5) {
            while (1) switch (_context5.n) {
              case 0:
                if (!(e.target.id === 'stop-workout')) {
                  _context5.n = 1;
                  break;
                }
                e.preventDefault();
                _context5.n = 1;
                return _this3.stopWorkout();
              case 1:
                return _context5.a(2);
            }
          }, _callee5);
        }));
        return function (_x) {
          return _ref.apply(this, arguments);
        };
      }();

      // エクササイズ追加ボタン
      this.addExerciseClickHandler = function (e) {
        if (e.target.id === 'add-exercise-btn') {
          e.preventDefault();
          _this3.addExercise();
        }
      };

      // イベントリスナーを追加
      document.addEventListener('click', this.muscleGroupClickHandler);
      document.addEventListener('click', this.quickStartClickHandler);
      document.addEventListener('click', this.stopWorkoutClickHandler);
      document.addEventListener('click', this.addExerciseClickHandler);
    }

    /**
     * イベントリスナーを削除
     */
  }, {
    key: "removeEventListeners",
    value: function removeEventListeners() {
      if (this.muscleGroupClickHandler) {
        document.removeEventListener('click', this.muscleGroupClickHandler);
      }
      if (this.quickStartClickHandler) {
        document.removeEventListener('click', this.quickStartClickHandler);
      }
      if (this.stopWorkoutClickHandler) {
        document.removeEventListener('click', this.stopWorkoutClickHandler);
      }
      if (this.addExerciseClickHandler) {
        document.removeEventListener('click', this.addExerciseClickHandler);
      }
    }

    /**
     * クイックスタートワークアウトを開始
     */
  }, {
    key: "startQuickWorkout",
    value: function startQuickWorkout() {
      var selectedMuscles = Array.from(document.querySelectorAll('.muscle-group-btn.selected')).map(function (btn) {
        return btn.dataset.muscle;
      });
      if (selectedMuscles.length === 0) {
        (0, _helpers.showNotification)('筋肉部位を選択してください', 'warning');
        return;
      }

      // ワークアウトを開始
      this.currentWorkout = {
        muscleGroups: selectedMuscles,
        startTime: new Date(),
        sessionName: "".concat(selectedMuscles.join(', '), "\u306E\u30EF\u30FC\u30AF\u30A2\u30A6\u30C8 - ").concat(new Date().toLocaleDateString('ja-JP')),
        exercises: [],
        // エクササイズデータ
        totalSets: 0,
        // 総セット数
        totalReps: 0,
        // 総レップ数
        totalWeight: 0 // 総重量
      };

      // クイックスタートセクションを非表示にして、現在のワークアウトセクションを表示
      var quickStartSection = document.querySelector('.muscle-card');
      if (quickStartSection) {
        quickStartSection.classList.add('hidden');
      }
      document.getElementById('current-workout').classList.remove('hidden');

      // タイマーを開始
      this.startWorkoutTimer();

      // エクササイズ選択セクションを表示
      this.renderExerciseSelection();
      (0, _helpers.showNotification)('ワークアウトを開始しました', 'success');
    }

    /**
     * 筋肉部位の選択状態を切り替え
     */
  }, {
    key: "toggleMuscleGroup",
    value: function toggleMuscleGroup(button) {
      console.log('Toggling muscle group:', button.dataset.muscle);
      button.classList.toggle('selected');

      // 選択状態の視覚的フィードバック
      if (button.classList.contains('selected')) {
        button.style.backgroundColor = '#3B82F6';
        button.style.color = 'white';
        button.style.borderColor = '#3B82F6';
        console.log('Muscle group selected:', button.dataset.muscle);
      } else {
        button.style.backgroundColor = '';
        button.style.color = '';
        button.style.borderColor = '';
        console.log('Muscle group deselected:', button.dataset.muscle);
      }
      this.updateQuickStartButton();
      this.loadExercisesForSelectedMuscles();
    }

    /**
     * エクササイズ選択セクションをレンダリング
     */
  }, {
    key: "renderExerciseSelection",
    value: function renderExerciseSelection() {
      var container = document.getElementById('current-workout');
      if (!container) return;
      container.innerHTML = "\n      <!-- \u30EF\u30FC\u30AF\u30A2\u30A6\u30C8\u30D8\u30C3\u30C0\u30FC -->\n      <div class=\"bg-white rounded-lg shadow-md p-6 mb-6\">\n        <div class=\"flex justify-between items-center\">\n          <div>\n            <h3 class=\"text-xl font-bold text-gray-800\">".concat(this.currentWorkout.sessionName, "</h3>\n            <p class=\"text-gray-600\">\u958B\u59CB\u6642\u523B: ").concat(this.currentWorkout.startTime.toLocaleTimeString('ja-JP'), "</p>\n          </div>\n          <div class=\"text-right\">\n            <div class=\"text-2xl font-bold text-blue-600\" id=\"workout-timer\">00:00</div>\n            <div class=\"text-sm text-gray-500\">\u7D4C\u904E\u6642\u9593</div>\n          </div>\n        </div>\n      </div>\n\n      <!-- \u30A8\u30AF\u30B5\u30B5\u30A4\u30BA\u9078\u629E -->\n      <div class=\"bg-white rounded-lg shadow-md p-6 mb-6\">\n        <h4 class=\"text-lg font-semibold text-gray-800 mb-4\">\n          <i class=\"fas fa-dumbbell text-blue-500 mr-2\"></i>\n          \u30A8\u30AF\u30B5\u30B5\u30A4\u30BA\u3092\u9078\u629E\n        </h4>\n        <div id=\"exercise-presets\" class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <!-- \u30A8\u30AF\u30B5\u30B5\u30A4\u30BA\u30DC\u30BF\u30F3\u304C\u3053\u3053\u306B\u52D5\u7684\u306B\u8FFD\u52A0\u3055\u308C\u308B -->\n        </div>\n      </div>\n\n      <!-- \u73FE\u5728\u306E\u30A8\u30AF\u30B5\u30B5\u30A4\u30BA -->\n      <div id=\"current-exercise-section\" class=\"hidden\">\n        <div class=\"bg-white rounded-lg shadow-md p-6 mb-6\">\n          <div class=\"flex justify-between items-center mb-4\">\n            <h4 class=\"text-lg font-semibold text-gray-800\" id=\"current-exercise-name\">\n              \u30A8\u30AF\u30B5\u30B5\u30A4\u30BA\u540D\n            </h4>\n            <button id=\"finish-exercise-btn\" class=\"bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition-colors\">\n              <i class=\"fas fa-check mr-2\"></i>\u30A8\u30AF\u30B5\u30B5\u30A4\u30BA\u5B8C\u4E86\n            </button>\n          </div>\n          \n          <!-- \u30BB\u30C3\u30C8\u8A18\u9332 -->\n          <div class=\"mb-4\">\n            <div class=\"flex items-center justify-between mb-2\">\n              <span class=\"text-sm font-medium text-gray-700\">\u30BB\u30C3\u30C8 ").concat(this.currentSet + 1, "</span>\n              <div class=\"flex items-center space-x-2\">\n                <span class=\"text-sm text-gray-500\">\u30EC\u30C3\u30D7\u6570:</span>\n                <input type=\"number\" id=\"reps-input\" class=\"w-20 px-2 py-1 border border-gray-300 rounded text-center\" min=\"1\" max=\"100\" value=\"10\">\n                <span class=\"text-sm text-gray-500\">\u91CD\u91CF(kg):</span>\n                <input type=\"number\" id=\"weight-input\" class=\"w-20 px-2 py-1 border border-gray-300 rounded text-center\" min=\"0\" step=\"0.5\" value=\"0\">\n              </div>\n            </div>\n            <button id=\"add-set-btn\" class=\"w-full bg-green-600 text-white py-2 rounded-lg hover:bg-green-700 transition-colors\">\n              <i class=\"fas fa-plus mr-2\"></i>\u30BB\u30C3\u30C8\u3092\u8FFD\u52A0\n            </button>\n          </div>\n\n          <!-- \u30BB\u30C3\u30C8\u5C65\u6B74 -->\n          <div id=\"sets-history\" class=\"space-y-2\">\n            <!-- \u30BB\u30C3\u30C8\u5C65\u6B74\u304C\u3053\u3053\u306B\u52D5\u7684\u306B\u8FFD\u52A0\u3055\u308C\u308B -->\n          </div>\n        </div>\n      </div>\n\n      <!-- \u30EF\u30FC\u30AF\u30A2\u30A6\u30C8\u7D71\u8A08 -->\n      <div class=\"bg-white rounded-lg shadow-md p-6 mb-6\">\n        <h4 class=\"text-lg font-semibold text-gray-800 mb-4\">\n          <i class=\"fas fa-chart-bar text-green-500 mr-2\"></i>\n          \u30EF\u30FC\u30AF\u30A2\u30A6\u30C8\u7D71\u8A08\n        </h4>\n        <div class=\"grid grid-cols-3 gap-4 text-center\">\n          <div>\n            <div class=\"text-2xl font-bold text-blue-600\" id=\"total-sets\">0</div>\n            <div class=\"text-sm text-gray-500\">\u7DCF\u30BB\u30C3\u30C8\u6570</div>\n          </div>\n          <div>\n            <div class=\"text-2xl font-bold text-green-600\" id=\"total-reps\">0</div>\n            <div class=\"text-sm text-gray-500\">\u7DCF\u30EC\u30C3\u30D7\u6570</div>\n          </div>\n          <div>\n            <div class=\"text-2xl font-bold text-purple-600\" id=\"total-weight\">0</div>\n            <div class=\"text-sm text-gray-500\">\u7DCF\u91CD\u91CF(kg)</div>\n          </div>\n        </div>\n      </div>\n\n      <!-- \u30EF\u30FC\u30AF\u30A2\u30A6\u30C8\u5B8C\u4E86\u30DC\u30BF\u30F3 -->\n      <div class=\"text-center\">\n        <button id=\"finish-workout-btn\" class=\"bg-red-600 text-white px-8 py-3 rounded-lg hover:bg-red-700 transition-colors text-lg font-semibold\">\n          <i class=\"fas fa-stop mr-2\"></i>\u30EF\u30FC\u30AF\u30A2\u30A6\u30C8\u5B8C\u4E86\n        </button>\n      </div>\n    ");

      // イベントリスナーを設定
      this.setupWorkoutEventListeners();
    }

    /**
     * ワークアウトイベントリスナーを設定
     */
  }, {
    key: "setupWorkoutEventListeners",
    value: function setupWorkoutEventListeners() {
      var _this4 = this;
      // エクササイズ完了ボタン
      var finishExerciseBtn = document.getElementById('finish-exercise-btn');
      if (finishExerciseBtn) {
        finishExerciseBtn.addEventListener('click', function () {
          _this4.finishCurrentExercise();
        });
      }

      // セット追加ボタン
      var addSetBtn = document.getElementById('add-set-btn');
      if (addSetBtn) {
        addSetBtn.addEventListener('click', function () {
          _this4.addSet();
        });
      }

      // ワークアウト完了ボタン
      var finishWorkoutBtn = document.getElementById('finish-workout-btn');
      if (finishWorkoutBtn) {
        finishWorkoutBtn.addEventListener('click', function () {
          _this4.finishWorkout();
        });
      }
    }

    /**
     * エクササイズを開始
     */
  }, {
    key: "startExercise",
    value: function startExercise(exerciseName) {
      this.currentExercise = {
        name: exerciseName,
        sets: [],
        startTime: new Date()
      };
      this.currentSet = 0;
      this.setData = [];

      // 現在のエクササイズセクションを表示
      var currentExerciseSection = document.getElementById('current-exercise-section');
      if (currentExerciseSection) {
        currentExerciseSection.classList.remove('hidden');
      }

      // エクササイズ名を更新
      var exerciseNameElement = document.getElementById('current-exercise-name');
      if (exerciseNameElement) {
        exerciseNameElement.textContent = exerciseName;
      }
      (0, _helpers.showNotification)("".concat(exerciseName, "\u3092\u958B\u59CB\u3057\u307E\u3057\u305F"), 'success');
    }

    /**
     * セットを追加
     */
  }, {
    key: "addSet",
    value: function addSet() {
      var repsInput = document.getElementById('reps-input');
      var weightInput = document.getElementById('weight-input');
      if (!repsInput || !weightInput) return;
      var reps = parseInt(repsInput.value) || 0;
      var weight = parseFloat(weightInput.value) || 0;
      if (reps === 0) {
        (0, _helpers.showNotification)('レップ数を入力してください', 'warning');
        return;
      }
      var setData = {
        setNumber: this.currentSet + 1,
        reps: reps,
        weight: weight,
        timestamp: new Date()
      };
      this.setData.push(setData);
      this.currentSet++;

      // セット履歴を更新
      this.updateSetsHistory();

      // ワークアウト統計を更新
      this.updateWorkoutStats();

      // 入力フィールドをリセット
      repsInput.value = '10';
      weightInput.value = '0';
      (0, _helpers.showNotification)("\u30BB\u30C3\u30C8".concat(setData.setNumber, "\u3092\u8A18\u9332\u3057\u307E\u3057\u305F"), 'success');
    }

    /**
     * セット履歴を更新
     */
  }, {
    key: "updateSetsHistory",
    value: function updateSetsHistory() {
      var setsHistory = document.getElementById('sets-history');
      if (!setsHistory) return;
      setsHistory.innerHTML = this.setData.map(function (set) {
        return "\n      <div class=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n        <div class=\"flex items-center space-x-4\">\n          <span class=\"text-sm font-medium text-gray-700\">\u30BB\u30C3\u30C8 ".concat(set.setNumber, "</span>\n          <span class=\"text-sm text-gray-600\">").concat(set.reps, "\u56DE</span>\n          <span class=\"text-sm text-gray-600\">").concat(set.weight, "kg</span>\n        </div>\n        <div class=\"text-xs text-gray-500\">\n          ").concat(set.timestamp.toLocaleTimeString('ja-JP'), "\n        </div>\n      </div>\n    ");
      }).join('');
    }

    /**
     * ワークアウト統計を更新
     */
  }, {
    key: "updateWorkoutStats",
    value: function updateWorkoutStats() {
      var totalSets = this.currentWorkout.exercises.reduce(function (sum, exercise) {
        return sum + exercise.sets.length;
      }, 0) + this.setData.length;
      var totalReps = this.currentWorkout.exercises.reduce(function (sum, exercise) {
        return sum + exercise.sets.reduce(function (setSum, set) {
          return setSum + set.reps;
        }, 0);
      }, 0) + this.setData.reduce(function (sum, set) {
        return sum + set.reps;
      }, 0);
      var totalWeight = this.currentWorkout.exercises.reduce(function (sum, exercise) {
        return sum + exercise.sets.reduce(function (setSum, set) {
          return setSum + set.weight * set.reps;
        }, 0);
      }, 0) + this.setData.reduce(function (sum, set) {
        return sum + set.weight * set.reps;
      }, 0);

      // 統計を更新
      var totalSetsElement = document.getElementById('total-sets');
      var totalRepsElement = document.getElementById('total-reps');
      var totalWeightElement = document.getElementById('total-weight');
      if (totalSetsElement) totalSetsElement.textContent = totalSets;
      if (totalRepsElement) totalRepsElement.textContent = totalReps;
      if (totalWeightElement) totalWeightElement.textContent = totalWeight;
    }

    /**
     * 現在のエクササイズを完了
     */
  }, {
    key: "finishCurrentExercise",
    value: function finishCurrentExercise() {
      if (!this.currentExercise || this.setData.length === 0) {
        (0, _helpers.showNotification)('セットを記録してください', 'warning');
        return;
      }

      // エクササイズデータを保存
      this.currentExercise.sets = _toConsumableArray(this.setData);
      this.currentExercise.endTime = new Date();
      this.currentExercise.duration = Math.floor((this.currentExercise.endTime - this.currentExercise.startTime) / 60000);
      this.currentWorkout.exercises.push(_objectSpread({}, this.currentExercise));

      // 現在のエクササイズセクションを非表示
      var currentExerciseSection = document.getElementById('current-exercise-section');
      if (currentExerciseSection) {
        currentExerciseSection.classList.add('hidden');
      }

      // 統計を更新
      this.updateWorkoutStats();
      (0, _helpers.showNotification)("".concat(this.currentExercise.name, "\u3092\u5B8C\u4E86\u3057\u307E\u3057\u305F"), 'success');

      // リセット
      this.currentExercise = null;
      this.currentSet = 0;
      this.setData = [];
    }

    /**
     * ワークアウトを完了
     */
  }, {
    key: "finishWorkout",
    value: (function () {
      var _finishWorkout = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6() {
        var endTime, duration;
        return _regenerator().w(function (_context6) {
          while (1) switch (_context6.n) {
            case 0:
              if (!(this.currentWorkout.exercises.length === 0)) {
                _context6.n = 1;
                break;
              }
              (0, _helpers.showNotification)('エクササイズを記録してください', 'warning');
              return _context6.a(2);
            case 1:
              endTime = new Date();
              duration = Math.floor((endTime - this.currentWorkout.startTime) / 60000);
              this.currentWorkout.endTime = endTime;
              this.currentWorkout.duration = duration;

              // ワークアウトを保存
              _context6.n = 2;
              return this.saveWorkoutToHistory();
            case 2:
              (0, _helpers.showNotification)('ワークアウトを完了しました！', 'success');

              // ページをリセット
              this.resetWorkoutPage();
            case 3:
              return _context6.a(2);
          }
        }, _callee6, this);
      }));
      function finishWorkout() {
        return _finishWorkout.apply(this, arguments);
      }
      return finishWorkout;
    }()
    /**
     * ワークアウトページをリセット
     */
    )
  }, {
    key: "resetWorkoutPage",
    value: function resetWorkoutPage() {
      this.currentWorkout = null;
      this.currentExercise = null;
      this.currentSet = 0;
      this.setData = [];

      // タイマーを停止
      if (this.workoutTimer) {
        clearInterval(this.workoutTimer);
        this.workoutTimer = null;
      }

      // ページをリロード
      window.location.reload();
    }

    /**
     * ワークアウトを開始
     */
  }, {
    key: "startWorkout",
    value: function startWorkout(muscleGroup) {
      console.log("Starting workout for: ".concat(muscleGroup));
      this.currentWorkout = {
        muscleGroup: muscleGroup,
        startTime: new Date(),
        sessionName: "".concat(muscleGroup, "\u306E\u30EF\u30FC\u30AF\u30A2\u30A6\u30C8 - ").concat(new Date().toLocaleDateString('ja-JP'))
      };

      // クイックスタートセクションを非表示にして、現在のワークアウトセクションを表示
      var quickStartSection = document.querySelector('.muscle-card');
      if (quickStartSection) {
        quickStartSection.classList.add('hidden');
      }
      document.getElementById('current-workout').classList.remove('hidden');

      // タイマーを開始
      this.startWorkoutTimer();
      (0, _helpers.showNotification)("".concat(muscleGroup, "\u306E\u30EF\u30FC\u30AF\u30A2\u30A6\u30C8\u3092\u958B\u59CB\u3057\u307E\u3057\u305F"), 'success');
    }

    /**
     * ワークアウトを停止
     */
  }, {
    key: "stopWorkout",
    value: (function () {
      var _stopWorkout = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee7() {
        var endTime, duration, quickStartSection;
        return _regenerator().w(function (_context7) {
          while (1) switch (_context7.n) {
            case 0:
              if (this.workoutTimer) {
                clearInterval(this.workoutTimer);
                this.workoutTimer = null;
              }
              if (!this.currentWorkout) {
                _context7.n = 1;
                break;
              }
              endTime = new Date();
              duration = Math.floor((endTime - this.currentWorkout.startTime) / 60000);
              (0, _helpers.showNotification)("\u30EF\u30FC\u30AF\u30A2\u30A6\u30C8\u3092\u7D42\u4E86\u3057\u307E\u3057\u305F\uFF08".concat(duration, "\u5206\uFF09"), 'success');

              // ワークアウト履歴に保存
              _context7.n = 1;
              return this.saveWorkoutToHistory();
            case 1:
              // 現在のワークアウトセクションを非表示にして、クイックスタートセクションを表示
              document.getElementById('current-workout').classList.add('hidden');
              quickStartSection = document.querySelector('.muscle-card');
              if (quickStartSection) {
                quickStartSection.classList.remove('hidden');
              }
              this.currentWorkout = null;
            case 2:
              return _context7.a(2);
          }
        }, _callee7, this);
      }));
      function stopWorkout() {
        return _stopWorkout.apply(this, arguments);
      }
      return stopWorkout;
    }()
    /**
     * エクササイズを追加
     */
    )
  }, {
    key: "addExercise",
    value: function addExercise() {
      var exerciseName = window.prompt('エクササイズ名を入力してください:');
      if (exerciseName && exerciseName.trim()) {
        this.addExerciseToWorkout(exerciseName.trim());
      }
    }

    /**
     * ワークアウトにエクササイズを追加
     */
  }, {
    key: "addExerciseToWorkout",
    value: function addExerciseToWorkout(exerciseName) {
      var container = document.getElementById('workout-exercises');
      if (!container) {
        return;
      }
      var exerciseElement = document.createElement('div');
      exerciseElement.className = 'flex items-center justify-between p-4 bg-white border border-gray-200 rounded-lg';
      exerciseElement.innerHTML = "\n            <div class=\"flex items-center\">\n                <i class=\"fas fa-dumbbell text-blue-500 mr-3\"></i>\n                <span class=\"font-medium text-gray-900\">".concat(exerciseName, "</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <button class=\"btn-secondary text-sm px-3 py-1\">\n                    <i class=\"fas fa-plus mr-1\"></i>\u30BB\u30C3\u30C8\u8FFD\u52A0\n                </button>\n                <button class=\"btn-danger text-sm px-3 py-1\">\n                    <i class=\"fas fa-trash mr-1\"></i>\u524A\u9664\n                </button>\n            </div>\n        ");
      container.appendChild(exerciseElement);
      (0, _helpers.showNotification)("".concat(exerciseName, "\u3092\u8FFD\u52A0\u3057\u307E\u3057\u305F"), 'success');
    }

    /**
     * 筋肉グループボタンを生成
     */
  }, {
    key: "loadMuscleGroups",
    value: function loadMuscleGroups() {
      var container = document.getElementById('muscle-groups-grid');
      if (!container) {
        console.error('Muscle groups grid container not found');
        return;
      }

      // 筋肉グループのアイコンと色を定義
      var muscleGroupConfig = {
        胸: {
          icon: 'fas fa-heart',
          color: 'text-red-500',
          bgColor: 'bg-red-50',
          hoverColor: 'hover:bg-red-100'
        },
        背中: {
          icon: 'fas fa-user',
          color: 'text-blue-500',
          bgColor: 'bg-blue-50',
          hoverColor: 'hover:bg-blue-100'
        },
        肩: {
          icon: 'fas fa-arrow-up',
          color: 'text-green-500',
          bgColor: 'bg-green-50',
          hoverColor: 'hover:bg-green-100'
        },
        腕: {
          icon: 'fas fa-hand-paper',
          color: 'text-purple-500',
          bgColor: 'bg-purple-50',
          hoverColor: 'hover:bg-purple-100'
        },
        脚: {
          icon: 'fas fa-running',
          color: 'text-orange-500',
          bgColor: 'bg-orange-50',
          hoverColor: 'hover:bg-orange-100'
        },
        腹筋: {
          icon: 'fas fa-dumbbell',
          color: 'text-yellow-500',
          bgColor: 'bg-yellow-50',
          hoverColor: 'hover:bg-yellow-100'
        }
      };
      container.innerHTML = this.muscleGroups.map(function (muscle) {
        var config = muscleGroupConfig[muscle] || {
          icon: 'fas fa-dumbbell',
          color: 'text-gray-500',
          bgColor: 'bg-gray-50',
          hoverColor: 'hover:bg-gray-100'
        };
        return "\n                <button class=\"muscle-group-btn ".concat(config.bgColor, " ").concat(config.hoverColor, " border-2 border-gray-200 rounded-lg p-4 text-center transition-all duration-200 hover:shadow-md\" \n                        data-muscle=\"").concat(muscle, "\">\n                    <div class=\"flex flex-col items-center space-y-2\">\n                        <i class=\"").concat(config.icon, " ").concat(config.color, " text-2xl\"></i>\n                        <span class=\"font-medium text-gray-800\">").concat(muscle, "</span>\n                    </div>\n                </button>\n            ");
      }).join('');
      console.log('Muscle group buttons generated:', this.muscleGroups.length);
    }

    /**
     * 選択された筋肉グループに基づいてエクササイズを表示
     */
  }, {
    key: "loadExercisesForSelectedMuscles",
    value: function loadExercisesForSelectedMuscles() {
      var _this5 = this;
      var selectedMuscles = Array.from(document.querySelectorAll('.muscle-group-btn.selected')).map(function (btn) {
        return btn.dataset.muscle;
      });
      if (selectedMuscles.length === 0) {
        this.clearExercisePresets();
        return;
      }
      var container = document.getElementById('exercise-presets');
      if (!container) {
        console.error('Exercise presets container not found');
        return;
      }

      // 選択された筋肉グループのエクササイズを取得
      var relevantExercises = this.getDefaultExercises().filter(function (exercise) {
        return selectedMuscles.includes(exercise.muscle_group);
      });
      if (relevantExercises.length === 0) {
        container.innerHTML = "\n                <div class=\"col-span-full text-center text-gray-500 py-4\">\n                    <i class=\"fas fa-info-circle text-xl mb-2\"></i>\n                    <p>\u9078\u629E\u3055\u308C\u305F\u90E8\u4F4D\u306E\u30A8\u30AF\u30B5\u30B5\u30A4\u30BA\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093</p>\n                </div>\n            ";
        return;
      }
      container.innerHTML = relevantExercises.map(function (exercise) {
        return "\n            <button class=\"exercise-preset-btn bg-white border border-gray-200 rounded-lg p-3 text-left hover:bg-gray-50 hover:border-blue-300 transition-all duration-200\" \n                    data-exercise=\"".concat(exercise.name, "\" data-muscle=\"").concat(exercise.muscle_group, "\">\n                <div class=\"flex items-center justify-between\">\n                    <div>\n                        <h4 class=\"font-medium text-gray-900\">").concat(exercise.name, "</h4>\n                        <p class=\"text-sm text-gray-500\">").concat(exercise.muscle_group, " \u2022 ").concat(exercise.equipment, "</p>\n                    </div>\n                    <div class=\"flex items-center space-x-1\">\n                        ").concat('★'.repeat(exercise.difficulty), "\n                        <span class=\"text-xs text-gray-400 ml-1\">").concat(exercise.difficulty, "/5</span>\n                    </div>\n                </div>\n            </button>\n        ");
      }).join('');

      // エクササイズボタンのイベントリスナーを設定
      container.querySelectorAll('.exercise-preset-btn').forEach(function (btn) {
        btn.addEventListener('click', function () {
          var exerciseName = btn.dataset.exercise;
          _this5.startExercise(exerciseName);
        });
      });
      console.log('Loaded exercises for selected muscles:', selectedMuscles, relevantExercises.length);
    }

    /**
     * エクササイズプリセットをクリア
     */
  }, {
    key: "clearExercisePresets",
    value: function clearExercisePresets() {
      var container = document.getElementById('exercise-presets');
      if (container) {
        container.innerHTML = "\n                <div class=\"col-span-full text-center text-gray-500 py-4\">\n                    <i class=\"fas fa-hand-pointer text-xl mb-2\"></i>\n                    <p>\u7B4B\u8089\u90E8\u4F4D\u3092\u9078\u629E\u3057\u3066\u304F\u3060\u3055\u3044</p>\n                </div>\n            ";
      }
    }

    /**
     * 筋肉グループのキャッシュを初期化
     */
  }, {
    key: "initializeMuscleGroupCache",
    value: (function () {
      var _initializeMuscleGroupCache = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee8() {
        var _this6 = this;
        var _yield$supabaseServic, data, error, _t3;
        return _regenerator().w(function (_context8) {
          while (1) switch (_context8.p = _context8.n) {
            case 0:
              _context8.p = 0;
              if (_supabaseService.supabaseService.isAvailable()) {
                _context8.n = 1;
                break;
              }
              console.log('Supabase not available, cannot initialize muscle group cache');
              return _context8.a(2);
            case 1:
              _context8.n = 2;
              return _supabaseService.supabaseService.client.from('muscle_groups').select('id, name_ja');
            case 2:
              _yield$supabaseServic = _context8.v;
              data = _yield$supabaseServic.data;
              error = _yield$supabaseServic.error;
              if (!error) {
                _context8.n = 3;
                break;
              }
              console.error('Failed to load muscle groups:', error);
              return _context8.a(2);
            case 3:
              if (data) {
                data.forEach(function (muscle) {
                  _this6.muscleGroupCache.set(muscle.name_ja, muscle.id);
                });
                console.log('Muscle group cache initialized:', this.muscleGroupCache);
              }
              _context8.n = 5;
              break;
            case 4:
              _context8.p = 4;
              _t3 = _context8.v;
              console.error('Error initializing muscle group cache:', _t3);
            case 5:
              return _context8.a(2);
          }
        }, _callee8, this, [[0, 4]]);
      }));
      function initializeMuscleGroupCache() {
        return _initializeMuscleGroupCache.apply(this, arguments);
      }
      return initializeMuscleGroupCache;
    }()
    /**
     * 筋肉グループ名をUUIDに変換
     */
    )
  }, {
    key: "convertMuscleGroupsToUUIDs",
    value: (function () {
      var _convertMuscleGroupsToUUIDs = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee9(muscleGroupNames) {
        var muscleGroupUUIDs, _iterator, _step, muscleName, uuid, _yield$supabaseServic2, data, error, _t4, _t5;
        return _regenerator().w(function (_context9) {
          while (1) switch (_context9.p = _context9.n) {
            case 0:
              _context9.p = 0;
              if (_supabaseService.supabaseService.isAvailable()) {
                _context9.n = 1;
                break;
              }
              console.log('Supabase not available, cannot convert muscle groups to UUIDs');
              return _context9.a(2, []);
            case 1:
              muscleGroupUUIDs = [];
              _iterator = _createForOfIteratorHelper(muscleGroupNames);
              _context9.p = 2;
              _iterator.s();
            case 3:
              if ((_step = _iterator.n()).done) {
                _context9.n = 8;
                break;
              }
              muscleName = _step.value;
              if (!this.muscleGroupCache.has(muscleName)) {
                _context9.n = 4;
                break;
              }
              uuid = this.muscleGroupCache.get(muscleName);
              muscleGroupUUIDs.push(uuid);
              console.log("Using cached UUID for ".concat(muscleName, ": ").concat(uuid));
              return _context9.a(3, 7);
            case 4:
              _context9.n = 5;
              return _supabaseService.supabaseService.client.from('muscle_groups').select('id').eq('name_ja', muscleName).single();
            case 5:
              _yield$supabaseServic2 = _context9.v;
              data = _yield$supabaseServic2.data;
              error = _yield$supabaseServic2.error;
              if (!error) {
                _context9.n = 6;
                break;
              }
              console.error("Failed to get UUID for muscle group ".concat(muscleName, ":"), error);
              return _context9.a(3, 7);
            case 6:
              if (data && data.id) {
                // キャッシュに保存
                this.muscleGroupCache.set(muscleName, data.id);
                muscleGroupUUIDs.push(data.id);
                console.log("Converted ".concat(muscleName, " to UUID: ").concat(data.id));
              }
            case 7:
              _context9.n = 3;
              break;
            case 8:
              _context9.n = 10;
              break;
            case 9:
              _context9.p = 9;
              _t4 = _context9.v;
              _iterator.e(_t4);
            case 10:
              _context9.p = 10;
              _iterator.f();
              return _context9.f(10);
            case 11:
              return _context9.a(2, muscleGroupUUIDs);
            case 12:
              _context9.p = 12;
              _t5 = _context9.v;
              console.error('Error converting muscle groups to UUIDs:', _t5);
              return _context9.a(2, []);
          }
        }, _callee9, this, [[2, 9, 10, 11], [0, 12]]);
      }));
      function convertMuscleGroupsToUUIDs(_x2) {
        return _convertMuscleGroupsToUUIDs.apply(this, arguments);
      }
      return convertMuscleGroupsToUUIDs;
    }()
    /**
     * ワークアウト履歴に保存
     */
    )
  }, {
    key: "saveWorkoutToHistory",
    value: (function () {
      var _saveWorkoutToHistory = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee0() {
        var endTime, duration, muscleGroupUUIDs, currentUser, workoutData, success, _t6;
        return _regenerator().w(function (_context0) {
          while (1) switch (_context0.p = _context0.n) {
            case 0:
              if (this.currentWorkout) {
                _context0.n = 1;
                break;
              }
              console.log('No current workout to save');
              return _context0.a(2);
            case 1:
              if (!this.currentWorkout.saved) {
                _context0.n = 2;
                break;
              }
              console.log('Workout already saved, skipping duplicate save');
              return _context0.a(2);
            case 2:
              endTime = new Date();
              duration = Math.floor((endTime - this.currentWorkout.startTime) / 60000); // 筋肉グループ名をUUIDに変換
              _context0.n = 3;
              return this.convertMuscleGroupsToUUIDs(this.currentWorkout.muscleGroups);
            case 3:
              muscleGroupUUIDs = _context0.v;
              console.log('Converted muscle groups to UUIDs:', muscleGroupUUIDs);

              // 現在のユーザーIDを取得
              _context0.n = 4;
              return _authManager.authManager.getCurrentUser();
            case 4:
              currentUser = _context0.v;
              if (currentUser) {
                _context0.n = 5;
                break;
              }
              console.error('No authenticated user found');
              (0, _helpers.showNotification)('ログインが必要です', 'error');
              return _context0.a(2);
            case 5:
              workoutData = {
                user_id: currentUser.id,
                session_name: this.currentWorkout.sessionName,
                muscle_groups_trained: muscleGroupUUIDs,
                workout_date: this.currentWorkout.startTime.toISOString(),
                total_duration_minutes: duration,
                created_at: new Date().toISOString(),
                updated_at: new Date().toISOString()
              };
              console.log('Saving workout data:', workoutData);
              _context0.p = 6;
              _context0.n = 7;
              return _workoutDataService.workoutDataService.saveWorkout(workoutData);
            case 7:
              success = _context0.v;
              if (!success) {
                _context0.n = 9;
                break;
              }
              this.currentWorkout.saved = true;
              (0, _helpers.showNotification)('ワークアウトが保存されました', 'success');
              console.log('Workout saved successfully');

              // 履歴を再読み込み
              _context0.n = 8;
              return this.loadWorkoutHistory();
            case 8:
              _context0.n = 10;
              break;
            case 9:
              throw new Error('Failed to save workout');
            case 10:
              _context0.n = 12;
              break;
            case 11:
              _context0.p = 11;
              _t6 = _context0.v;
              console.error('Failed to save workout:', _t6);
              (0, _helpers.showNotification)('ワークアウトの保存に失敗しました', 'error');
            case 12:
              return _context0.a(2);
          }
        }, _callee0, this, [[6, 11]]);
      }));
      function saveWorkoutToHistory() {
        return _saveWorkoutToHistory.apply(this, arguments);
      }
      return saveWorkoutToHistory;
    }()
    /**
     * ワークアウトタイマーを開始
     */
    )
  }, {
    key: "startWorkoutTimer",
    value: function startWorkoutTimer() {
      var _this7 = this;
      this.workoutStartTime = new Date();
      this.workoutTimer = setInterval(function () {
        _this7.updateWorkoutTimer();
      }, 1000);
    }

    /**
     * ワークアウトタイマーを更新
     */
  }, {
    key: "updateWorkoutTimer",
    value: function updateWorkoutTimer() {
      if (!this.workoutStartTime) {
        return;
      }
      var now = new Date();
      var diff = now - this.workoutStartTime;
      var minutes = Math.floor(diff / 60000);
      var seconds = Math.floor(diff % 60000 / 1000);
      var timerDisplay = document.getElementById('workout-timer');
      if (timerDisplay) {
        timerDisplay.textContent = "".concat(minutes.toString().padStart(2, '0'), ":").concat(seconds.toString().padStart(2, '0'));
      }
    }

    /**
     * デフォルトエクササイズを取得
     */
  }, {
    key: "getDefaultExercises",
    value: function getDefaultExercises() {
      return [
      // 胸筋エクササイズ
      {
        name: 'ベンチプレス',
        muscle_group: '胸',
        difficulty: 3,
        equipment: 'バーベル'
      }, {
        name: 'プッシュアップ',
        muscle_group: '胸',
        difficulty: 2,
        equipment: '自重'
      }, {
        name: 'ダンベルフライ',
        muscle_group: '胸',
        difficulty: 2,
        equipment: 'ダンベル'
      }, {
        name: 'インクラインプレス',
        muscle_group: '胸',
        difficulty: 3,
        equipment: 'バーベル'
      }, {
        name: 'ディップス',
        muscle_group: '胸',
        difficulty: 3,
        equipment: '自重'
      },
      // 背筋エクササイズ
      {
        name: 'デッドリフト',
        muscle_group: '背中',
        difficulty: 4,
        equipment: 'バーベル'
      }, {
        name: 'プルアップ',
        muscle_group: '背中',
        difficulty: 4,
        equipment: '自重'
      }, {
        name: 'ベントオーバーロウ',
        muscle_group: '背中',
        difficulty: 3,
        equipment: 'バーベル'
      }, {
        name: 'ラットプルダウン',
        muscle_group: '背中',
        difficulty: 2,
        equipment: 'マシン'
      }, {
        name: 'ワンハンドダンベルロウ',
        muscle_group: '背中',
        difficulty: 3,
        equipment: 'ダンベル'
      },
      // 脚筋エクササイズ
      {
        name: 'スクワット',
        muscle_group: '脚',
        difficulty: 3,
        equipment: 'バーベル'
      }, {
        name: 'ランジ',
        muscle_group: '脚',
        difficulty: 2,
        equipment: '自重'
      }, {
        name: 'レッグプレス',
        muscle_group: '脚',
        difficulty: 2,
        equipment: 'マシン'
      }, {
        name: 'ブルガリアンスクワット',
        muscle_group: '脚',
        difficulty: 3,
        equipment: '自重'
      }, {
        name: 'カーフレイズ',
        muscle_group: '脚',
        difficulty: 1,
        equipment: '自重'
      },
      // 肩筋エクササイズ
      {
        name: 'オーバーヘッドプレス',
        muscle_group: '肩',
        difficulty: 3,
        equipment: 'バーベル'
      }, {
        name: 'サイドレイズ',
        muscle_group: '肩',
        difficulty: 2,
        equipment: 'ダンベル'
      }, {
        name: 'フロントレイズ',
        muscle_group: '肩',
        difficulty: 2,
        equipment: 'ダンベル'
      }, {
        name: 'リアデルトフライ',
        muscle_group: '肩',
        difficulty: 2,
        equipment: 'ダンベル'
      }, {
        name: 'アーノルドプレス',
        muscle_group: '肩',
        difficulty: 3,
        equipment: 'ダンベル'
      },
      // 腕筋エクササイズ
      {
        name: 'バーベルカール',
        muscle_group: '腕',
        difficulty: 2,
        equipment: 'バーベル'
      }, {
        name: 'ダンベルカール',
        muscle_group: '腕',
        difficulty: 2,
        equipment: 'ダンベル'
      }, {
        name: 'トライセップディップス',
        muscle_group: '腕',
        difficulty: 3,
        equipment: '自重'
      }, {
        name: 'ハンマーカール',
        muscle_group: '腕',
        difficulty: 2,
        equipment: 'ダンベル'
      }, {
        name: 'クローズグリッププッシュアップ',
        muscle_group: '腕',
        difficulty: 3,
        equipment: '自重'
      },
      // 腹筋エクササイズ
      {
        name: 'プランク',
        muscle_group: '腹筋',
        difficulty: 2,
        equipment: '自重'
      }, {
        name: 'クランチ',
        muscle_group: '腹筋',
        difficulty: 1,
        equipment: '自重'
      }, {
        name: 'サイドプランク',
        muscle_group: '腹筋',
        difficulty: 2,
        equipment: '自重'
      }, {
        name: 'ロシアンツイスト',
        muscle_group: '腹筋',
        difficulty: 2,
        equipment: '自重'
      }, {
        name: 'マウンテンクライマー',
        muscle_group: '腹筋',
        difficulty: 3,
        equipment: '自重'
      }];
    }

    /**
     * ワークアウト履歴を更新
     */
  }, {
    key: "updateWorkoutHistory",
    value: function updateWorkoutHistory(workoutHistory) {
      var _this8 = this;
      var container = document.getElementById('workout-history');
      if (!container) {
        return;
      }
      console.log('Updating workout history with data:', workoutHistory);
      if (workoutHistory.length === 0) {
        container.innerHTML = "\n        <div class=\"text-center py-8 text-gray-500\">\n          <i class=\"fas fa-history text-4xl mb-4\"></i>\n          <p>\u307E\u3060\u30EF\u30FC\u30AF\u30A2\u30A6\u30C8\u304C\u8A18\u9332\u3055\u308C\u3066\u3044\u307E\u305B\u3093</p>\n        </div>\n      ";
        return;
      }
      var recentWorkouts = workoutHistory.sort(function (a, b) {
        var dateA = a.workout_date || a.startTime || a.created_at;
        var dateB = b.workout_date || b.startTime || b.created_at;
        return new Date(dateB) - new Date(dateA);
      }).slice(0, 10);
      container.innerHTML = recentWorkouts.map(function (workout) {
        // データベースの構造に応じて適切なフィールドを取得
        var sessionName = workout.session_name || workout.sessionName || 'ワークアウト';
        var muscleGroups = workout.muscle_groups_trained || workout.muscleGroups || workout.muscle_groups || [];
        var duration = workout.total_duration_minutes || workout.duration || workout.total_duration || 0;
        var workoutDate = workout.workout_date || workout.startTime || workout.created_at || workout.date;
        console.log('Processing workout:', {
          sessionName: sessionName,
          muscleGroups: muscleGroups,
          duration: duration,
          workoutDate: workoutDate
        });
        return "\n      <div class=\"flex items-center justify-between p-4 border-b border-gray-200\">\n        <div class=\"flex items-center\">\n          <div class=\"flex-shrink-0\">\n            <i class=\"fas fa-dumbbell text-blue-600\"></i>\n          </div>\n          <div class=\"ml-4\">\n            <div class=\"text-sm font-medium text-gray-900\">".concat(sessionName, "</div>\n            <div class=\"text-sm text-gray-500\">").concat(Array.isArray(muscleGroups) ? muscleGroups.join(', ') : muscleGroups || '部位不明', "</div>\n          </div>\n        </div>\n        <div class=\"text-right\">\n          <div class=\"text-sm text-gray-900\">").concat(duration, "\u5206</div>\n          <div class=\"text-sm text-gray-500\">").concat(_this8.formatDate(workoutDate), "</div>\n        </div>\n      </div>\n    ");
      }).join('');
    }

    /**
     * 日付をフォーマット
     */
  }, {
    key: "formatDate",
    value: function formatDate(dateString) {
      if (!dateString) {
        return '日付不明';
      }
      try {
        var date = new Date(dateString);
        if (isNaN(date.getTime())) {
          return '日付不明';
        }
        return date.toLocaleDateString('ja-JP');
      } catch (error) {
        console.error('Failed to format date:', dateString, error);
        return '日付不明';
      }
    }

    /**
     * ローカルストレージから読み込み
     */
  }, {
    key: "loadFromLocalStorage",
    value: function loadFromLocalStorage(key) {
      try {
        return JSON.parse(localStorage.getItem(key) || '[]');
      } catch (error) {
        console.error("Failed to load from localStorage (".concat(key, "):"), error);
        return [];
      }
    }

    /**
     * ツールチップを設定
     */
  }, {
    key: "setupTooltips",
    value: function setupTooltips() {
      try {
        console.log('Setting up tooltips for workout page');

        // 筋肉部位ボタンのツールチップ
        _TooltipManager.tooltipManager.addTooltip('.muscle-group-btn[data-muscle="胸"]', '胸筋（大胸筋）を鍛えるエクササイズ。ベンチプレス、プッシュアップなど。', {
          position: 'top',
          theme: 'primary',
          animation: 'bounce',
          arrow: true,
          delay: 200
        });
        _TooltipManager.tooltipManager.addTooltip('.muscle-group-btn[data-muscle="背中"]', '背筋群を鍛えるエクササイズ。ラットプルダウン、ローイングなど。', {
          position: 'top',
          theme: 'success',
          animation: 'slide',
          arrow: true,
          delay: 200
        });
        _TooltipManager.tooltipManager.addTooltip('.muscle-group-btn[data-muscle="肩"]', '肩（三角筋）を鍛えるエクササイズ。ショルダープレス、サイドレイズなど。', {
          position: 'top',
          theme: 'warning',
          animation: 'scale',
          arrow: true,
          delay: 200
        });
        _TooltipManager.tooltipManager.addTooltip('.muscle-group-btn[data-muscle="腕"]', '上腕二頭筋・三頭筋を鍛えるエクササイズ。アームカール、トライセップスなど。', {
          position: 'top',
          theme: 'primary',
          animation: 'fadeIn',
          arrow: true,
          delay: 200
        });
        _TooltipManager.tooltipManager.addTooltip('.muscle-group-btn[data-muscle="脚"]', '脚部（大腿四頭筋・ハムストリング）を鍛えるエクササイズ。スクワット、レッグプレスなど。', {
          position: 'top',
          theme: 'success',
          animation: 'bounce',
          arrow: true,
          delay: 200
        });
        _TooltipManager.tooltipManager.addTooltip('.muscle-group-btn[data-muscle="腹筋"]', '腹筋群を鍛えるエクササイズ。クランチ、プランクなど。', {
          position: 'top',
          theme: 'warning',
          animation: 'slide',
          arrow: true,
          delay: 200
        });

        // クイックスタートボタンのツールチップ
        _TooltipManager.tooltipManager.addTooltip('#quick-start-btn', '推奨される筋肉部位のエクササイズを自動選択してワークアウトを開始します。', {
          position: 'top',
          theme: 'primary',
          animation: 'bounce',
          arrow: true,
          delay: 300
        });

        // ワークアウト開始ボタンのツールチップ
        _TooltipManager.tooltipManager.addTooltip('#start-workout-btn', '選択したエクササイズでワークアウトを開始します。タイマーが自動で開始されます。', {
          position: 'top',
          theme: 'success',
          animation: 'scale',
          arrow: true,
          delay: 300
        });

        // ワークアウト終了ボタンのツールチップ
        _TooltipManager.tooltipManager.addTooltip('#end-workout-btn', '現在のワークアウトを終了し、結果を保存します。', {
          position: 'top',
          theme: 'error',
          animation: 'fadeIn',
          arrow: true,
          delay: 300
        });

        // エクササイズ追加ボタンのツールチップ
        _TooltipManager.tooltipManager.addTooltip('#add-exercise-btn', '新しいエクササイズをワークアウトに追加します。', {
          position: 'top',
          theme: 'primary',
          animation: 'slide',
          arrow: true,
          delay: 200
        });

        // セット追加ボタンのツールチップ
        _TooltipManager.tooltipManager.addTooltip('.add-set-btn', 'このエクササイズに新しいセットを追加します。', {
          position: 'top',
          theme: 'success',
          animation: 'scale',
          arrow: true,
          delay: 200
        });

        // セット削除ボタンのツールチップ
        _TooltipManager.tooltipManager.addTooltip('.remove-set-btn', 'このセットを削除します。', {
          position: 'top',
          theme: 'error',
          animation: 'fadeIn',
          arrow: true,
          delay: 200
        });

        // エクササイズ削除ボタンのツールチップ
        _TooltipManager.tooltipManager.addTooltip('.remove-exercise-btn', 'このエクササイズをワークアウトから削除します。', {
          position: 'top',
          theme: 'error',
          animation: 'slide',
          arrow: true,
          delay: 200
        });
        console.log('✅ Tooltips setup complete for workout page');
      } catch (error) {
        console.error('❌ Failed to setup tooltips:', error);
      }
    }
  }]);
}(_BasePage2.BasePage); // MPAInitializer用のエクスポート
var workoutPage = new WorkoutPage();
var _default = exports["default"] = {
  initialize: function () {
    var _initialize = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee1() {
      return _regenerator().w(function (_context1) {
        while (1) switch (_context1.n) {
          case 0:
            _context1.n = 1;
            return workoutPage.initialize();
          case 1:
            return _context1.a(2);
        }
      }, _callee1);
    }));
    function initialize() {
      return _initialize.apply(this, arguments);
    }
    return initialize;
  }()
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,