b75d57eca9bd82a97212478b56b6737b
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createCalendarModalHTML = createCalendarModalHTML;
exports.createErrorHTML = createErrorHTML;
exports.debounce = debounce;
exports.escapeHtml = escapeHtml;
exports.formatDate = formatDate;
exports.formatWorkoutDate = formatWorkoutDate;
exports.getDaysAgo = getDaysAgo;
exports.getMuscleBgColor = getMuscleBgColor;
exports.getMuscleColor = getMuscleColor;
exports.getMuscleTextColor = getMuscleTextColor;
exports.getWorkoutColor = getWorkoutColor;
exports.isFutureDate = isFutureDate;
exports.isPastDate = isPastDate;
exports.isTodayDate = isTodayDate;
exports.parseExercises = parseExercises;
exports.safeAsync = safeAsync;
exports.safeGetElement = safeGetElement;
exports.safeGetElements = safeGetElements;
exports.safeSetContent = safeSetContent;
exports.safeSetHTML = safeSetHTML;
exports.safeSetText = safeSetText;
exports.showInputDialog = showInputDialog;
exports.showNotification = showNotification;
exports.simulateApiDelay = simulateApiDelay;
exports.throttle = throttle;
var _constants = require("./constants.js");
var _errorHandler = require("./errorHandler.js");
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; } // helpers.js - ユーティリティ関数
/**
 * 通知を表示する
 * @param {string} message - 表示するメッセージ
 * @param {string} type - 通知タイプ (info, success, error, warning)
 */
function showNotification(message) {
  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'info';
  var container = document.getElementById('notification-container');
  if (!container) {
    return;
  }
  var notification = document.createElement('div');
  notification.className = "notification ".concat(type);
  notification.textContent = message;
  container.appendChild(notification);

  // Show notification
  setTimeout(function () {
    return notification.classList.add('show');
  }, 100);

  // Remove notification after duration
  setTimeout(function () {
    notification.classList.remove('show');
    setTimeout(function () {
      if (container.contains(notification)) {
        container.removeChild(notification);
      }
    }, _constants.NOTIFICATION_FADE_DURATION);
  }, _constants.NOTIFICATION_DURATION);
}

/**
 * 日付を日本語形式でフォーマット
 * @param {string} dateStr - 日付文字列 (YYYY-MM-DD)
 * @returns {string} フォーマットされた日付
 */
function formatWorkoutDate(dateStr) {
  var d = new Date(dateStr);
  return "".concat(d.getFullYear(), "\u5E74").concat(d.getMonth() + 1, "\u6708").concat(d.getDate(), "\u65E5");
}

/**
 * 何日前かを計算
 * @param {string} dateStr - 日付文字列
 * @returns {string} 相対日付
 */
function getDaysAgo(dateStr) {
  var d = new Date(dateStr);
  var now = new Date();
  var diff = Math.floor((now - d) / (1000 * 60 * 60 * 24));
  if (diff === 0) {
    return '今日';
  }
  if (diff === 1) {
    return '昨日';
  }
  return "".concat(diff, "\u65E5\u524D");
}

/**
 * 今日の日付かチェック
 * @param {string} dateStr - 日付文字列 (YYYY-MM-DD)
 * @returns {boolean} 今日かどうか
 */
function isTodayDate(dateStr) {
  var today = new Date();
  var y = today.getFullYear();
  var m = String(today.getMonth() + 1).padStart(2, '0');
  var d = String(today.getDate()).padStart(2, '0');
  return dateStr === "".concat(y, "-").concat(m, "-").concat(d);
}

/**
 * 日付を表示用にフォーマット
 * @param {string} dateString - 日付文字列 (YYYY-MM-DD)
 * @returns {string} フォーマットされた日付
 */
function formatDate(dateString) {
  var _dateString$split$map = dateString.split('-').map(Number),
    _dateString$split$map2 = _slicedToArray(_dateString$split$map, 3),
    year = _dateString$split$map2[0],
    month = _dateString$split$map2[1],
    day = _dateString$split$map2[2];
  var date = new Date(year, month - 1, day);
  var dayOfWeek = ['日', '月', '火', '水', '木', '金', '土'][date.getDay()];
  return "".concat(year, "\u5E74").concat(month, "\u6708").concat(day, "\u65E5 (").concat(dayOfWeek, ")");
}

/**
 * ワークアウト名から筋肉部位の色を取得
 * @param {string} workoutName - ワークアウト名
 * @returns {string} 色クラス
 */
function getWorkoutColor(workoutName) {
  if (workoutName.includes('背筋') || workoutName.includes('back')) {
    return 'back-color';
  }
  if (workoutName.includes('肩') || workoutName.includes('shoulder')) {
    return 'shoulder-color';
  }
  if (workoutName.includes('腕') || workoutName.includes('arm')) {
    return 'arm-color';
  }
  if (workoutName.includes('脚') || workoutName.includes('leg')) {
    return 'leg-color';
  }
  if (workoutName.includes('体幹') || workoutName.includes('core')) {
    return 'core-color';
  }
  return 'chest-color';
}

/**
 * 筋肉部位IDから色クラスを取得
 * @param {string} muscleId - 筋肉部位ID
 * @returns {string} 色クラス
 */
function getMuscleColor(muscleId) {
  var colorMap = {
    chest: 'chest-color',
    back: 'back-color',
    shoulders: 'shoulder-color',
    arms: 'arm-color',
    legs: 'leg-color',
    abs: 'core-color'
  };
  return colorMap[muscleId] || 'chest-color';
}

/**
 * 筋肉部位IDから背景色クラスを取得
 * @param {string} muscleId - 筋肉部位ID
 * @returns {string} 背景色クラス
 */
function getMuscleBgColor(muscleId) {
  var bgColorMap = {
    chest: 'bg-red-100',
    back: 'bg-green-100',
    shoulder: 'bg-yellow-100',
    arm: 'bg-purple-100',
    leg: 'bg-blue-100',
    core: 'bg-pink-100'
  };
  return bgColorMap[muscleId] || 'bg-red-100';
}

/**
 * 筋肉部位IDからテキスト色クラスを取得
 * @param {string} muscleId - 筋肉部位ID
 * @returns {string} テキスト色クラス
 */
function getMuscleTextColor(muscleId) {
  var textColorMap = {
    chest: 'text-red-700',
    back: 'text-green-700',
    shoulder: 'text-yellow-700',
    arm: 'text-purple-700',
    leg: 'text-blue-700',
    core: 'text-pink-700'
  };
  return textColorMap[muscleId] || 'text-red-700';
}

/**
 * エクササイズ配列を安全にパース
 * @param {string} exercisesStr - JSON文字列
 * @returns {Array} エクササイズ配列
 */
function parseExercises(exercisesStr) {
  try {
    var exercises = JSON.parse(exercisesStr || '[]');
    return Array.isArray(exercises) ? exercises : [];
  } catch (_unused) {
    return [];
  }
}

/**
 * API遅延をシミュレート
 * @param {number} ms - 遅延時間（ミリ秒）
 * @returns {Promise} プロミス
 */
function simulateApiDelay() {
  var ms = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 500;
  return new Promise(function (resolve) {
    return setTimeout(resolve, ms);
  });
}

/**
 * 安全にDOMエレメントを取得
 * @param {string} selector - セレクター（ID、クラス、要素名など）
 * @param {Element|Document} context - 検索コンテキスト（デフォルト: document）
 * @returns {Element|null} DOMエレメント
 */
function safeGetElement(selector) {
  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;
  try {
    return selector.startsWith('#') ? context.getElementById(selector.slice(1)) : context.querySelector(selector);
  } catch (error) {
    console.warn("Invalid selector: ".concat(selector), error);
    return null;
  }
}

/**
 * 安全に複数のDOMエレメントを取得
 * @param {string} selector - セレクター
 * @param {Element|Document} context - 検索コンテキスト（デフォルト: document）
 * @returns {Array<Element>} DOMエレメントの配列
 */
function safeGetElements(selector) {
  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;
  try {
    return Array.from(context.querySelectorAll(selector));
  } catch (error) {
    console.warn("Invalid selector: ".concat(selector), error);
    return [];
  }
}

/**
 * 安全にDOMエレメントのテキストを設定
 * @param {string|Element} target - エレメントIDまたはエレメント
 * @param {string} text - 設定するテキスト
 * @param {Element|Document} context - 検索コンテキスト
 */
function safeSetText(target, text) {
  var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;
  var element = typeof target === 'string' ? safeGetElement(target, context) : target;
  if (element) {
    element.textContent = text;
  }
}

/**
 * HTMLエスケープ処理
 * @param {string} str - エスケープする文字列
 * @returns {string} エスケープされた文字列
 */
function escapeHtml(str) {
  if (typeof str !== 'string') {
    return String(str);
  }
  var escapeMap = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#x27;',
    '/': '&#x2F;',
    '`': '&#x60;',
    '=': '&#x3D;'
  };
  return str.replace(/[&<>"'`=/]/g, function (match) {
    return escapeMap[match];
  });
}

/**
 * 安全にDOMエレメントのHTMLを設定（XSS対策付き）
 * @param {string|Element} target - エレメントIDまたはエレメント
 * @param {string} html - 設定するHTML
 * @param {Element|Document} context - 検索コンテキスト
 * @param {boolean} escapeContent - HTMLエスケープするかどうか（デフォルト: false）
 */
function safeSetHTML(target, html) {
  var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;
  var escapeContent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  var element = typeof target === 'string' ? safeGetElement(target, context) : target;
  if (element) {
    element.innerHTML = escapeContent ? escapeHtml(html) : html;
  }
}

/**
 * 安全にテキストコンテンツを設定（XSS対策）
 * @param {string|Element} target - エレメントIDまたはエレメント
 * @param {string} content - 設定するコンテンツ
 * @param {Element|Document} context - 検索コンテキスト
 */
function safeSetContent(target, content) {
  var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;
  var element = typeof target === 'string' ? safeGetElement(target, context) : target;
  if (element) {
    // textContentを使用してXSSを防ぐ
    element.textContent = content;
  }
}

/**
 * エラーメッセージ用のHTMLを生成
 * @param {string} message - エラーメッセージ
 * @param {string} icon - アイコンクラス
 * @returns {string} エラーHTML
 */
function createErrorHTML(message) {
  var icon = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'fas fa-exclamation-triangle';
  return "\n        <div class=\"text-center text-gray-500 py-8\">\n            <i class=\"".concat(icon, " text-xl mb-2\"></i>\n            <p>").concat(message, "</p>\n        </div>\n    ");
}

// 非推奨のhandleError関数は削除されました。
// 代わりにerrorHandler.jsのhandleError関数を使用してください。

/**
 * 非同期関数を安全に実行
 * @param {Function} asyncFn - 非同期関数
 * @param {string} context - エラーコンテキスト
 * @param {*} fallbackValue - エラー時のフォールバック値
 * @returns {Promise<*>} 実行結果またはフォールバック値
 */
function safeAsync(_x) {
  return _safeAsync.apply(this, arguments);
}
/**
 * デバウンス関数
 * @param {Function} func - 実行する関数
 * @param {number} wait - 待機時間（ミリ秒）
 * @returns {Function} デバウンスされた関数
 */
function _safeAsync() {
  _safeAsync = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee(asyncFn) {
    var context,
      fallbackValue,
      _args = arguments,
      _t;
    return _regenerator().w(function (_context) {
      while (1) switch (_context.p = _context.n) {
        case 0:
          context = _args.length > 1 && _args[1] !== undefined ? _args[1] : 'Async operation';
          fallbackValue = _args.length > 2 && _args[2] !== undefined ? _args[2] : null;
          _context.p = 1;
          _context.n = 2;
          return asyncFn();
        case 2:
          return _context.a(2, _context.v);
        case 3:
          _context.p = 3;
          _t = _context.v;
          (0, _errorHandler.handleError)(_t, {
            context: context
          });
          return _context.a(2, fallbackValue);
      }
    }, _callee, null, [[1, 3]]);
  }));
  return _safeAsync.apply(this, arguments);
}
function debounce(func, wait) {
  var timeout;
  return function executedFunction() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var later = function later() {
      clearTimeout(timeout);
      func.apply(void 0, args);
    };
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
  };
}

/**
 * カスタム入力ダイアログを表示
 * @param {string} message - 入力メッセージ
 * @param {string} defaultValue - デフォルト値
 * @returns {Promise<string|null>} 入力値またはnull
 */
function showInputDialog(message) {
  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  return new Promise(function (resolve) {
    // カスタム入力ダイアログを作成
    var dialog = document.createElement('div');
    dialog.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50';
    dialog.innerHTML = "\n            <div class=\"bg-white rounded-lg p-6 max-w-md mx-4 w-full\">\n                <div class=\"flex items-center mb-4\">\n                    <i class=\"fas fa-edit text-blue-500 text-xl mr-3\"></i>\n                    <h3 class=\"text-lg font-semibold text-gray-900\">\u5165\u529B</h3>\n                </div>\n                <p class=\"text-gray-700 mb-4\">".concat(message, "</p>\n                <input type=\"text\" \n                       class=\"input-field w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent mb-6\" \n                       value=\"").concat(defaultValue, "\" \n                       placeholder=\"\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044\">\n                <div class=\"flex justify-end space-x-3\">\n                    <button class=\"cancel-btn px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50\">\n                        \u30AD\u30E3\u30F3\u30BB\u30EB\n                    </button>\n                    <button class=\"ok-btn px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\">\n                        OK\n                    </button>\n                </div>\n            </div>\n        ");
    document.body.appendChild(dialog);
    var inputField = dialog.querySelector('.input-field');
    var cancelBtn = dialog.querySelector('.cancel-btn');
    var okBtn = dialog.querySelector('.ok-btn');

    // フォーカスを設定
    inputField.focus();
    inputField.select();
    var cleanup = function cleanup() {
      document.body.removeChild(dialog);
    };
    var handleOk = function handleOk() {
      var value = inputField.value.trim();
      cleanup();
      resolve(value || null);
    };
    var handleCancel = function handleCancel() {
      cleanup();
      resolve(null);
    };

    // イベントリスナー
    cancelBtn.addEventListener('click', handleCancel);
    okBtn.addEventListener('click', handleOk);

    // Enterキーで確定、ESCキーでキャンセル
    inputField.addEventListener('keydown', function (e) {
      if (e.key === 'Enter') {
        handleOk();
      } else if (e.key === 'Escape') {
        handleCancel();
      }
    });

    // ESCキーでキャンセル
    var _handleKeydown = function handleKeydown(e) {
      if (e.key === 'Escape') {
        handleCancel();
        document.removeEventListener('keydown', _handleKeydown);
      }
    };
    document.addEventListener('keydown', _handleKeydown);

    // 背景クリックでキャンセル
    dialog.addEventListener('click', function (e) {
      if (e.target === dialog) {
        handleCancel();
      }
    });
  });
}

/**
 * スロットル関数
 * @param {Function} func - 実行する関数
 * @param {number} limit - 制限時間（ミリ秒）
 * @returns {Function} スロットルされた関数
 */
function throttle(func, limit) {
  var inThrottle;
  return function executedFunction() {
    if (!inThrottle) {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      func.apply(this, args);
      inThrottle = true;
      setTimeout(function () {
        return inThrottle = false;
      }, limit);
    }
  };
}

/**
 * 日付が未来かどうかをチェック
 * @param {string} dateStr - 日付文字列 (YYYY-MM-DD)
 * @returns {boolean} 未来の日付かどうか
 */
function isFutureDate(dateStr) {
  var today = new Date();
  var targetDate = new Date(dateStr);
  today.setHours(0, 0, 0, 0);
  targetDate.setHours(0, 0, 0, 0);
  return targetDate > today;
}

/**
 * 日付が過去かどうかをチェック
 * @param {string} dateStr - 日付文字列 (YYYY-MM-DD)
 * @returns {boolean} 過去の日付かどうか
 */
function isPastDate(dateStr) {
  var today = new Date();
  var targetDate = new Date(dateStr);
  today.setHours(0, 0, 0, 0);
  targetDate.setHours(0, 0, 0, 0);
  return targetDate < today;
}

/**
 * カレンダー用の詳細モーダルHTMLを生成
 * @param {string} dateStr - 日付文字列
 * @param {Array} workouts - ワークアウト配列
 * @param {Array} plannedWorkouts - 予定されたワークアウト配列
 * @returns {string} モーダルHTML
 */
function createCalendarModalHTML(dateStr, workouts) {
  var plannedWorkouts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  var formattedDate = formatDate(dateStr);
  var isToday = isTodayDate(dateStr);
  var isFuture = isFutureDate(dateStr);
  var content = '';

  // 実際のワークアウト履歴
  if (workouts.length > 0) {
    content += "\n            <div class=\"mb-6\">\n                <h4 class=\"text-lg font-semibold text-gray-800 mb-3 flex items-center\">\n                    <i class=\"fas fa-dumbbell text-green-500 mr-2\"></i>\n                    \u5B9F\u65BD\u3057\u305F\u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\n                </h4>\n                <div class=\"space-y-3\">\n                    ".concat(workouts.map(function (workout) {
      return "\n                        <div class=\"bg-gray-50 rounded-lg p-4 border-l-4 border-green-500\">\n                            <div class=\"flex items-center justify-between mb-2\">\n                                <h5 class=\"font-semibold text-gray-800\">\n                                    ".concat(escapeHtml(workout.name || 'ワークアウト'), "\n                                </h5>\n                                <span class=\"text-sm text-gray-500\">\n                                    ").concat(workout.duration ? "".concat(Math.floor(workout.duration / 60), "\u5206") : '', "\n                                </span>\n                            </div>\n                            <div class=\"text-sm text-gray-600 mb-2\">\n                                <i class=\"fas fa-bullseye text-blue-500 mr-1\"></i>\n                                \u90E8\u4F4D: ").concat(Array.isArray(workout.muscle_groups) ? workout.muscle_groups.join(', ') : workout.muscle_groups || '部位不明', "\n                            </div>\n                            ").concat(workout.exercises && workout.exercises.length > 0 ? "\n                                <div class=\"text-sm text-gray-600\">\n                                    <i class=\"fas fa-list text-purple-500 mr-1\"></i>\n                                    \u7A2E\u76EE: ".concat(workout.exercises.map(function (ex) {
        return ex.name;
      }).join(', '), "\n                                </div>\n                            ") : '', "\n                            ").concat(workout.notes ? "\n                                <div class=\"text-sm text-gray-600 mt-2 italic\">\n                                    <i class=\"fas fa-sticky-note text-yellow-500 mr-1\"></i>\n                                    ".concat(escapeHtml(workout.notes), "\n                                </div>\n                            ") : '', "\n                        </div>\n                    ");
    }).join(''), "\n                </div>\n            </div>\n        ");
  }

  // 予定されたワークアウト
  if (plannedWorkouts.length > 0) {
    content += "\n            <div class=\"mb-6\">\n                <h4 class=\"text-lg font-semibold text-gray-800 mb-3 flex items-center\">\n                    <i class=\"fas fa-calendar-check text-blue-500 mr-2\"></i>\n                    \u4E88\u5B9A\u3055\u308C\u305F\u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\n                </h4>\n                <div class=\"space-y-3\">\n                    ".concat(plannedWorkouts.map(function (workout) {
      return "\n                        <div class=\"bg-blue-50 rounded-lg p-4 border-l-4 border-blue-500\">\n                            <div class=\"flex items-center justify-between mb-2\">\n                                <h5 class=\"font-semibold text-gray-800\">\n                                    ".concat(escapeHtml(workout.name || 'ワークアウト'), "\n                                </h5>\n                                <span class=\"text-sm text-blue-600 font-medium\">\n                                    \u4E88\u5B9A\n                                </span>\n                            </div>\n                            <div class=\"text-sm text-gray-600\">\n                                <i class=\"fas fa-bullseye text-blue-500 mr-1\"></i>\n                                \u90E8\u4F4D: ").concat(Array.isArray(workout.muscle_groups) ? workout.muscle_groups.join(', ') : workout.muscle_groups || '部位不明', "\n                            </div>\n                        </div>\n                    ");
    }).join(''), "\n                </div>\n            </div>\n        ");
  }

  // 何もない場合
  if (workouts.length === 0 && plannedWorkouts.length === 0) {
    if (isFuture) {
      content = "\n                <div class=\"text-center text-gray-500 py-8\">\n                    <i class=\"fas fa-calendar-plus text-4xl mb-4 text-gray-300\"></i>\n                    <p class=\"text-lg mb-2\">\u3053\u306E\u65E5\u306F\u307E\u3060\u4E88\u5B9A\u304C\u3042\u308A\u307E\u305B\u3093</p>\n                    <p class=\"text-sm\">\u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u4E88\u5B9A\u3092\u8FFD\u52A0\u3057\u3066\u307F\u307E\u3057\u3087\u3046</p>\n                </div>\n            ";
    } else {
      content = "\n                <div class=\"text-center text-gray-500 py-8\">\n                    <i class=\"fas fa-info-circle text-4xl mb-4 text-gray-300\"></i>\n                    <p class=\"text-lg mb-2\">\u3053\u306E\u65E5\u306F\u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u3092\u884C\u3063\u3066\u3044\u307E\u305B\u3093</p>\n                    <p class=\"text-sm\">\u4F11\u606F\u65E5\u3068\u3057\u3066\u904E\u3054\u3055\u308C\u307E\u3057\u305F</p>\n                </div>\n            ";
    }
  }
  return "\n        <div class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\" id=\"calendar-modal\">\n            <div class=\"bg-white rounded-lg max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n                <div class=\"sticky top-0 bg-white border-b border-gray-200 px-6 py-4 flex items-center justify-between\">\n                    <h3 class=\"text-xl font-bold text-gray-800 flex items-center\">\n                        <i class=\"fas fa-calendar-day text-blue-500 mr-2\"></i>\n                        ".concat(formattedDate, "\n                        ").concat(isToday ? '<span class="ml-2 px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full">今日</span>' : '', "\n                        ").concat(isFuture ? '<span class="ml-2 px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full">未来</span>' : '', "\n                    </h3>\n                    <button class=\"text-gray-400 hover:text-gray-600 text-xl\" onclick=\"document.getElementById('calendar-modal').remove()\">\n                        <i class=\"fas fa-times\"></i>\n                    </button>\n                </div>\n                <div class=\"px-6 py-4\">\n                    ").concat(content, "\n                </div>\n                <div class=\"sticky bottom-0 bg-gray-50 border-t border-gray-200 px-6 py-4\">\n                    <div class=\"flex justify-end space-x-3\">\n                        ").concat(isFuture ? "\n                            <button class=\"px-4 py-2 bg-blue-500 text-white rounded-lg \n                                           hover:bg-blue-600 transition-colors\" \n                                    onclick=\"addPlannedWorkout('".concat(dateStr, "')\">\n                                <i class=\"fas fa-plus mr-2\"></i>\n                                \u4E88\u5B9A\u3092\u8FFD\u52A0\n                            </button>\n                        ") : '', "\n                        <button class=\"px-4 py-2 bg-gray-500 text-white rounded-lg \n                                       hover:bg-gray-600 transition-colors\" \n                                onclick=\"document.getElementById('calendar-modal').remove()\">\n                            \u9589\u3058\u308B\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    ");
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY29uc3RhbnRzIiwicmVxdWlyZSIsIl9lcnJvckhhbmRsZXIiLCJfcmVnZW5lcmF0b3IiLCJlIiwidCIsInIiLCJTeW1ib2wiLCJuIiwiaXRlcmF0b3IiLCJvIiwidG9TdHJpbmdUYWciLCJpIiwiYyIsInByb3RvdHlwZSIsIkdlbmVyYXRvciIsInUiLCJPYmplY3QiLCJjcmVhdGUiLCJfcmVnZW5lcmF0b3JEZWZpbmUyIiwiZiIsInAiLCJ5IiwiRyIsInYiLCJhIiwiZCIsImJpbmQiLCJsZW5ndGgiLCJsIiwiVHlwZUVycm9yIiwiY2FsbCIsImRvbmUiLCJ2YWx1ZSIsIkdlbmVyYXRvckZ1bmN0aW9uIiwiR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUiLCJnZXRQcm90b3R5cGVPZiIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiZGlzcGxheU5hbWUiLCJ3IiwibSIsImRlZmluZVByb3BlcnR5IiwiX3JlZ2VuZXJhdG9yRGVmaW5lIiwiX2ludm9rZSIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsImFzeW5jR2VuZXJhdG9yU3RlcCIsIlByb21pc2UiLCJyZXNvbHZlIiwidGhlbiIsIl9hc3luY1RvR2VuZXJhdG9yIiwiYXJndW1lbnRzIiwiYXBwbHkiLCJfbmV4dCIsIl90aHJvdyIsIl9zbGljZWRUb0FycmF5IiwiX2FycmF5V2l0aEhvbGVzIiwiX2l0ZXJhYmxlVG9BcnJheUxpbWl0IiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwiX25vbkl0ZXJhYmxlUmVzdCIsIl9hcnJheUxpa2VUb0FycmF5IiwidG9TdHJpbmciLCJzbGljZSIsImNvbnN0cnVjdG9yIiwibmFtZSIsIkFycmF5IiwiZnJvbSIsInRlc3QiLCJuZXh0IiwicHVzaCIsImlzQXJyYXkiLCJzaG93Tm90aWZpY2F0aW9uIiwibWVzc2FnZSIsInR5cGUiLCJ1bmRlZmluZWQiLCJjb250YWluZXIiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwibm90aWZpY2F0aW9uIiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTmFtZSIsImNvbmNhdCIsInRleHRDb250ZW50IiwiYXBwZW5kQ2hpbGQiLCJzZXRUaW1lb3V0IiwiY2xhc3NMaXN0IiwiYWRkIiwicmVtb3ZlIiwiY29udGFpbnMiLCJyZW1vdmVDaGlsZCIsIk5PVElGSUNBVElPTl9GQURFX0RVUkFUSU9OIiwiTk9USUZJQ0FUSU9OX0RVUkFUSU9OIiwiZm9ybWF0V29ya291dERhdGUiLCJkYXRlU3RyIiwiRGF0ZSIsImdldEZ1bGxZZWFyIiwiZ2V0TW9udGgiLCJnZXREYXRlIiwiZ2V0RGF5c0FnbyIsIm5vdyIsImRpZmYiLCJNYXRoIiwiZmxvb3IiLCJpc1RvZGF5RGF0ZSIsInRvZGF5IiwiU3RyaW5nIiwicGFkU3RhcnQiLCJmb3JtYXREYXRlIiwiZGF0ZVN0cmluZyIsIl9kYXRlU3RyaW5nJHNwbGl0JG1hcCIsInNwbGl0IiwibWFwIiwiTnVtYmVyIiwiX2RhdGVTdHJpbmckc3BsaXQkbWFwMiIsInllYXIiLCJtb250aCIsImRheSIsImRhdGUiLCJkYXlPZldlZWsiLCJnZXREYXkiLCJnZXRXb3Jrb3V0Q29sb3IiLCJ3b3Jrb3V0TmFtZSIsImluY2x1ZGVzIiwiZ2V0TXVzY2xlQ29sb3IiLCJtdXNjbGVJZCIsImNvbG9yTWFwIiwiY2hlc3QiLCJiYWNrIiwic2hvdWxkZXJzIiwiYXJtcyIsImxlZ3MiLCJhYnMiLCJnZXRNdXNjbGVCZ0NvbG9yIiwiYmdDb2xvck1hcCIsInNob3VsZGVyIiwiYXJtIiwibGVnIiwiY29yZSIsImdldE11c2NsZVRleHRDb2xvciIsInRleHRDb2xvck1hcCIsInBhcnNlRXhlcmNpc2VzIiwiZXhlcmNpc2VzU3RyIiwiZXhlcmNpc2VzIiwiSlNPTiIsInBhcnNlIiwiX3VudXNlZCIsInNpbXVsYXRlQXBpRGVsYXkiLCJtcyIsInNhZmVHZXRFbGVtZW50Iiwic2VsZWN0b3IiLCJjb250ZXh0Iiwic3RhcnRzV2l0aCIsInF1ZXJ5U2VsZWN0b3IiLCJlcnJvciIsImNvbnNvbGUiLCJ3YXJuIiwic2FmZUdldEVsZW1lbnRzIiwicXVlcnlTZWxlY3RvckFsbCIsInNhZmVTZXRUZXh0IiwidGFyZ2V0IiwidGV4dCIsImVsZW1lbnQiLCJlc2NhcGVIdG1sIiwic3RyIiwiZXNjYXBlTWFwIiwicmVwbGFjZSIsIm1hdGNoIiwic2FmZVNldEhUTUwiLCJodG1sIiwiZXNjYXBlQ29udGVudCIsImlubmVySFRNTCIsInNhZmVTZXRDb250ZW50IiwiY29udGVudCIsImNyZWF0ZUVycm9ySFRNTCIsImljb24iLCJzYWZlQXN5bmMiLCJfeCIsIl9zYWZlQXN5bmMiLCJfY2FsbGVlIiwiYXN5bmNGbiIsImZhbGxiYWNrVmFsdWUiLCJfYXJncyIsIl90IiwiX2NvbnRleHQiLCJoYW5kbGVFcnJvciIsImRlYm91bmNlIiwiZnVuYyIsIndhaXQiLCJ0aW1lb3V0IiwiZXhlY3V0ZWRGdW5jdGlvbiIsIl9sZW4iLCJhcmdzIiwiX2tleSIsImxhdGVyIiwiY2xlYXJUaW1lb3V0Iiwic2hvd0lucHV0RGlhbG9nIiwiZGVmYXVsdFZhbHVlIiwiZGlhbG9nIiwiYm9keSIsImlucHV0RmllbGQiLCJjYW5jZWxCdG4iLCJva0J0biIsImZvY3VzIiwic2VsZWN0IiwiY2xlYW51cCIsImhhbmRsZU9rIiwidHJpbSIsImhhbmRsZUNhbmNlbCIsImFkZEV2ZW50TGlzdGVuZXIiLCJrZXkiLCJoYW5kbGVLZXlkb3duIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInRocm90dGxlIiwibGltaXQiLCJpblRocm90dGxlIiwiX2xlbjIiLCJfa2V5MiIsImlzRnV0dXJlRGF0ZSIsInRhcmdldERhdGUiLCJzZXRIb3VycyIsImlzUGFzdERhdGUiLCJjcmVhdGVDYWxlbmRhck1vZGFsSFRNTCIsIndvcmtvdXRzIiwicGxhbm5lZFdvcmtvdXRzIiwiZm9ybWF0dGVkRGF0ZSIsImlzVG9kYXkiLCJpc0Z1dHVyZSIsIndvcmtvdXQiLCJkdXJhdGlvbiIsIm11c2NsZV9ncm91cHMiLCJqb2luIiwiZXgiLCJub3RlcyJdLCJzb3VyY2VzIjpbImhlbHBlcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaGVscGVycy5qcyAtIOODpuODvOODhuOCo+ODquODhuOCo+mWouaVsFxuXG5pbXBvcnQge1xuICBOT1RJRklDQVRJT05fRFVSQVRJT04sXG4gIE5PVElGSUNBVElPTl9GQURFX0RVUkFUSU9OLFxufSBmcm9tICcuL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBoYW5kbGVFcnJvciB9IGZyb20gJy4vZXJyb3JIYW5kbGVyLmpzJztcblxuLyoqXG4gKiDpgJrnn6XjgpLooajnpLrjgZnjgotcbiAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIC0g6KGo56S644GZ44KL44Oh44OD44K744O844K4XG4gKiBAcGFyYW0ge3N0cmluZ30gdHlwZSAtIOmAmuefpeOCv+OCpOODlyAoaW5mbywgc3VjY2VzcywgZXJyb3IsIHdhcm5pbmcpXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzaG93Tm90aWZpY2F0aW9uKG1lc3NhZ2UsIHR5cGUgPSAnaW5mbycpIHtcbiAgY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25vdGlmaWNhdGlvbi1jb250YWluZXInKTtcbiAgaWYgKCFjb250YWluZXIpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCBub3RpZmljYXRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgbm90aWZpY2F0aW9uLmNsYXNzTmFtZSA9IGBub3RpZmljYXRpb24gJHt0eXBlfWA7XG4gIG5vdGlmaWNhdGlvbi50ZXh0Q29udGVudCA9IG1lc3NhZ2U7XG5cbiAgY29udGFpbmVyLmFwcGVuZENoaWxkKG5vdGlmaWNhdGlvbik7XG5cbiAgLy8gU2hvdyBub3RpZmljYXRpb25cbiAgc2V0VGltZW91dCgoKSA9PiBub3RpZmljYXRpb24uY2xhc3NMaXN0LmFkZCgnc2hvdycpLCAxMDApO1xuXG4gIC8vIFJlbW92ZSBub3RpZmljYXRpb24gYWZ0ZXIgZHVyYXRpb25cbiAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgbm90aWZpY2F0aW9uLmNsYXNzTGlzdC5yZW1vdmUoJ3Nob3cnKTtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGlmIChjb250YWluZXIuY29udGFpbnMobm90aWZpY2F0aW9uKSkge1xuICAgICAgICBjb250YWluZXIucmVtb3ZlQ2hpbGQobm90aWZpY2F0aW9uKTtcbiAgICAgIH1cbiAgICB9LCBOT1RJRklDQVRJT05fRkFERV9EVVJBVElPTik7XG4gIH0sIE5PVElGSUNBVElPTl9EVVJBVElPTik7XG59XG5cbi8qKlxuICog5pel5LuY44KS5pel5pys6Kqe5b2i5byP44Gn44OV44Kp44O844Oe44OD44OIXG4gKiBAcGFyYW0ge3N0cmluZ30gZGF0ZVN0ciAtIOaXpeS7mOaWh+Wtl+WIlyAoWVlZWS1NTS1ERClcbiAqIEByZXR1cm5zIHtzdHJpbmd9IOODleOCqeODvOODnuODg+ODiOOBleOCjOOBn+aXpeS7mFxuICovXG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0V29ya291dERhdGUoZGF0ZVN0cikge1xuICBjb25zdCBkID0gbmV3IERhdGUoZGF0ZVN0cik7XG4gIHJldHVybiBgJHtkLmdldEZ1bGxZZWFyKCl95bm0JHtkLmdldE1vbnRoKCkgKyAxfeaciCR7ZC5nZXREYXRlKCl95pelYDtcbn1cblxuLyoqXG4gKiDkvZXml6XliY3jgYvjgpLoqIjnrpdcbiAqIEBwYXJhbSB7c3RyaW5nfSBkYXRlU3RyIC0g5pel5LuY5paH5a2X5YiXXG4gKiBAcmV0dXJucyB7c3RyaW5nfSDnm7jlr77ml6Xku5hcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldERheXNBZ28oZGF0ZVN0cikge1xuICBjb25zdCBkID0gbmV3IERhdGUoZGF0ZVN0cik7XG4gIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCk7XG4gIGNvbnN0IGRpZmYgPSBNYXRoLmZsb29yKChub3cgLSBkKSAvICgxMDAwICogNjAgKiA2MCAqIDI0KSk7XG4gIGlmIChkaWZmID09PSAwKSB7XG4gICAgcmV0dXJuICfku4rml6UnO1xuICB9XG4gIGlmIChkaWZmID09PSAxKSB7XG4gICAgcmV0dXJuICfmmKjml6UnO1xuICB9XG4gIHJldHVybiBgJHtkaWZmfeaXpeWJjWA7XG59XG5cbi8qKlxuICog5LuK5pel44Gu5pel5LuY44GL44OB44Kn44OD44KvXG4gKiBAcGFyYW0ge3N0cmluZ30gZGF0ZVN0ciAtIOaXpeS7mOaWh+Wtl+WIlyAoWVlZWS1NTS1ERClcbiAqIEByZXR1cm5zIHtib29sZWFufSDku4rml6XjgYvjganjgYbjgYtcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzVG9kYXlEYXRlKGRhdGVTdHIpIHtcbiAgY29uc3QgdG9kYXkgPSBuZXcgRGF0ZSgpO1xuICBjb25zdCB5ID0gdG9kYXkuZ2V0RnVsbFllYXIoKTtcbiAgY29uc3QgbSA9IFN0cmluZyh0b2RheS5nZXRNb250aCgpICsgMSkucGFkU3RhcnQoMiwgJzAnKTtcbiAgY29uc3QgZCA9IFN0cmluZyh0b2RheS5nZXREYXRlKCkpLnBhZFN0YXJ0KDIsICcwJyk7XG4gIHJldHVybiBkYXRlU3RyID09PSBgJHt5fS0ke219LSR7ZH1gO1xufVxuXG4vKipcbiAqIOaXpeS7mOOCkuihqOekuueUqOOBq+ODleOCqeODvOODnuODg+ODiFxuICogQHBhcmFtIHtzdHJpbmd9IGRhdGVTdHJpbmcgLSDml6Xku5jmloflrZfliJcgKFlZWVktTU0tREQpXG4gKiBAcmV0dXJucyB7c3RyaW5nfSDjg5Xjgqnjg7zjg57jg4Pjg4jjgZXjgozjgZ/ml6Xku5hcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdERhdGUoZGF0ZVN0cmluZykge1xuICBjb25zdCBbeWVhciwgbW9udGgsIGRheV0gPSBkYXRlU3RyaW5nLnNwbGl0KCctJykubWFwKE51bWJlcik7XG4gIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSh5ZWFyLCBtb250aCAtIDEsIGRheSk7XG4gIGNvbnN0IGRheU9mV2VlayA9IFsn5pelJywgJ+aciCcsICfngasnLCAn5rC0JywgJ+acqCcsICfph5EnLCAn5ZyfJ11bZGF0ZS5nZXREYXkoKV07XG4gIHJldHVybiBgJHt5ZWFyfeW5tCR7bW9udGh95pyIJHtkYXl95pelICgke2RheU9mV2Vla30pYDtcbn1cblxuLyoqXG4gKiDjg6/jg7zjgq/jgqLjgqbjg4jlkI3jgYvjgonnrYvogonpg6jkvY3jga7oibLjgpLlj5blvpdcbiAqIEBwYXJhbSB7c3RyaW5nfSB3b3Jrb3V0TmFtZSAtIOODr+ODvOOCr+OCouOCpuODiOWQjVxuICogQHJldHVybnMge3N0cmluZ30g6Imy44Kv44Op44K5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRXb3Jrb3V0Q29sb3Iod29ya291dE5hbWUpIHtcbiAgaWYgKHdvcmtvdXROYW1lLmluY2x1ZGVzKCfog4znrYsnKSB8fCB3b3Jrb3V0TmFtZS5pbmNsdWRlcygnYmFjaycpKSB7XG4gICAgcmV0dXJuICdiYWNrLWNvbG9yJztcbiAgfVxuICBpZiAod29ya291dE5hbWUuaW5jbHVkZXMoJ+iCqScpIHx8IHdvcmtvdXROYW1lLmluY2x1ZGVzKCdzaG91bGRlcicpKSB7XG4gICAgcmV0dXJuICdzaG91bGRlci1jb2xvcic7XG4gIH1cbiAgaWYgKHdvcmtvdXROYW1lLmluY2x1ZGVzKCfohZUnKSB8fCB3b3Jrb3V0TmFtZS5pbmNsdWRlcygnYXJtJykpIHtcbiAgICByZXR1cm4gJ2FybS1jb2xvcic7XG4gIH1cbiAgaWYgKHdvcmtvdXROYW1lLmluY2x1ZGVzKCfohJonKSB8fCB3b3Jrb3V0TmFtZS5pbmNsdWRlcygnbGVnJykpIHtcbiAgICByZXR1cm4gJ2xlZy1jb2xvcic7XG4gIH1cbiAgaWYgKHdvcmtvdXROYW1lLmluY2x1ZGVzKCfkvZPlubknKSB8fCB3b3Jrb3V0TmFtZS5pbmNsdWRlcygnY29yZScpKSB7XG4gICAgcmV0dXJuICdjb3JlLWNvbG9yJztcbiAgfVxuICByZXR1cm4gJ2NoZXN0LWNvbG9yJztcbn1cblxuLyoqXG4gKiDnrYvogonpg6jkvY1JROOBi+OCieiJsuOCr+ODqeOCueOCkuWPluW+l1xuICogQHBhcmFtIHtzdHJpbmd9IG11c2NsZUlkIC0g562L6IKJ6YOo5L2NSURcbiAqIEByZXR1cm5zIHtzdHJpbmd9IOiJsuOCr+ODqeOCuVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0TXVzY2xlQ29sb3IobXVzY2xlSWQpIHtcbiAgY29uc3QgY29sb3JNYXAgPSB7XG4gICAgY2hlc3Q6ICdjaGVzdC1jb2xvcicsXG4gICAgYmFjazogJ2JhY2stY29sb3InLFxuICAgIHNob3VsZGVyczogJ3Nob3VsZGVyLWNvbG9yJyxcbiAgICBhcm1zOiAnYXJtLWNvbG9yJyxcbiAgICBsZWdzOiAnbGVnLWNvbG9yJyxcbiAgICBhYnM6ICdjb3JlLWNvbG9yJyxcbiAgfTtcbiAgcmV0dXJuIGNvbG9yTWFwW211c2NsZUlkXSB8fCAnY2hlc3QtY29sb3InO1xufVxuXG4vKipcbiAqIOeti+iCiemDqOS9jUlE44GL44KJ6IOM5pmv6Imy44Kv44Op44K544KS5Y+W5b6XXG4gKiBAcGFyYW0ge3N0cmluZ30gbXVzY2xlSWQgLSDnrYvogonpg6jkvY1JRFxuICogQHJldHVybnMge3N0cmluZ30g6IOM5pmv6Imy44Kv44Op44K5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRNdXNjbGVCZ0NvbG9yKG11c2NsZUlkKSB7XG4gIGNvbnN0IGJnQ29sb3JNYXAgPSB7XG4gICAgY2hlc3Q6ICdiZy1yZWQtMTAwJyxcbiAgICBiYWNrOiAnYmctZ3JlZW4tMTAwJyxcbiAgICBzaG91bGRlcjogJ2JnLXllbGxvdy0xMDAnLFxuICAgIGFybTogJ2JnLXB1cnBsZS0xMDAnLFxuICAgIGxlZzogJ2JnLWJsdWUtMTAwJyxcbiAgICBjb3JlOiAnYmctcGluay0xMDAnLFxuICB9O1xuICByZXR1cm4gYmdDb2xvck1hcFttdXNjbGVJZF0gfHwgJ2JnLXJlZC0xMDAnO1xufVxuXG4vKipcbiAqIOeti+iCiemDqOS9jUlE44GL44KJ44OG44Kt44K544OI6Imy44Kv44Op44K544KS5Y+W5b6XXG4gKiBAcGFyYW0ge3N0cmluZ30gbXVzY2xlSWQgLSDnrYvogonpg6jkvY1JRFxuICogQHJldHVybnMge3N0cmluZ30g44OG44Kt44K544OI6Imy44Kv44Op44K5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRNdXNjbGVUZXh0Q29sb3IobXVzY2xlSWQpIHtcbiAgY29uc3QgdGV4dENvbG9yTWFwID0ge1xuICAgIGNoZXN0OiAndGV4dC1yZWQtNzAwJyxcbiAgICBiYWNrOiAndGV4dC1ncmVlbi03MDAnLFxuICAgIHNob3VsZGVyOiAndGV4dC15ZWxsb3ctNzAwJyxcbiAgICBhcm06ICd0ZXh0LXB1cnBsZS03MDAnLFxuICAgIGxlZzogJ3RleHQtYmx1ZS03MDAnLFxuICAgIGNvcmU6ICd0ZXh0LXBpbmstNzAwJyxcbiAgfTtcbiAgcmV0dXJuIHRleHRDb2xvck1hcFttdXNjbGVJZF0gfHwgJ3RleHQtcmVkLTcwMCc7XG59XG5cbi8qKlxuICog44Ko44Kv44K144K144Kk44K66YWN5YiX44KS5a6J5YWo44Gr44OR44O844K5XG4gKiBAcGFyYW0ge3N0cmluZ30gZXhlcmNpc2VzU3RyIC0gSlNPTuaWh+Wtl+WIl1xuICogQHJldHVybnMge0FycmF5fSDjgqjjgq/jgrXjgrXjgqTjgrrphY3liJdcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlRXhlcmNpc2VzKGV4ZXJjaXNlc1N0cikge1xuICB0cnkge1xuICAgIGNvbnN0IGV4ZXJjaXNlcyA9IEpTT04ucGFyc2UoZXhlcmNpc2VzU3RyIHx8ICdbXScpO1xuICAgIHJldHVybiBBcnJheS5pc0FycmF5KGV4ZXJjaXNlcykgPyBleGVyY2lzZXMgOiBbXTtcbiAgfSBjYXRjaCB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG59XG5cbi8qKlxuICogQVBJ6YGF5bu244KS44K344Of44Ol44Os44O844OIXG4gKiBAcGFyYW0ge251bWJlcn0gbXMgLSDpgYXlu7bmmYLplpPvvIjjg5/jg6rnp5LvvIlcbiAqIEByZXR1cm5zIHtQcm9taXNlfSDjg5fjg63jg5/jgrlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNpbXVsYXRlQXBpRGVsYXkobXMgPSA1MDApIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIG1zKSk7XG59XG5cbi8qKlxuICog5a6J5YWo44GrRE9N44Ko44Os44Oh44Oz44OI44KS5Y+W5b6XXG4gKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3IgLSDjgrvjg6zjgq/jgr/jg7zvvIhJROOAgeOCr+ODqeOCueOAgeimgee0oOWQjeOBquOBqe+8iVxuICogQHBhcmFtIHtFbGVtZW50fERvY3VtZW50fSBjb250ZXh0IC0g5qSc57Si44Kz44Oz44OG44Kt44K544OI77yI44OH44OV44Kp44Or44OIOiBkb2N1bWVudO+8iVxuICogQHJldHVybnMge0VsZW1lbnR8bnVsbH0gRE9N44Ko44Os44Oh44Oz44OIXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzYWZlR2V0RWxlbWVudChzZWxlY3RvciwgY29udGV4dCA9IGRvY3VtZW50KSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHNlbGVjdG9yLnN0YXJ0c1dpdGgoJyMnKVxuICAgICAgPyBjb250ZXh0LmdldEVsZW1lbnRCeUlkKHNlbGVjdG9yLnNsaWNlKDEpKVxuICAgICAgOiBjb250ZXh0LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUud2FybihgSW52YWxpZCBzZWxlY3RvcjogJHtzZWxlY3Rvcn1gLCBlcnJvcik7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxuLyoqXG4gKiDlronlhajjgavopIfmlbDjga5ET03jgqjjg6zjg6Hjg7Pjg4jjgpLlj5blvpdcbiAqIEBwYXJhbSB7c3RyaW5nfSBzZWxlY3RvciAtIOOCu+ODrOOCr+OCv+ODvFxuICogQHBhcmFtIHtFbGVtZW50fERvY3VtZW50fSBjb250ZXh0IC0g5qSc57Si44Kz44Oz44OG44Kt44K544OI77yI44OH44OV44Kp44Or44OIOiBkb2N1bWVudO+8iVxuICogQHJldHVybnMge0FycmF5PEVsZW1lbnQ+fSBET03jgqjjg6zjg6Hjg7Pjg4jjga7phY3liJdcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNhZmVHZXRFbGVtZW50cyhzZWxlY3RvciwgY29udGV4dCA9IGRvY3VtZW50KSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIEFycmF5LmZyb20oY29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS53YXJuKGBJbnZhbGlkIHNlbGVjdG9yOiAke3NlbGVjdG9yfWAsIGVycm9yKTtcbiAgICByZXR1cm4gW107XG4gIH1cbn1cblxuLyoqXG4gKiDlronlhajjgatET03jgqjjg6zjg6Hjg7Pjg4jjga7jg4bjgq3jgrnjg4jjgpLoqK3lrppcbiAqIEBwYXJhbSB7c3RyaW5nfEVsZW1lbnR9IHRhcmdldCAtIOOCqOODrOODoeODs+ODiElE44G+44Gf44Gv44Ko44Os44Oh44Oz44OIXG4gKiBAcGFyYW0ge3N0cmluZ30gdGV4dCAtIOioreWumuOBmeOCi+ODhuOCreOCueODiFxuICogQHBhcmFtIHtFbGVtZW50fERvY3VtZW50fSBjb250ZXh0IC0g5qSc57Si44Kz44Oz44OG44Kt44K544OIXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzYWZlU2V0VGV4dCh0YXJnZXQsIHRleHQsIGNvbnRleHQgPSBkb2N1bWVudCkge1xuICBjb25zdCBlbGVtZW50ID1cbiAgICB0eXBlb2YgdGFyZ2V0ID09PSAnc3RyaW5nJyA/IHNhZmVHZXRFbGVtZW50KHRhcmdldCwgY29udGV4dCkgOiB0YXJnZXQ7XG4gIGlmIChlbGVtZW50KSB7XG4gICAgZWxlbWVudC50ZXh0Q29udGVudCA9IHRleHQ7XG4gIH1cbn1cblxuLyoqXG4gKiBIVE1M44Ko44K544Kx44O844OX5Yem55CGXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyIC0g44Ko44K544Kx44O844OX44GZ44KL5paH5a2X5YiXXG4gKiBAcmV0dXJucyB7c3RyaW5nfSDjgqjjgrnjgrHjg7zjg5fjgZXjgozjgZ/mloflrZfliJdcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVzY2FwZUh0bWwoc3RyKSB7XG4gIGlmICh0eXBlb2Ygc3RyICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBTdHJpbmcoc3RyKTtcbiAgfVxuXG4gIGNvbnN0IGVzY2FwZU1hcCA9IHtcbiAgICAnJic6ICcmYW1wOycsXG4gICAgJzwnOiAnJmx0OycsXG4gICAgJz4nOiAnJmd0OycsXG4gICAgJ1wiJzogJyZxdW90OycsXG4gICAgXCInXCI6ICcmI3gyNzsnLFxuICAgICcvJzogJyYjeDJGOycsXG4gICAgJ2AnOiAnJiN4NjA7JyxcbiAgICAnPSc6ICcmI3gzRDsnLFxuICB9O1xuXG4gIHJldHVybiBzdHIucmVwbGFjZSgvWyY8PlwiJ2A9L10vZywgKG1hdGNoKSA9PiBlc2NhcGVNYXBbbWF0Y2hdKTtcbn1cblxuLyoqXG4gKiDlronlhajjgatET03jgqjjg6zjg6Hjg7Pjg4jjga5IVE1M44KS6Kit5a6a77yIWFNT5a++562W5LuY44GN77yJXG4gKiBAcGFyYW0ge3N0cmluZ3xFbGVtZW50fSB0YXJnZXQgLSDjgqjjg6zjg6Hjg7Pjg4hJROOBvuOBn+OBr+OCqOODrOODoeODs+ODiFxuICogQHBhcmFtIHtzdHJpbmd9IGh0bWwgLSDoqK3lrprjgZnjgotIVE1MXG4gKiBAcGFyYW0ge0VsZW1lbnR8RG9jdW1lbnR9IGNvbnRleHQgLSDmpJzntKLjgrPjg7Pjg4bjgq3jgrnjg4hcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gZXNjYXBlQ29udGVudCAtIEhUTUzjgqjjgrnjgrHjg7zjg5fjgZnjgovjgYvjganjgYbjgYvvvIjjg4fjg5Xjgqnjg6vjg4g6IGZhbHNl77yJXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzYWZlU2V0SFRNTChcbiAgdGFyZ2V0LFxuICBodG1sLFxuICBjb250ZXh0ID0gZG9jdW1lbnQsXG4gIGVzY2FwZUNvbnRlbnQgPSBmYWxzZVxuKSB7XG4gIGNvbnN0IGVsZW1lbnQgPVxuICAgIHR5cGVvZiB0YXJnZXQgPT09ICdzdHJpbmcnID8gc2FmZUdldEVsZW1lbnQodGFyZ2V0LCBjb250ZXh0KSA6IHRhcmdldDtcbiAgaWYgKGVsZW1lbnQpIHtcbiAgICBlbGVtZW50LmlubmVySFRNTCA9IGVzY2FwZUNvbnRlbnQgPyBlc2NhcGVIdG1sKGh0bWwpIDogaHRtbDtcbiAgfVxufVxuXG4vKipcbiAqIOWuieWFqOOBq+ODhuOCreOCueODiOOCs+ODs+ODhuODs+ODhOOCkuioreWumu+8iFhTU+Wvvuetlu+8iVxuICogQHBhcmFtIHtzdHJpbmd8RWxlbWVudH0gdGFyZ2V0IC0g44Ko44Os44Oh44Oz44OISUTjgb7jgZ/jga/jgqjjg6zjg6Hjg7Pjg4hcbiAqIEBwYXJhbSB7c3RyaW5nfSBjb250ZW50IC0g6Kit5a6a44GZ44KL44Kz44Oz44OG44Oz44OEXG4gKiBAcGFyYW0ge0VsZW1lbnR8RG9jdW1lbnR9IGNvbnRleHQgLSDmpJzntKLjgrPjg7Pjg4bjgq3jgrnjg4hcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNhZmVTZXRDb250ZW50KHRhcmdldCwgY29udGVudCwgY29udGV4dCA9IGRvY3VtZW50KSB7XG4gIGNvbnN0IGVsZW1lbnQgPVxuICAgIHR5cGVvZiB0YXJnZXQgPT09ICdzdHJpbmcnID8gc2FmZUdldEVsZW1lbnQodGFyZ2V0LCBjb250ZXh0KSA6IHRhcmdldDtcbiAgaWYgKGVsZW1lbnQpIHtcbiAgICAvLyB0ZXh0Q29udGVudOOCkuS9v+eUqOOBl+OBplhTU+OCkumYsuOBkFxuICAgIGVsZW1lbnQudGV4dENvbnRlbnQgPSBjb250ZW50O1xuICB9XG59XG5cbi8qKlxuICog44Ko44Op44O844Oh44OD44K744O844K455So44GuSFRNTOOCkueUn+aIkFxuICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2UgLSDjgqjjg6njg7zjg6Hjg4Pjgrvjg7zjgrhcbiAqIEBwYXJhbSB7c3RyaW5nfSBpY29uIC0g44Ki44Kk44Kz44Oz44Kv44Op44K5XG4gKiBAcmV0dXJucyB7c3RyaW5nfSDjgqjjg6njg7xIVE1MXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVFcnJvckhUTUwobWVzc2FnZSwgaWNvbiA9ICdmYXMgZmEtZXhjbGFtYXRpb24tdHJpYW5nbGUnKSB7XG4gIHJldHVybiBgXG4gICAgICAgIDxkaXYgY2xhc3M9XCJ0ZXh0LWNlbnRlciB0ZXh0LWdyYXktNTAwIHB5LThcIj5cbiAgICAgICAgICAgIDxpIGNsYXNzPVwiJHtpY29ufSB0ZXh0LXhsIG1iLTJcIj48L2k+XG4gICAgICAgICAgICA8cD4ke21lc3NhZ2V9PC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICBgO1xufVxuXG4vLyDpnZ7mjqjlpajjga5oYW5kbGVFcnJvcumWouaVsOOBr+WJiumZpOOBleOCjOOBvuOBl+OBn+OAglxuLy8g5Luj44KP44KK44GrZXJyb3JIYW5kbGVyLmpz44GuaGFuZGxlRXJyb3LplqLmlbDjgpLkvb/nlKjjgZfjgabjgY/jgaDjgZXjgYTjgIJcblxuLyoqXG4gKiDpnZ7lkIzmnJ/plqLmlbDjgpLlronlhajjgavlrp/ooYxcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGFzeW5jRm4gLSDpnZ7lkIzmnJ/plqLmlbBcbiAqIEBwYXJhbSB7c3RyaW5nfSBjb250ZXh0IC0g44Ko44Op44O844Kz44Oz44OG44Kt44K544OIXG4gKiBAcGFyYW0geyp9IGZhbGxiYWNrVmFsdWUgLSDjgqjjg6njg7zmmYLjga7jg5Xjgqnjg7zjg6vjg5Djg4Pjgq/lgKRcbiAqIEByZXR1cm5zIHtQcm9taXNlPCo+fSDlrp/ooYzntZDmnpzjgb7jgZ/jga/jg5Xjgqnjg7zjg6vjg5Djg4Pjgq/lgKRcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNhZmVBc3luYyhcbiAgYXN5bmNGbixcbiAgY29udGV4dCA9ICdBc3luYyBvcGVyYXRpb24nLFxuICBmYWxsYmFja1ZhbHVlID0gbnVsbFxuKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGF3YWl0IGFzeW5jRm4oKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBoYW5kbGVFcnJvcihlcnJvciwgeyBjb250ZXh0IH0pO1xuICAgIHJldHVybiBmYWxsYmFja1ZhbHVlO1xuICB9XG59XG5cbi8qKlxuICog44OH44OQ44Km44Oz44K56Zai5pWwXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIC0g5a6f6KGM44GZ44KL6Zai5pWwXG4gKiBAcGFyYW0ge251bWJlcn0gd2FpdCAtIOW+heapn+aZgumWk++8iOODn+ODquenku+8iVxuICogQHJldHVybnMge0Z1bmN0aW9ufSDjg4fjg5Djgqbjg7PjgrnjgZXjgozjgZ/plqLmlbBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlYm91bmNlKGZ1bmMsIHdhaXQpIHtcbiAgbGV0IHRpbWVvdXQ7XG4gIHJldHVybiBmdW5jdGlvbiBleGVjdXRlZEZ1bmN0aW9uKC4uLmFyZ3MpIHtcbiAgICBjb25zdCBsYXRlciA9ICgpID0+IHtcbiAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgICAgIGZ1bmMoLi4uYXJncyk7XG4gICAgfTtcbiAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gICAgdGltZW91dCA9IHNldFRpbWVvdXQobGF0ZXIsIHdhaXQpO1xuICB9O1xufVxuXG4vKipcbiAqIOOCq+OCueOCv+ODoOWFpeWKm+ODgOOCpOOCouODreOCsOOCkuihqOekulxuICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2UgLSDlhaXlipvjg6Hjg4Pjgrvjg7zjgrhcbiAqIEBwYXJhbSB7c3RyaW5nfSBkZWZhdWx0VmFsdWUgLSDjg4fjg5Xjgqnjg6vjg4jlgKRcbiAqIEByZXR1cm5zIHtQcm9taXNlPHN0cmluZ3xudWxsPn0g5YWl5Yqb5YCk44G+44Gf44GvbnVsbFxuICovXG5leHBvcnQgZnVuY3Rpb24gc2hvd0lucHV0RGlhbG9nKG1lc3NhZ2UsIGRlZmF1bHRWYWx1ZSA9ICcnKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgIC8vIOOCq+OCueOCv+ODoOWFpeWKm+ODgOOCpOOCouODreOCsOOCkuS9nOaIkFxuICAgIGNvbnN0IGRpYWxvZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGRpYWxvZy5jbGFzc05hbWUgPVxuICAgICAgJ2ZpeGVkIGluc2V0LTAgYmctYmxhY2sgYmctb3BhY2l0eS01MCBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciB6LTUwJztcbiAgICBkaWFsb2cuaW5uZXJIVE1MID0gYFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJnLXdoaXRlIHJvdW5kZWQtbGcgcC02IG1heC13LW1kIG14LTQgdy1mdWxsXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXggaXRlbXMtY2VudGVyIG1iLTRcIj5cbiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJmYXMgZmEtZWRpdCB0ZXh0LWJsdWUtNTAwIHRleHQteGwgbXItM1wiPjwvaT5cbiAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzPVwidGV4dC1sZyBmb250LXNlbWlib2xkIHRleHQtZ3JheS05MDBcIj7lhaXlips8L2gzPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwidGV4dC1ncmF5LTcwMCBtYi00XCI+JHttZXNzYWdlfTwvcD5cbiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBcbiAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJpbnB1dC1maWVsZCB3LWZ1bGwgcHgtMyBweS0yIGJvcmRlciBib3JkZXItZ3JheS0zMDAgcm91bmRlZC1sZyBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1ibHVlLTUwMCBmb2N1czpib3JkZXItdHJhbnNwYXJlbnQgbWItNlwiIFxuICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT1cIiR7ZGVmYXVsdFZhbHVlfVwiIFxuICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIuWFpeWKm+OBl+OBpuOBj+OBoOOBleOBhFwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4IGp1c3RpZnktZW5kIHNwYWNlLXgtM1wiPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiY2FuY2VsLWJ0biBweC00IHB5LTIgYm9yZGVyIGJvcmRlci1ncmF5LTMwMCB0ZXh0LWdyYXktNzAwIHJvdW5kZWQtbGcgaG92ZXI6YmctZ3JheS01MFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAg44Kt44Oj44Oz44K744OrXG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwib2stYnRuIHB4LTQgcHktMiBiZy1ibHVlLTYwMCB0ZXh0LXdoaXRlIHJvdW5kZWQtbGcgaG92ZXI6YmctYmx1ZS03MDBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIE9LXG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIGA7XG5cbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGRpYWxvZyk7XG5cbiAgICBjb25zdCBpbnB1dEZpZWxkID0gZGlhbG9nLnF1ZXJ5U2VsZWN0b3IoJy5pbnB1dC1maWVsZCcpO1xuICAgIGNvbnN0IGNhbmNlbEJ0biA9IGRpYWxvZy5xdWVyeVNlbGVjdG9yKCcuY2FuY2VsLWJ0bicpO1xuICAgIGNvbnN0IG9rQnRuID0gZGlhbG9nLnF1ZXJ5U2VsZWN0b3IoJy5vay1idG4nKTtcblxuICAgIC8vIOODleOCqeODvOOCq+OCueOCkuioreWumlxuICAgIGlucHV0RmllbGQuZm9jdXMoKTtcbiAgICBpbnB1dEZpZWxkLnNlbGVjdCgpO1xuXG4gICAgY29uc3QgY2xlYW51cCA9ICgpID0+IHtcbiAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoZGlhbG9nKTtcbiAgICB9O1xuXG4gICAgY29uc3QgaGFuZGxlT2sgPSAoKSA9PiB7XG4gICAgICBjb25zdCB2YWx1ZSA9IGlucHV0RmllbGQudmFsdWUudHJpbSgpO1xuICAgICAgY2xlYW51cCgpO1xuICAgICAgcmVzb2x2ZSh2YWx1ZSB8fCBudWxsKTtcbiAgICB9O1xuXG4gICAgY29uc3QgaGFuZGxlQ2FuY2VsID0gKCkgPT4ge1xuICAgICAgY2xlYW51cCgpO1xuICAgICAgcmVzb2x2ZShudWxsKTtcbiAgICB9O1xuXG4gICAgLy8g44Kk44OZ44Oz44OI44Oq44K544OK44O8XG4gICAgY2FuY2VsQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlQ2FuY2VsKTtcbiAgICBva0J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZU9rKTtcblxuICAgIC8vIEVudGVy44Kt44O844Gn56K65a6a44CBRVND44Kt44O844Gn44Kt44Oj44Oz44K744OrXG4gICAgaW5wdXRGaWVsZC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGUpID0+IHtcbiAgICAgIGlmIChlLmtleSA9PT0gJ0VudGVyJykge1xuICAgICAgICBoYW5kbGVPaygpO1xuICAgICAgfSBlbHNlIGlmIChlLmtleSA9PT0gJ0VzY2FwZScpIHtcbiAgICAgICAgaGFuZGxlQ2FuY2VsKCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyBFU0Pjgq3jg7zjgafjgq3jg6Pjg7Pjgrvjg6tcbiAgICBjb25zdCBoYW5kbGVLZXlkb3duID0gKGUpID0+IHtcbiAgICAgIGlmIChlLmtleSA9PT0gJ0VzY2FwZScpIHtcbiAgICAgICAgaGFuZGxlQ2FuY2VsKCk7XG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBoYW5kbGVLZXlkb3duKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBoYW5kbGVLZXlkb3duKTtcblxuICAgIC8vIOiDjOaZr+OCr+ODquODg+OCr+OBp+OCreODo+ODs+OCu+ODq1xuICAgIGRpYWxvZy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG4gICAgICBpZiAoZS50YXJnZXQgPT09IGRpYWxvZykge1xuICAgICAgICBoYW5kbGVDYW5jZWwoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG59XG5cbi8qKlxuICog44K544Ot44OD44OI44Or6Zai5pWwXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIC0g5a6f6KGM44GZ44KL6Zai5pWwXG4gKiBAcGFyYW0ge251bWJlcn0gbGltaXQgLSDliLbpmZDmmYLplpPvvIjjg5/jg6rnp5LvvIlcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0g44K544Ot44OD44OI44Or44GV44KM44Gf6Zai5pWwXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0aHJvdHRsZShmdW5jLCBsaW1pdCkge1xuICBsZXQgaW5UaHJvdHRsZTtcbiAgcmV0dXJuIGZ1bmN0aW9uIGV4ZWN1dGVkRnVuY3Rpb24oLi4uYXJncykge1xuICAgIGlmICghaW5UaHJvdHRsZSkge1xuICAgICAgZnVuYy5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICAgIGluVGhyb3R0bGUgPSB0cnVlO1xuICAgICAgc2V0VGltZW91dCgoKSA9PiAoaW5UaHJvdHRsZSA9IGZhbHNlKSwgbGltaXQpO1xuICAgIH1cbiAgfTtcbn1cblxuLyoqXG4gKiDml6Xku5jjgYzmnKrmnaXjgYvjganjgYbjgYvjgpLjg4Hjgqfjg4Pjgq9cbiAqIEBwYXJhbSB7c3RyaW5nfSBkYXRlU3RyIC0g5pel5LuY5paH5a2X5YiXIChZWVlZLU1NLUREKVxuICogQHJldHVybnMge2Jvb2xlYW59IOacquadpeOBruaXpeS7mOOBi+OBqeOBhuOBi1xuICovXG5leHBvcnQgZnVuY3Rpb24gaXNGdXR1cmVEYXRlKGRhdGVTdHIpIHtcbiAgY29uc3QgdG9kYXkgPSBuZXcgRGF0ZSgpO1xuICBjb25zdCB0YXJnZXREYXRlID0gbmV3IERhdGUoZGF0ZVN0cik7XG4gIHRvZGF5LnNldEhvdXJzKDAsIDAsIDAsIDApO1xuICB0YXJnZXREYXRlLnNldEhvdXJzKDAsIDAsIDAsIDApO1xuICByZXR1cm4gdGFyZ2V0RGF0ZSA+IHRvZGF5O1xufVxuXG4vKipcbiAqIOaXpeS7mOOBjOmBjuWOu+OBi+OBqeOBhuOBi+OCkuODgeOCp+ODg+OCr1xuICogQHBhcmFtIHtzdHJpbmd9IGRhdGVTdHIgLSDml6Xku5jmloflrZfliJcgKFlZWVktTU0tREQpXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0g6YGO5Y6744Gu5pel5LuY44GL44Gp44GG44GLXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1Bhc3REYXRlKGRhdGVTdHIpIHtcbiAgY29uc3QgdG9kYXkgPSBuZXcgRGF0ZSgpO1xuICBjb25zdCB0YXJnZXREYXRlID0gbmV3IERhdGUoZGF0ZVN0cik7XG4gIHRvZGF5LnNldEhvdXJzKDAsIDAsIDAsIDApO1xuICB0YXJnZXREYXRlLnNldEhvdXJzKDAsIDAsIDAsIDApO1xuICByZXR1cm4gdGFyZ2V0RGF0ZSA8IHRvZGF5O1xufVxuXG4vKipcbiAqIOOCq+ODrOODs+ODgOODvOeUqOOBruips+e0sOODouODvOODgOODq0hUTUzjgpLnlJ/miJBcbiAqIEBwYXJhbSB7c3RyaW5nfSBkYXRlU3RyIC0g5pel5LuY5paH5a2X5YiXXG4gKiBAcGFyYW0ge0FycmF5fSB3b3Jrb3V0cyAtIOODr+ODvOOCr+OCouOCpuODiOmFjeWIl1xuICogQHBhcmFtIHtBcnJheX0gcGxhbm5lZFdvcmtvdXRzIC0g5LqI5a6a44GV44KM44Gf44Ov44O844Kv44Ki44Km44OI6YWN5YiXXG4gKiBAcmV0dXJucyB7c3RyaW5nfSDjg6Ljg7zjg4Djg6tIVE1MXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDYWxlbmRhck1vZGFsSFRNTChcbiAgZGF0ZVN0cixcbiAgd29ya291dHMsXG4gIHBsYW5uZWRXb3Jrb3V0cyA9IFtdXG4pIHtcbiAgY29uc3QgZm9ybWF0dGVkRGF0ZSA9IGZvcm1hdERhdGUoZGF0ZVN0cik7XG4gIGNvbnN0IGlzVG9kYXkgPSBpc1RvZGF5RGF0ZShkYXRlU3RyKTtcbiAgY29uc3QgaXNGdXR1cmUgPSBpc0Z1dHVyZURhdGUoZGF0ZVN0cik7XG5cbiAgbGV0IGNvbnRlbnQgPSAnJztcblxuICAvLyDlrp/pmpvjga7jg6/jg7zjgq/jgqLjgqbjg4jlsaXmrbRcbiAgaWYgKHdvcmtvdXRzLmxlbmd0aCA+IDApIHtcbiAgICBjb250ZW50ICs9IGBcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtYi02XCI+XG4gICAgICAgICAgICAgICAgPGg0IGNsYXNzPVwidGV4dC1sZyBmb250LXNlbWlib2xkIHRleHQtZ3JheS04MDAgbWItMyBmbGV4IGl0ZW1zLWNlbnRlclwiPlxuICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cImZhcyBmYS1kdW1iYmVsbCB0ZXh0LWdyZWVuLTUwMCBtci0yXCI+PC9pPlxuICAgICAgICAgICAgICAgICAgICDlrp/mlr3jgZfjgZ/jg4jjg6zjg7zjg4vjg7PjgrBcbiAgICAgICAgICAgICAgICA8L2g0PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzcGFjZS15LTNcIj5cbiAgICAgICAgICAgICAgICAgICAgJHt3b3Jrb3V0c1xuICAgICAgICAgICAgICAgICAgICAgIC5tYXAoXG4gICAgICAgICAgICAgICAgICAgICAgICAod29ya291dCkgPT4gYFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJnLWdyYXktNTAgcm91bmRlZC1sZyBwLTQgYm9yZGVyLWwtNCBib3JkZXItZ3JlZW4tNTAwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBtYi0yXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNSBjbGFzcz1cImZvbnQtc2VtaWJvbGQgdGV4dC1ncmF5LTgwMFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHtlc2NhcGVIdG1sKHdvcmtvdXQubmFtZSB8fCAn44Ov44O844Kv44Ki44Km44OIJyl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDU+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwidGV4dC1zbSB0ZXh0LWdyYXktNTAwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAke3dvcmtvdXQuZHVyYXRpb24gPyBgJHtNYXRoLmZsb29yKHdvcmtvdXQuZHVyYXRpb24gLyA2MCl95YiGYCA6ICcnfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRleHQtc20gdGV4dC1ncmF5LTYwMCBtYi0yXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiZmFzIGZhLWJ1bGxzZXllIHRleHQtYmx1ZS01MDAgbXItMVwiPjwvaT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg6YOo5L2NOiAke1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFycmF5LmlzQXJyYXkod29ya291dC5tdXNjbGVfZ3JvdXBzKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyB3b3Jrb3V0Lm11c2NsZV9ncm91cHMuam9pbignLCAnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB3b3Jrb3V0Lm11c2NsZV9ncm91cHMgfHwgJ+mDqOS9jeS4jeaYjidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3b3Jrb3V0LmV4ZXJjaXNlcyAmJiB3b3Jrb3V0LmV4ZXJjaXNlcy5sZW5ndGggPiAwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gYFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGV4dC1zbSB0ZXh0LWdyYXktNjAwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cImZhcyBmYS1saXN0IHRleHQtcHVycGxlLTUwMCBtci0xXCI+PC9pPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg56iu55uuOiAke3dvcmtvdXQuZXhlcmNpc2VzLm1hcCgoZXgpID0+IGV4Lm5hbWUpLmpvaW4oJywgJyl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAnJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd29ya291dC5ub3Rlc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IGBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRleHQtc20gdGV4dC1ncmF5LTYwMCBtdC0yIGl0YWxpY1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJmYXMgZmEtc3RpY2t5LW5vdGUgdGV4dC15ZWxsb3ctNTAwIG1yLTFcIj48L2k+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAke2VzY2FwZUh0bWwod29ya291dC5ub3Rlcyl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAnJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgIC5qb2luKCcnKX1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICBgO1xuICB9XG5cbiAgLy8g5LqI5a6a44GV44KM44Gf44Ov44O844Kv44Ki44Km44OIXG4gIGlmIChwbGFubmVkV29ya291dHMubGVuZ3RoID4gMCkge1xuICAgIGNvbnRlbnQgKz0gYFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1iLTZcIj5cbiAgICAgICAgICAgICAgICA8aDQgY2xhc3M9XCJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQgdGV4dC1ncmF5LTgwMCBtYi0zIGZsZXggaXRlbXMtY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiZmFzIGZhLWNhbGVuZGFyLWNoZWNrIHRleHQtYmx1ZS01MDAgbXItMlwiPjwvaT5cbiAgICAgICAgICAgICAgICAgICAg5LqI5a6a44GV44KM44Gf44OI44Os44O844OL44Oz44KwXG4gICAgICAgICAgICAgICAgPC9oND5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic3BhY2UteS0zXCI+XG4gICAgICAgICAgICAgICAgICAgICR7cGxhbm5lZFdvcmtvdXRzXG4gICAgICAgICAgICAgICAgICAgICAgLm1hcChcbiAgICAgICAgICAgICAgICAgICAgICAgICh3b3Jrb3V0KSA9PiBgXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYmctYmx1ZS01MCByb3VuZGVkLWxnIHAtNCBib3JkZXItbC00IGJvcmRlci1ibHVlLTUwMFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gbWItMlwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDUgY2xhc3M9XCJmb250LXNlbWlib2xkIHRleHQtZ3JheS04MDBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR7ZXNjYXBlSHRtbCh3b3Jrb3V0Lm5hbWUgfHwgJ+ODr+ODvOOCr+OCouOCpuODiCcpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g1PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInRleHQtc20gdGV4dC1ibHVlLTYwMCBmb250LW1lZGl1bVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg5LqI5a6aXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGV4dC1zbSB0ZXh0LWdyYXktNjAwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiZmFzIGZhLWJ1bGxzZXllIHRleHQtYmx1ZS01MDAgbXItMVwiPjwvaT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg6YOo5L2NOiAke1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFycmF5LmlzQXJyYXkod29ya291dC5tdXNjbGVfZ3JvdXBzKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyB3b3Jrb3V0Lm11c2NsZV9ncm91cHMuam9pbignLCAnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB3b3Jrb3V0Lm11c2NsZV9ncm91cHMgfHwgJ+mDqOS9jeS4jeaYjidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgLmpvaW4oJycpfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIGA7XG4gIH1cblxuICAvLyDkvZXjgoLjgarjgYTloLTlkIhcbiAgaWYgKHdvcmtvdXRzLmxlbmd0aCA9PT0gMCAmJiBwbGFubmVkV29ya291dHMubGVuZ3RoID09PSAwKSB7XG4gICAgaWYgKGlzRnV0dXJlKSB7XG4gICAgICBjb250ZW50ID0gYFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0ZXh0LWNlbnRlciB0ZXh0LWdyYXktNTAwIHB5LThcIj5cbiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJmYXMgZmEtY2FsZW5kYXItcGx1cyB0ZXh0LTR4bCBtYi00IHRleHQtZ3JheS0zMDBcIj48L2k+XG4gICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwidGV4dC1sZyBtYi0yXCI+44GT44Gu5pel44Gv44G+44Gg5LqI5a6a44GM44GC44KK44G+44Gb44KTPC9wPlxuICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz1cInRleHQtc21cIj7jg4jjg6zjg7zjg4vjg7PjgrDkuojlrprjgpLov73liqDjgZfjgabjgb/jgb7jgZfjgofjgYY8L3A+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICBgO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb250ZW50ID0gYFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0ZXh0LWNlbnRlciB0ZXh0LWdyYXktNTAwIHB5LThcIj5cbiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJmYXMgZmEtaW5mby1jaXJjbGUgdGV4dC00eGwgbWItNCB0ZXh0LWdyYXktMzAwXCI+PC9pPlxuICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz1cInRleHQtbGcgbWItMlwiPuOBk+OBruaXpeOBr+ODiOODrOODvOODi+ODs+OCsOOCkuihjOOBo+OBpuOBhOOBvuOBm+OCkzwvcD5cbiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJ0ZXh0LXNtXCI+5LyR5oGv5pel44Go44GX44Gm6YGO44GU44GV44KM44G+44GX44GfPC9wPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgYDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYFxuICAgICAgICA8ZGl2IGNsYXNzPVwiZml4ZWQgaW5zZXQtMCBiZy1ibGFjayBiZy1vcGFjaXR5LTUwIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHotNTAgcC00XCIgaWQ9XCJjYWxlbmRhci1tb2RhbFwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJnLXdoaXRlIHJvdW5kZWQtbGcgbWF4LXctMnhsIHctZnVsbCBtYXgtaC1bOTB2aF0gb3ZlcmZsb3cteS1hdXRvXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN0aWNreSB0b3AtMCBiZy13aGl0ZSBib3JkZXItYiBib3JkZXItZ3JheS0yMDAgcHgtNiBweS00IGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlblwiPlxuICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9XCJ0ZXh0LXhsIGZvbnQtYm9sZCB0ZXh0LWdyYXktODAwIGZsZXggaXRlbXMtY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cImZhcyBmYS1jYWxlbmRhci1kYXkgdGV4dC1ibHVlLTUwMCBtci0yXCI+PC9pPlxuICAgICAgICAgICAgICAgICAgICAgICAgJHtmb3JtYXR0ZWREYXRlfVxuICAgICAgICAgICAgICAgICAgICAgICAgJHtpc1RvZGF5ID8gJzxzcGFuIGNsYXNzPVwibWwtMiBweC0yIHB5LTEgYmctYmx1ZS0xMDAgdGV4dC1ibHVlLTgwMCB0ZXh0LXhzIHJvdW5kZWQtZnVsbFwiPuS7iuaXpTwvc3Bhbj4nIDogJyd9XG4gICAgICAgICAgICAgICAgICAgICAgICAke2lzRnV0dXJlID8gJzxzcGFuIGNsYXNzPVwibWwtMiBweC0yIHB5LTEgYmctZ3JlZW4tMTAwIHRleHQtZ3JlZW4tODAwIHRleHQteHMgcm91bmRlZC1mdWxsXCI+5pyq5p2lPC9zcGFuPicgOiAnJ31cbiAgICAgICAgICAgICAgICAgICAgPC9oMz5cbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cInRleHQtZ3JheS00MDAgaG92ZXI6dGV4dC1ncmF5LTYwMCB0ZXh0LXhsXCIgb25jbGljaz1cImRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjYWxlbmRhci1tb2RhbCcpLnJlbW92ZSgpXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cImZhcyBmYS10aW1lc1wiPjwvaT5cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInB4LTYgcHktNFwiPlxuICAgICAgICAgICAgICAgICAgICAke2NvbnRlbnR9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN0aWNreSBib3R0b20tMCBiZy1ncmF5LTUwIGJvcmRlci10IGJvcmRlci1ncmF5LTIwMCBweC02IHB5LTRcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgganVzdGlmeS1lbmQgc3BhY2UteC0zXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAke1xuICAgICAgICAgICAgICAgICAgICAgICAgICBpc0Z1dHVyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gYFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJweC00IHB5LTIgYmctYmx1ZS01MDAgdGV4dC13aGl0ZSByb3VuZGVkLWxnIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhvdmVyOmJnLWJsdWUtNjAwIHRyYW5zaXRpb24tY29sb3JzXCIgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbmNsaWNrPVwiYWRkUGxhbm5lZFdvcmtvdXQoJyR7ZGF0ZVN0cn0nKVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cImZhcyBmYS1wbHVzIG1yLTJcIj48L2k+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOS6iOWumuOCkui/veWKoFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogJydcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJweC00IHB5LTIgYmctZ3JheS01MDAgdGV4dC13aGl0ZSByb3VuZGVkLWxnIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaG92ZXI6YmctZ3JheS02MDAgdHJhbnNpdGlvbi1jb2xvcnNcIiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25jbGljaz1cImRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjYWxlbmRhci1tb2RhbCcpLnJlbW92ZSgpXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAg6ZaJ44GY44KLXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgYDtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBQUEsVUFBQSxHQUFBQyxPQUFB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