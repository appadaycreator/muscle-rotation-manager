f7408cbee31db8917dc76ba296cb9cfa
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pageManager = void 0;
var _helpers = require("../utils/helpers.js");
var _onboardingManager = _interopRequireDefault(require("./onboardingManager.js"));
var _lazyLoader = require("../utils/lazyLoader.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } // pageManager.js - ページ管理とナビゲーション
var PageManager = /*#__PURE__*/function () {
  function PageManager() {
    _classCallCheck(this, PageManager);
    this.currentPage = 'dashboard';
    this.pageCache = new Map();
    this.isInitialized = false;
  }

  /**
   * ページ管理を初期化
   */
  return _createClass(PageManager, [{
    key: "initialize",
    value: (function () {
      var _initialize = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {
        return _regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              if (!this.isInitialized) {
                _context.n = 1;
                break;
              }
              return _context.a(2);
            case 1:
              this.isInitialized = true;
              console.log('PageManager initialized');
            case 2:
              return _context.a(2);
          }
        }, _callee, this);
      }));
      function initialize() {
        return _initialize.apply(this, arguments);
      }
      return initialize;
    }()
    /**
     * パーシャルコンテンツを読み込み
     * @param {string} partialName - パーシャル名
     * @returns {Promise<string>} HTMLコンテンツ
     */
    )
  }, {
    key: "loadPartial",
    value: (function () {
      var _loadPartial = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2(partialName) {
        var response, content, _t;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.p = _context2.n) {
            case 0:
              _context2.p = 0;
              if (!this.pageCache.has(partialName)) {
                _context2.n = 1;
                break;
              }
              return _context2.a(2, this.pageCache.get(partialName));
            case 1:
              _context2.n = 2;
              return fetch("partials/".concat(partialName, ".html"));
            case 2:
              response = _context2.v;
              if (response.ok) {
                _context2.n = 3;
                break;
              }
              throw new Error("Failed to load ".concat(partialName));
            case 3:
              _context2.n = 4;
              return response.text();
            case 4:
              content = _context2.v;
              this.pageCache.set(partialName, content);
              return _context2.a(2, content);
            case 5:
              _context2.p = 5;
              _t = _context2.v;
              console.error("Error loading partial ".concat(partialName, ":"), _t);
              return _context2.a(2, "<div class=\"text-center text-gray-500 py-8\">\n                <i class=\"fas fa-exclamation-triangle text-2xl mb-4\"></i>\n                <p>\u30DA\u30FC\u30B8\u306E\u8AAD\u307F\u8FBC\u307F\u306B\u5931\u6557\u3057\u307E\u3057\u305F</p>\n            </div>");
          }
        }, _callee2, this, [[0, 5]]);
      }));
      function loadPartial(_x) {
        return _loadPartial.apply(this, arguments);
      }
      return loadPartial;
    }()
    /**
     * ページにナビゲート
     * @param {string} pageName - ページ名
     */
    )
  }, {
    key: "navigateToPage",
    value: (function () {
      var _navigateToPage = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3(pageName) {
        var _document$querySelect, mainContent, partialName, content, _t2;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.p = _context3.n) {
            case 0:
              _context3.p = 0;
              // ナビゲーション状態を更新
              document.querySelectorAll('.nav-item').forEach(function (item) {
                item.classList.remove('active');
              });
              (_document$querySelect = document.querySelector("[data-page=\"".concat(pageName, "\"]"))) === null || _document$querySelect === void 0 || _document$querySelect.classList.add('active');

              // ページコンテンツを読み込み
              mainContent = document.querySelector('main');
              partialName = this.getPartialName(pageName);
              _context3.n = 1;
              return this.loadPartial(partialName);
            case 1:
              content = _context3.v;
              // コンテンツを置換
              mainContent.innerHTML = content;

              // 現在のページを更新
              this.currentPage = pageName;

              // ページ固有の機能を初期化
              this.initializePage(pageName);
              console.log("Navigated to ".concat(pageName, " page"));
              _context3.n = 3;
              break;
            case 2:
              _context3.p = 2;
              _t2 = _context3.v;
              console.error('Navigation error:', _t2);
              (0, _helpers.showNotification)('ページの読み込みに失敗しました', 'error');
            case 3:
              return _context3.a(2);
          }
        }, _callee3, this, [[0, 2]]);
      }));
      function navigateToPage(_x2) {
        return _navigateToPage.apply(this, arguments);
      }
      return navigateToPage;
    }()
    /**
     * ページ名からパーシャル名を取得
     * @param {string} pageName - ページ名
     * @returns {string} パーシャル名
     */
    )
  }, {
    key: "getPartialName",
    value: function getPartialName(pageName) {
      var partialMap = {
        'exercises-management': 'exercises-management',
        exercises: 'exercises-management'
      };
      return partialMap[pageName] || pageName;
    }

    /**
     * ページ固有の機能を初期化
     * @param {string} pageName - ページ名
     */
  }, {
    key: "initializePage",
    value: function initializePage(pageName) {
      // 動的インポートを使用してページモジュールを読み込み
      this.loadPageModule(pageName);
    }

    /**
     * ページモジュールを動的に読み込み（遅延ローディング対応）
     * @param {string} pageName - ページ名
     */
  }, {
    key: "loadPageModule",
    value: (function () {
      var _loadPageModule = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4(pageName) {
        var startTime, module, loadTime, _t3;
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.p = _context4.n) {
            case 0:
              _context4.p = 0;
              console.log("\uD83D\uDD04 \u30DA\u30FC\u30B8\u30E2\u30B8\u30E5\u30FC\u30EB\u8AAD\u307F\u8FBC\u307F\u958B\u59CB: ".concat(pageName));
              startTime = typeof window !== 'undefined' && window.performance ? window.performance.now() : Date.now(); // 遅延ローダーを使用してモジュールを読み込み
              _context4.n = 1;
              return _lazyLoader.lazyLoader.loadPageModule(pageName);
            case 1:
              module = _context4.v;
              if (!(module["default"] && typeof module["default"].initialize === 'function')) {
                _context4.n = 2;
                break;
              }
              _context4.n = 2;
              return module["default"].initialize();
            case 2:
              loadTime = (typeof window !== 'undefined' && window.performance ? window.performance.now() : Date.now()) - startTime;
              console.log("\u2705 \u30DA\u30FC\u30B8\u30E2\u30B8\u30E5\u30FC\u30EB\u8AAD\u307F\u8FBC\u307F\u5B8C\u4E86: ".concat(pageName, " (").concat(loadTime.toFixed(2), "ms)"));

              // 遅延ロード対象の画像とコンポーネントを監視
              this.observeLazyElements();
              _context4.n = 4;
              break;
            case 3:
              _context4.p = 3;
              _t3 = _context4.v;
              console.warn("Page module for ".concat(pageName, " not found or failed to load:"), _t3);
              // フォールバック処理
              this.initializePageFallback(pageName);
            case 4:
              return _context4.a(2);
          }
        }, _callee4, this, [[0, 3]]);
      }));
      function loadPageModule(_x3) {
        return _loadPageModule.apply(this, arguments);
      }
      return loadPageModule;
    }()
    /**
     * 遅延ロード対象の要素を監視
     */
    )
  }, {
    key: "observeLazyElements",
    value: function observeLazyElements() {
      // 遅延ロード対象の画像を監視
      var lazyImages = document.querySelectorAll('img[data-src], img[loading="lazy"]');
      lazyImages.forEach(function (img) {
        _lazyLoader.lazyLoader.observeImage(img);
      });

      // 遅延ロード対象のコンポーネントを監視
      var lazyComponents = document.querySelectorAll('[data-lazy-component]');
      lazyComponents.forEach(function (element) {
        var componentType = element.dataset.lazyComponent;
        _lazyLoader.lazyLoader.observeComponent(element, componentType);
      });
    }

    /**
     * ページ初期化のフォールバック処理
     * @param {string} pageName - ページ名
     */
  }, {
    key: "initializePageFallback",
    value: function initializePageFallback(pageName) {
      console.log("Initializing ".concat(pageName, " page with fallback"));
      switch (pageName) {
        case 'dashboard':
          this.initializeDashboard();
          break;
        case 'workout':
          this.initializeWorkout();
          break;
        case 'calendar':
          this.initializeCalendar();
          break;
        case 'analytics':
          this.initializeAnalytics();
          break;
        case 'progress':
          this.initializeProgress();
          break;
        case 'exercises':
          this.initializeExercises();
          break;
        case 'settings':
          this.initializeSettings();
          break;
        case 'help':
          this.initializeHelp();
          break;
        case 'privacy':
          this.initializePrivacy();
          break;
        default:
          console.log("No specific initialization for ".concat(pageName));
      }
    }

    /**
     * ダッシュボードページの初期化
     */
  }, {
    key: "initializeDashboard",
    value: function initializeDashboard() {
      console.log('Dashboard page initialized');

      // オンボーディングチェック（ダッシュボード初期化時）
      if (_onboardingManager["default"].isOnboardingNeeded()) {
        console.log('オンボーディングが必要です');
        setTimeout(function () {
          _onboardingManager["default"].startOnboarding();
        }, 1000); // 1秒後に開始（UIの初期化を待つ）
      }

      // 筋肉部位クリックハンドラー
      document.querySelectorAll('.muscle-part').forEach(function (part) {
        part.addEventListener('click', function () {
          var muscle = part.dataset.muscle;
          console.log("Clicked muscle part: ".concat(muscle));
        });
      });
    }

    /**
     * ワークアウトページの初期化
     */
  }, {
    key: "initializeWorkout",
    value: function initializeWorkout() {
      console.log('Workout page initialized');
    }

    /**
     * カレンダーページの初期化
     */
  }, {
    key: "initializeCalendar",
    value: function initializeCalendar() {
      console.log('Calendar page initialized');
    }

    /**
     * 分析ページの初期化
     */
  }, {
    key: "initializeAnalytics",
    value: function initializeAnalytics() {
      console.log('Analytics page initialized');
    }

    /**
     * プログレッシブ・オーバーロードページの初期化
     */
  }, {
    key: "initializeProgress",
    value: function initializeProgress() {
      console.log('Progress page initialized');
    }

    /**
     * エクササイズページの初期化
     */
  }, {
    key: "initializeExercises",
    value: function initializeExercises() {
      console.log('Exercises page initialized');
    }

    /**
     * 設定ページの初期化
     */
  }, {
    key: "initializeSettings",
    value: function initializeSettings() {
      console.log('Settings page initialized');
    }

    /**
     * ヘルプページの初期化
     */
  }, {
    key: "initializeHelp",
    value: function initializeHelp() {
      console.log('Help page initialized');
    }

    /**
     * プライバシーページの初期化
     */
  }, {
    key: "initializePrivacy",
    value: function initializePrivacy() {
      console.log('Privacy policy page initialized');
    }

    /**
     * ナビゲーションを初期化
     */
  }, {
    key: "initializeNavigation",
    value: function initializeNavigation() {
      var _this = this;
      document.querySelectorAll('.nav-item').forEach(function (item) {
        item.addEventListener('click', /*#__PURE__*/function () {
          var _ref = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5(e) {
            var page;
            return _regenerator().w(function (_context5) {
              while (1) switch (_context5.n) {
                case 0:
                  e.preventDefault();
                  page = item.dataset.page;
                  if (!(page && page !== _this.currentPage)) {
                    _context5.n = 1;
                    break;
                  }
                  _context5.n = 1;
                  return _this.navigateToPage(page);
                case 1:
                  return _context5.a(2);
              }
            }, _callee5);
          }));
          return function (_x4) {
            return _ref.apply(this, arguments);
          };
        }());
      });
    }

    /**
     * ヘッダーを読み込み
     */
  }, {
    key: "loadHeader",
    value: (function () {
      var _loadHeader = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6() {
        var headerContainer, headerContent, _t4;
        return _regenerator().w(function (_context6) {
          while (1) switch (_context6.p = _context6.n) {
            case 0:
              _context6.p = 0;
              headerContainer = document.getElementById('header-container');
              if (!headerContainer) {
                _context6.n = 2;
                break;
              }
              _context6.n = 1;
              return this.loadPartial('header');
            case 1:
              headerContent = _context6.v;
              headerContainer.innerHTML = headerContent;
            case 2:
              _context6.n = 4;
              break;
            case 3:
              _context6.p = 3;
              _t4 = _context6.v;
              console.error('Error loading header:', _t4);
            case 4:
              return _context6.a(2);
          }
        }, _callee6, this, [[0, 3]]);
      }));
      function loadHeader() {
        return _loadHeader.apply(this, arguments);
      }
      return loadHeader;
    }()
    /**
     * サイドバーを読み込み
     */
    )
  }, {
    key: "loadSidebar",
    value: (function () {
      var _loadSidebar = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee7() {
        var sidebarContainer, sidebarContent, _t5;
        return _regenerator().w(function (_context7) {
          while (1) switch (_context7.p = _context7.n) {
            case 0:
              _context7.p = 0;
              sidebarContainer = document.getElementById('sidebar-container');
              if (!sidebarContainer) {
                _context7.n = 2;
                break;
              }
              _context7.n = 1;
              return this.loadPartial('sidebar');
            case 1:
              sidebarContent = _context7.v;
              sidebarContainer.innerHTML = sidebarContent;
            case 2:
              _context7.n = 4;
              break;
            case 3:
              _context7.p = 3;
              _t5 = _context7.v;
              console.error('Error loading sidebar:', _t5);
            case 4:
              return _context7.a(2);
          }
        }, _callee7, this, [[0, 3]]);
      }));
      function loadSidebar() {
        return _loadSidebar.apply(this, arguments);
      }
      return loadSidebar;
    }()
    /**
     * 現在のページを取得
     * @returns {string} 現在のページ名
     */
    )
  }, {
    key: "getCurrentPage",
    value: function getCurrentPage() {
      return this.currentPage;
    }
  }]);
}(); // シングルトンインスタンスをエクスポート
var pageManager = exports.pageManager = new PageManager();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,