a3f697d8d5be34d2b70d6e1ab06731d3
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.exerciseService = void 0;
var _supabaseService = require("./supabaseService.js");
var _errorHandler = require("../utils/errorHandler.js");
var _helpers = require("../utils/helpers.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } // exerciseService.js - エクササイズ管理サービス
/**
 * エクササイズ管理サービスクラス
 * エクササイズの取得、検索、フィルタリング、カスタムエクササイズの管理を行う
 */
var ExerciseService = /*#__PURE__*/function () {
  function ExerciseService() {
    _classCallCheck(this, ExerciseService);
    this.cache = new Map();
    this.cacheExpiry = 5 * 60 * 1000; // 5分間キャッシュ
    this.searchCache = new Map();
  }

  /**
   * 全エクササイズを取得
   * @param {Object} options - オプション
   * @param {boolean} options.includeCustom - カスタムエクササイズを含むか
   * @param {boolean} options.useCache - キャッシュを使用するか
   * @returns {Promise<Array>} エクササイズ配列
   */
  return _createClass(ExerciseService, [{
    key: "getAllExercises",
    value: (function () {
      var _getAllExercises = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {
        var options,
          _options$includeCusto,
          includeCustom,
          _options$useCache,
          useCache,
          cacheKey,
          cached,
          query,
          _yield$query,
          data,
          error,
          _args = arguments,
          _t;
        return _regenerator().w(function (_context) {
          while (1) switch (_context.p = _context.n) {
            case 0:
              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};
              _options$includeCusto = options.includeCustom, includeCustom = _options$includeCusto === void 0 ? true : _options$includeCusto, _options$useCache = options.useCache, useCache = _options$useCache === void 0 ? true : _options$useCache;
              cacheKey = "all_exercises_".concat(includeCustom); // キャッシュチェック
              if (!(useCache && this.cache.has(cacheKey))) {
                _context.n = 1;
                break;
              }
              cached = this.cache.get(cacheKey);
              if (!(Date.now() - cached.timestamp < this.cacheExpiry)) {
                _context.n = 1;
                break;
              }
              return _context.a(2, cached.data);
            case 1:
              if (_supabaseService.supabaseService.isAvailable()) {
                _context.n = 2;
                break;
              }
              console.warn('Supabase not available, returning empty array');
              return _context.a(2, []);
            case 2:
              _context.p = 2;
              query = _supabaseService.supabaseService.client.from('exercises').select("\n                    *,\n                    muscle_groups (\n                        id,\n                        name,\n                        name_ja,\n                        color_code\n                    )\n                ").order('name_ja', {
                ascending: true
              }); // カスタムエクササイズの取得条件
              try {
                if (includeCustom && _supabaseService.supabaseService.getCurrentUser()) {
                  // 公開エクササイズ + 自分のカスタムエクササイズ
                  query = query.or("is_custom.eq.false,and(is_custom.eq.true,created_by_user_id.eq.".concat(_supabaseService.supabaseService.getCurrentUser().id, ")"));
                } else {
                  // 公開エクササイズのみ
                  query = query.eq('is_custom', false);
                }
              } catch (columnError) {
                // is_customカラムが存在しない場合は全てのエクササイズを取得
                console.warn('is_custom column not found, fetching all exercises:', columnError);
              }
              _context.n = 3;
              return query;
            case 3:
              _yield$query = _context.v;
              data = _yield$query.data;
              error = _yield$query.error;
              if (!error) {
                _context.n = 4;
                break;
              }
              throw error;
            case 4:
              // キャッシュに保存
              this.cache.set(cacheKey, {
                data: data || [],
                timestamp: Date.now()
              });
              return _context.a(2, data || []);
            case 5:
              _context.p = 5;
              _t = _context.v;
              (0, _errorHandler.handleError)(_t, {
                context: 'エクササイズ取得',
                showNotification: true
              });
              return _context.a(2, []);
          }
        }, _callee, this, [[2, 5]]);
      }));
      function getAllExercises() {
        return _getAllExercises.apply(this, arguments);
      }
      return getAllExercises;
    }()
    /**
     * 部位別エクササイズを取得
     * @param {string} muscleGroupId - 筋肉部位ID
     * @param {Object} options - オプション
     * @returns {Promise<Array>} エクササイズ配列
     */
    )
  }, {
    key: "getExercisesByMuscleGroup",
    value: (function () {
      var _getExercisesByMuscleGroup = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2(muscleGroupId) {
        var options,
          cacheKey,
          cached,
          query,
          _yield$query2,
          data,
          error,
          result,
          _yield$supabaseServic,
          muscleGroupData,
          muscleGroupError,
          _args2 = arguments,
          _t2,
          _t3;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.p = _context2.n) {
            case 0:
              options = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};
              if (muscleGroupId) {
                _context2.n = 1;
                break;
              }
              return _context2.a(2, []);
            case 1:
              cacheKey = "muscle_group_".concat(muscleGroupId); // キャッシュチェック
              if (!(options.useCache !== false && this.cache.has(cacheKey))) {
                _context2.n = 2;
                break;
              }
              cached = this.cache.get(cacheKey);
              if (!(Date.now() - cached.timestamp < this.cacheExpiry)) {
                _context2.n = 2;
                break;
              }
              return _context2.a(2, cached.data);
            case 2:
              if (_supabaseService.supabaseService.isAvailable()) {
                _context2.n = 3;
                break;
              }
              console.warn('Supabase not available, returning empty array');
              return _context2.a(2, []);
            case 3:
              _context2.p = 3;
              query = _supabaseService.supabaseService.client.from('exercises').select('*').eq('muscle_group_id', muscleGroupId).order('difficulty_level', {
                ascending: true
              }).order('name_ja', {
                ascending: true
              }); // カスタムエクササイズの取得条件
              try {
                if (_supabaseService.supabaseService.getCurrentUser()) {
                  query = query.or("is_custom.eq.false,and(is_custom.eq.true,created_by_user_id.eq.".concat(_supabaseService.supabaseService.getCurrentUser().id, ")"));
                } else {
                  query = query.eq('is_custom', false);
                }
              } catch (columnError) {
                // is_customカラムが存在しない場合は全てのエクササイズを取得
                console.warn('is_custom column not found, fetching all exercises:', columnError);
              }
              _context2.n = 4;
              return query;
            case 4:
              _yield$query2 = _context2.v;
              data = _yield$query2.data;
              error = _yield$query2.error;
              if (!error) {
                _context2.n = 5;
                break;
              }
              throw error;
            case 5:
              result = data || []; // 筋肉部位の情報を取得して結合
              if (!(result.length > 0)) {
                _context2.n = 9;
                break;
              }
              _context2.p = 6;
              _context2.n = 7;
              return _supabaseService.supabaseService.client.from('muscle_groups').select('id, name, name_ja, color_code').eq('id', muscleGroupId).single();
            case 7:
              _yield$supabaseServic = _context2.v;
              muscleGroupData = _yield$supabaseServic.data;
              muscleGroupError = _yield$supabaseServic.error;
              if (!muscleGroupError && muscleGroupData) {
                result = result.map(function (exercise) {
                  return _objectSpread(_objectSpread({}, exercise), {}, {
                    muscle_groups: muscleGroupData
                  });
                });
              }
              _context2.n = 9;
              break;
            case 8:
              _context2.p = 8;
              _t2 = _context2.v;
              console.warn('Failed to load muscle group:', _t2);
            case 9:
              // キャッシュに保存
              this.cache.set(cacheKey, {
                data: result,
                timestamp: Date.now()
              });
              return _context2.a(2, result);
            case 10:
              _context2.p = 10;
              _t3 = _context2.v;
              (0, _errorHandler.handleError)(_t3, {
                context: '部位別エクササイズ取得',
                showNotification: true
              });
              return _context2.a(2, []);
          }
        }, _callee2, this, [[6, 8], [3, 10]]);
      }));
      function getExercisesByMuscleGroup(_x) {
        return _getExercisesByMuscleGroup.apply(this, arguments);
      }
      return getExercisesByMuscleGroup;
    }()
    /**
     * エクササイズを検索
     * @param {string} searchTerm - 検索語
     * @param {Object} filters - フィルター条件
     * @returns {Promise<Array>} 検索結果
     */
    )
  }, {
    key: "searchExercises",
    value: (function () {
      var _searchExercises = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3(searchTerm) {
        var filters,
          cacheKey,
          cached,
          query,
          term,
          _yield$query3,
          data,
          error,
          result,
          _args3 = arguments,
          _t4;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.p = _context3.n) {
            case 0:
              filters = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};
              cacheKey = "search_".concat(searchTerm, "_").concat(JSON.stringify(filters)); // 検索キャッシュチェック
              if (!this.searchCache.has(cacheKey)) {
                _context3.n = 1;
                break;
              }
              cached = this.searchCache.get(cacheKey);
              if (!(Date.now() - cached.timestamp < this.cacheExpiry)) {
                _context3.n = 1;
                break;
              }
              return _context3.a(2, cached.data);
            case 1:
              if (_supabaseService.supabaseService.isAvailable()) {
                _context3.n = 2;
                break;
              }
              console.warn('Supabase not available, returning empty array');
              return _context3.a(2, []);
            case 2:
              _context3.p = 2;
              // 筋肉部位名でのフィルタリングの場合はJOINを使用

              if (filters.muscleGroupName) {
                query = _supabaseService.supabaseService.client.from('exercises').select("\n                        *,\n                        muscle_groups!inner(name_ja, name_en)\n                    ").eq('muscle_groups.name_ja', filters.muscleGroupName);
              } else {
                query = _supabaseService.supabaseService.client.from('exercises').select("\n                        *,\n                        muscle_groups (\n                            id,\n                            name,\n                            name_ja,\n                            color_code\n                        )\n                    ");
              }

              // テキスト検索
              if (searchTerm && searchTerm.trim()) {
                term = searchTerm.trim();
                query = query.or("name_ja.ilike.%".concat(term, "%,name_en.ilike.%").concat(term, "%,search_keywords.ilike.%").concat(term, "%,description.ilike.%").concat(term, "%"));
              }

              // フィルター適用
              if (filters.muscleGroupId) {
                query = query.eq('muscle_group_id', filters.muscleGroupId);
              }
              if (filters.difficulty) {
                query = query.eq('difficulty_level', filters.difficulty);
              }
              if (filters.equipment) {
                query = query.eq('equipment', filters.equipment);
              }
              if (filters.exerciseType) {
                query = query.eq('exercise_type', filters.exerciseType);
              }
              if (filters.isBodyweight !== undefined) {
                query = query.eq('is_bodyweight', filters.isBodyweight);
              }
              if (filters.isCompound !== undefined) {
                query = query.eq('is_compound', filters.isCompound);
              }
              if (filters.isBeginnerFriendly !== undefined) {
                query = query.eq('is_beginner_friendly', filters.isBeginnerFriendly);
              }

              // カスタムエクササイズの取得条件
              try {
                if (_supabaseService.supabaseService.getCurrentUser()) {
                  query = query.or("is_custom.eq.false,and(is_custom.eq.true,created_by_user_id.eq.".concat(_supabaseService.supabaseService.getCurrentUser().id, ")"));
                } else {
                  query = query.eq('is_custom', false);
                }
              } catch (columnError) {
                // is_customカラムが存在しない場合は全てのエクササイズを取得
                console.warn('is_custom column not found, fetching all exercises:', columnError);
              }

              // ソート
              if (filters.sortBy === 'rating') {
                query = query.order('average_rating', {
                  ascending: false
                });
              } else if (filters.sortBy === 'usage') {
                query = query.order('usage_count', {
                  ascending: false
                });
              } else if (filters.sortBy === 'difficulty') {
                query = query.order('difficulty_level', {
                  ascending: true
                });
              } else {
                query = query.order('name_ja', {
                  ascending: true
                });
              }

              // 制限
              if (filters.limit) {
                query = query.limit(filters.limit);
              }
              _context3.n = 3;
              return query;
            case 3:
              _yield$query3 = _context3.v;
              data = _yield$query3.data;
              error = _yield$query3.error;
              if (!error) {
                _context3.n = 4;
                break;
              }
              throw error;
            case 4:
              result = data || []; // 検索キャッシュに保存
              this.searchCache.set(cacheKey, {
                data: result,
                timestamp: Date.now()
              });
              return _context3.a(2, result);
            case 5:
              _context3.p = 5;
              _t4 = _context3.v;
              console.error('Exercise search error:', _t4);
              (0, _errorHandler.handleError)(_t4, {
                context: 'エクササイズ検索',
                showNotification: true
              });
              return _context3.a(2, []);
          }
        }, _callee3, this, [[2, 5]]);
      }));
      function searchExercises(_x2) {
        return _searchExercises.apply(this, arguments);
      }
      return searchExercises;
    }()
    /**
     * エクササイズの詳細を取得
     * @param {string} exerciseId - エクササイズID
     * @returns {Promise<Object|null>} エクササイズ詳細
     */
    )
  }, {
    key: "getExerciseDetails",
    value: (function () {
      var _getExerciseDetails = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4(exerciseId) {
        var _yield$supabaseServic2, data, error, _t5;
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.p = _context4.n) {
            case 0:
              if (!(!exerciseId || !_supabaseService.supabaseService.isAvailable())) {
                _context4.n = 1;
                break;
              }
              return _context4.a(2, null);
            case 1:
              _context4.p = 1;
              _context4.n = 2;
              return _supabaseService.supabaseService.client.from('exercises').select("\n                    *,\n                    muscle_groups (\n                        id,\n                        name,\n                        name_ja,\n                        color_code,\n                        recovery_hours\n                    )\n                ").eq('id', exerciseId).single();
            case 2:
              _yield$supabaseServic2 = _context4.v;
              data = _yield$supabaseServic2.data;
              error = _yield$supabaseServic2.error;
              if (!error) {
                _context4.n = 3;
                break;
              }
              throw error;
            case 3:
              // 使用回数を増加
              if (data && !data.is_custom) {
                this.incrementUsageCount(exerciseId);
              }
              return _context4.a(2, data);
            case 4:
              _context4.p = 4;
              _t5 = _context4.v;
              (0, _errorHandler.handleError)(_t5, {
                context: 'エクササイズ詳細取得',
                showNotification: false
              });
              return _context4.a(2, null);
          }
        }, _callee4, this, [[1, 4]]);
      }));
      function getExerciseDetails(_x3) {
        return _getExerciseDetails.apply(this, arguments);
      }
      return getExerciseDetails;
    }()
    /**
     * カスタムエクササイズを作成
     * @param {Object} exerciseData - エクササイズデータ
     * @returns {Promise<Object|null>} 作成されたエクササイズ
     */
    )
  }, {
    key: "createCustomExercise",
    value: (function () {
      var _createCustomExercise = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6(exerciseData) {
        var _this = this;
        return _regenerator().w(function (_context6) {
          while (1) switch (_context6.n) {
            case 0:
              if (!(!_supabaseService.supabaseService.isAvailable() || !_supabaseService.supabaseService.getCurrentUser())) {
                _context6.n = 1;
                break;
              }
              throw new Error('認証が必要です');
            case 1:
              return _context6.a(2, (0, _errorHandler.executeWithRetry)(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5() {
                var _yield$supabaseServic3, data, error;
                return _regenerator().w(function (_context5) {
                  while (1) switch (_context5.n) {
                    case 0:
                      _context5.n = 1;
                      return _supabaseService.supabaseService.client.from('exercises').insert([_objectSpread(_objectSpread({}, exerciseData), {}, {
                        is_custom: true,
                        created_by_user_id: _supabaseService.supabaseService.getCurrentUser().id,
                        is_public: exerciseData.is_public || false
                      })]).select("\n                    *,\n                    muscle_groups (\n                        id,\n                        name,\n                        name_ja,\n                        color_code\n                    )\n                ").single();
                    case 1:
                      _yield$supabaseServic3 = _context5.v;
                      data = _yield$supabaseServic3.data;
                      error = _yield$supabaseServic3.error;
                      if (!error) {
                        _context5.n = 2;
                        break;
                      }
                      throw error;
                    case 2:
                      // キャッシュをクリア
                      _this.clearCache();
                      (0, _helpers.showNotification)('カスタムエクササイズを作成しました', 'success');
                      return _context5.a(2, data);
                  }
                }, _callee5);
              })), {
                maxRetries: 2,
                context: 'カスタムエクササイズ作成'
              }));
          }
        }, _callee6);
      }));
      function createCustomExercise(_x4) {
        return _createCustomExercise.apply(this, arguments);
      }
      return createCustomExercise;
    }()
    /**
     * カスタムエクササイズを更新
     * @param {string} exerciseId - エクササイズID
     * @param {Object} updateData - 更新データ
     * @returns {Promise<Object|null>} 更新されたエクササイズ
     */
    )
  }, {
    key: "updateCustomExercise",
    value: (function () {
      var _updateCustomExercise = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee8(exerciseId, updateData) {
        var _this2 = this;
        return _regenerator().w(function (_context8) {
          while (1) switch (_context8.n) {
            case 0:
              if (!(!_supabaseService.supabaseService.isAvailable() || !_supabaseService.supabaseService.getCurrentUser())) {
                _context8.n = 1;
                break;
              }
              throw new Error('認証が必要です');
            case 1:
              return _context8.a(2, (0, _errorHandler.executeWithRetry)(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee7() {
                var _yield$supabaseServic4, data, error;
                return _regenerator().w(function (_context7) {
                  while (1) switch (_context7.n) {
                    case 0:
                      _context7.n = 1;
                      return _supabaseService.supabaseService.client.from('exercises').update(updateData).eq('id', exerciseId).eq('created_by_user_id', _supabaseService.supabaseService.getCurrentUser().id).select("\n                    *,\n                    muscle_groups (\n                        id,\n                        name,\n                        name_ja,\n                        color_code\n                    )\n                ").single();
                    case 1:
                      _yield$supabaseServic4 = _context7.v;
                      data = _yield$supabaseServic4.data;
                      error = _yield$supabaseServic4.error;
                      if (!error) {
                        _context7.n = 2;
                        break;
                      }
                      throw error;
                    case 2:
                      // キャッシュをクリア
                      _this2.clearCache();
                      (0, _helpers.showNotification)('エクササイズを更新しました', 'success');
                      return _context7.a(2, data);
                  }
                }, _callee7);
              })), {
                maxRetries: 2,
                context: 'カスタムエクササイズ更新'
              }));
          }
        }, _callee8);
      }));
      function updateCustomExercise(_x5, _x6) {
        return _updateCustomExercise.apply(this, arguments);
      }
      return updateCustomExercise;
    }()
    /**
     * カスタムエクササイズを削除
     * @param {string} exerciseId - エクササイズID
     * @returns {Promise<boolean>} 削除成功かどうか
     */
    )
  }, {
    key: "deleteCustomExercise",
    value: (function () {
      var _deleteCustomExercise = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee0(exerciseId) {
        var _this3 = this;
        return _regenerator().w(function (_context0) {
          while (1) switch (_context0.n) {
            case 0:
              if (!(!_supabaseService.supabaseService.isAvailable() || !_supabaseService.supabaseService.getCurrentUser())) {
                _context0.n = 1;
                break;
              }
              throw new Error('認証が必要です');
            case 1:
              return _context0.a(2, (0, _errorHandler.executeWithRetry)(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee9() {
                var _yield$supabaseServic5, error;
                return _regenerator().w(function (_context9) {
                  while (1) switch (_context9.n) {
                    case 0:
                      _context9.n = 1;
                      return _supabaseService.supabaseService.client.from('exercises')["delete"]().eq('id', exerciseId).eq('created_by_user_id', _supabaseService.supabaseService.getCurrentUser().id);
                    case 1:
                      _yield$supabaseServic5 = _context9.v;
                      error = _yield$supabaseServic5.error;
                      if (!error) {
                        _context9.n = 2;
                        break;
                      }
                      throw error;
                    case 2:
                      // キャッシュをクリア
                      _this3.clearCache();
                      (0, _helpers.showNotification)('エクササイズを削除しました', 'success');
                      return _context9.a(2, true);
                  }
                }, _callee9);
              })), {
                maxRetries: 2,
                context: 'カスタムエクササイズ削除'
              }));
          }
        }, _callee0);
      }));
      function deleteCustomExercise(_x7) {
        return _deleteCustomExercise.apply(this, arguments);
      }
      return deleteCustomExercise;
    }()
    /**
     * ユーザーのカスタムエクササイズを取得
     * @returns {Promise<Array>} カスタムエクササイズ配列
     */
    )
  }, {
    key: "getUserCustomExercises",
    value: (function () {
      var _getUserCustomExercises = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee1() {
        var _yield$supabaseServic6, data, error, _t6;
        return _regenerator().w(function (_context1) {
          while (1) switch (_context1.p = _context1.n) {
            case 0:
              if (!(!_supabaseService.supabaseService.isAvailable() || !_supabaseService.supabaseService.getCurrentUser())) {
                _context1.n = 1;
                break;
              }
              return _context1.a(2, []);
            case 1:
              _context1.p = 1;
              _context1.n = 2;
              return _supabaseService.supabaseService.client.from('exercises').select("\n                    *,\n                    muscle_groups (\n                        id,\n                        name,\n                        name_ja,\n                        color_code\n                    )\n                ").eq('is_custom', true).eq('created_by_user_id', _supabaseService.supabaseService.getCurrentUser().id).order('created_at', {
                ascending: false
              });
            case 2:
              _yield$supabaseServic6 = _context1.v;
              data = _yield$supabaseServic6.data;
              error = _yield$supabaseServic6.error;
              if (!error) {
                _context1.n = 3;
                break;
              }
              throw error;
            case 3:
              return _context1.a(2, data || []);
            case 4:
              _context1.p = 4;
              _t6 = _context1.v;
              (0, _errorHandler.handleError)(_t6, {
                context: 'カスタムエクササイズ取得',
                showNotification: true
              });
              return _context1.a(2, []);
          }
        }, _callee1, null, [[1, 4]]);
      }));
      function getUserCustomExercises() {
        return _getUserCustomExercises.apply(this, arguments);
      }
      return getUserCustomExercises;
    }()
    /**
     * エクササイズの使用回数を増加
     * @param {string} exerciseId - エクササイズID
     */
    )
  }, {
    key: "incrementUsageCount",
    value: (function () {
      var _incrementUsageCount = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee10(exerciseId) {
        var _t7;
        return _regenerator().w(function (_context10) {
          while (1) switch (_context10.p = _context10.n) {
            case 0:
              if (!(!_supabaseService.supabaseService.isAvailable() || !exerciseId)) {
                _context10.n = 1;
                break;
              }
              return _context10.a(2);
            case 1:
              _context10.p = 1;
              _context10.n = 2;
              return _supabaseService.supabaseService.client.rpc('increment_exercise_usage', {
                exercise_id: exerciseId
              });
            case 2:
              _context10.n = 4;
              break;
            case 3:
              _context10.p = 3;
              _t7 = _context10.v;
              // 使用回数の更新エラーは無視
              console.warn('Usage count increment failed:', _t7);
            case 4:
              return _context10.a(2);
          }
        }, _callee10, null, [[1, 3]]);
      }));
      function incrementUsageCount(_x8) {
        return _incrementUsageCount.apply(this, arguments);
      }
      return incrementUsageCount;
    }()
    /**
     * エクササイズを評価
     * @param {string} exerciseId - エクササイズID
     * @param {number} rating - 評価（1-5）
     * @returns {Promise<boolean>} 評価成功かどうか
     */
    )
  }, {
    key: "rateExercise",
    value: (function () {
      var _rateExercise = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee11(exerciseId, rating) {
        var _yield$supabaseServic7, error, _t8;
        return _regenerator().w(function (_context11) {
          while (1) switch (_context11.p = _context11.n) {
            case 0:
              if (!(!_supabaseService.supabaseService.isAvailable() || !_supabaseService.supabaseService.getCurrentUser())) {
                _context11.n = 1;
                break;
              }
              throw new Error('認証が必要です');
            case 1:
              if (!(rating < 1 || rating > 5)) {
                _context11.n = 2;
                break;
              }
              throw new Error('評価は1-5の範囲で入力してください');
            case 2:
              _context11.p = 2;
              _context11.n = 3;
              return _supabaseService.supabaseService.client.from('exercise_ratings').upsert({
                exercise_id: exerciseId,
                user_id: _supabaseService.supabaseService.getCurrentUser().id,
                rating: rating
              });
            case 3:
              _yield$supabaseServic7 = _context11.v;
              error = _yield$supabaseServic7.error;
              if (!error) {
                _context11.n = 4;
                break;
              }
              throw error;
            case 4:
              (0, _helpers.showNotification)('評価を保存しました', 'success');
              return _context11.a(2, true);
            case 5:
              _context11.p = 5;
              _t8 = _context11.v;
              (0, _errorHandler.handleError)(_t8, {
                context: 'エクササイズ評価',
                showNotification: true
              });
              return _context11.a(2, false);
          }
        }, _callee11, null, [[2, 5]]);
      }));
      function rateExercise(_x9, _x0) {
        return _rateExercise.apply(this, arguments);
      }
      return rateExercise;
    }()
    /**
     * 人気のエクササイズを取得
     * @param {number} limit - 取得件数
     * @returns {Promise<Array>} 人気エクササイズ配列
     */
    )
  }, {
    key: "getPopularExercises",
    value: (function () {
      var _getPopularExercises = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee12() {
        var limit,
          _args12 = arguments;
        return _regenerator().w(function (_context12) {
          while (1) switch (_context12.n) {
            case 0:
              limit = _args12.length > 0 && _args12[0] !== undefined ? _args12[0] : 10;
              return _context12.a(2, this.searchExercises('', {
                sortBy: 'usage',
                limit: limit
              }));
          }
        }, _callee12, this);
      }));
      function getPopularExercises() {
        return _getPopularExercises.apply(this, arguments);
      }
      return getPopularExercises;
    }()
    /**
     * 高評価のエクササイズを取得
     * @param {number} limit - 取得件数
     * @returns {Promise<Array>} 高評価エクササイズ配列
     */
    )
  }, {
    key: "getTopRatedExercises",
    value: (function () {
      var _getTopRatedExercises = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee13() {
        var limit,
          _args13 = arguments;
        return _regenerator().w(function (_context13) {
          while (1) switch (_context13.n) {
            case 0:
              limit = _args13.length > 0 && _args13[0] !== undefined ? _args13[0] : 10;
              return _context13.a(2, this.searchExercises('', {
                sortBy: 'rating',
                limit: limit
              }));
          }
        }, _callee13, this);
      }));
      function getTopRatedExercises() {
        return _getTopRatedExercises.apply(this, arguments);
      }
      return getTopRatedExercises;
    }()
    /**
     * 初心者向けエクササイズを取得
     * @param {string} muscleGroupId - 筋肉部位ID（オプション）
     * @returns {Promise<Array>} 初心者向けエクササイズ配列
     */
    )
  }, {
    key: "getBeginnerExercises",
    value: (function () {
      var _getBeginnerExercises = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee14() {
        var muscleGroupId,
          filters,
          _args14 = arguments;
        return _regenerator().w(function (_context14) {
          while (1) switch (_context14.n) {
            case 0:
              muscleGroupId = _args14.length > 0 && _args14[0] !== undefined ? _args14[0] : null;
              filters = {
                isBeginnerFriendly: true,
                sortBy: 'difficulty'
              };
              if (muscleGroupId) {
                filters.muscleGroupId = muscleGroupId;
              }
              return _context14.a(2, this.searchExercises('', filters));
          }
        }, _callee14, this);
      }));
      function getBeginnerExercises() {
        return _getBeginnerExercises.apply(this, arguments);
      }
      return getBeginnerExercises;
    }()
    /**
     * 自重エクササイズを取得
     * @param {string} muscleGroupId - 筋肉部位ID（オプション）
     * @returns {Promise<Array>} 自重エクササイズ配列
     */
    )
  }, {
    key: "getBodyweightExercises",
    value: (function () {
      var _getBodyweightExercises = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee15() {
        var muscleGroupId,
          filters,
          _args15 = arguments;
        return _regenerator().w(function (_context15) {
          while (1) switch (_context15.n) {
            case 0:
              muscleGroupId = _args15.length > 0 && _args15[0] !== undefined ? _args15[0] : null;
              filters = {
                isBodyweight: true,
                sortBy: 'difficulty'
              };
              if (muscleGroupId) {
                filters.muscleGroupId = muscleGroupId;
              }
              return _context15.a(2, this.searchExercises('', filters));
          }
        }, _callee15, this);
      }));
      function getBodyweightExercises() {
        return _getBodyweightExercises.apply(this, arguments);
      }
      return getBodyweightExercises;
    }()
    /**
     * キャッシュをクリア
     */
    )
  }, {
    key: "clearCache",
    value: function clearCache() {
      this.cache.clear();
      this.searchCache.clear();
    }

    /**
     * 利用可能な器具一覧を取得
     * @returns {Promise<Array>} 器具一覧
     */
  }, {
    key: "getAvailableEquipment",
    value: (function () {
      var _getAvailableEquipment = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee16() {
        var _yield$supabaseServic8, data, error, equipment, _t9;
        return _regenerator().w(function (_context16) {
          while (1) switch (_context16.p = _context16.n) {
            case 0:
              if (_supabaseService.supabaseService.isAvailable()) {
                _context16.n = 1;
                break;
              }
              return _context16.a(2, ['bodyweight', 'dumbbell', 'barbell', 'machine']);
            case 1:
              _context16.p = 1;
              _context16.n = 2;
              return _supabaseService.supabaseService.client.from('exercises').select('equipment').not('equipment', 'is', null);
            case 2:
              _yield$supabaseServic8 = _context16.v;
              data = _yield$supabaseServic8.data;
              error = _yield$supabaseServic8.error;
              if (!error) {
                _context16.n = 3;
                break;
              }
              throw error;
            case 3:
              // 重複を除去してソート
              equipment = _toConsumableArray(new Set(data.map(function (item) {
                return item.equipment;
              })));
              return _context16.a(2, equipment.sort());
            case 4:
              _context16.p = 4;
              _t9 = _context16.v;
              console.warn('Failed to get equipment list:', _t9);
              return _context16.a(2, ['bodyweight', 'dumbbell', 'barbell', 'machine']);
          }
        }, _callee16, null, [[1, 4]]);
      }));
      function getAvailableEquipment() {
        return _getAvailableEquipment.apply(this, arguments);
      }
      return getAvailableEquipment;
    }()
    /**
     * エクササイズ画像をアップロード
     * @param {File} file - 画像ファイル
     * @param {string} exerciseId - エクササイズID（オプション）
     * @returns {Promise<string>} 画像URL
     */
    )
  }, {
    key: "uploadExerciseImage",
    value: (function () {
      var _uploadExerciseImage = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee17(file) {
        var exerciseId,
          allowedTypes,
          fileExt,
          fileName,
          bucketName,
          _yield$supabaseServic9,
          error,
          _supabaseService$clie,
          publicUrlData,
          _args17 = arguments,
          _t0;
        return _regenerator().w(function (_context17) {
          while (1) switch (_context17.p = _context17.n) {
            case 0:
              exerciseId = _args17.length > 1 && _args17[1] !== undefined ? _args17[1] : null;
              if (!(!_supabaseService.supabaseService.isAvailable() || !_supabaseService.supabaseService.getCurrentUser())) {
                _context17.n = 1;
                break;
              }
              throw new Error('認証が必要です');
            case 1:
              // ファイル形式とサイズのバリデーション
              allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];
              if (allowedTypes.includes(file.type)) {
                _context17.n = 2;
                break;
              }
              throw new Error('サポートされていないファイル形式です。JPEG、PNG、WebPのみ対応しています。');
            case 2:
              if (!(file.size > 10 * 1024 * 1024)) {
                _context17.n = 3;
                break;
              }
              throw new Error('ファイルサイズは10MB以下にしてください');
            case 3:
              fileExt = file.name.split('.').pop().toLowerCase();
              fileName = exerciseId ? "".concat(exerciseId, "_").concat(Date.now(), ".").concat(fileExt) : "custom_".concat(_supabaseService.supabaseService.getCurrentUser().id, "_").concat(Date.now(), ".").concat(fileExt);
              _context17.p = 4;
              bucketName = exerciseId ? 'exercise-images' : 'custom-exercise-media';
              _context17.n = 5;
              return _supabaseService.supabaseService.client.storage.from(bucketName).upload(fileName, file, {
                cacheControl: '3600',
                upsert: true,
                contentType: file.type
              });
            case 5:
              _yield$supabaseServic9 = _context17.v;
              error = _yield$supabaseServic9.error;
              if (!error) {
                _context17.n = 6;
                break;
              }
              console.error('Image upload error:', error);
              throw new Error("\u753B\u50CF\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u306B\u5931\u6557\u3057\u307E\u3057\u305F: ".concat(error.message));
            case 6:
              // 公開URLを取得
              _supabaseService$clie = _supabaseService.supabaseService.client.storage.from(bucketName).getPublicUrl(fileName), publicUrlData = _supabaseService$clie.data;
              if (publicUrlData !== null && publicUrlData !== void 0 && publicUrlData.publicUrl) {
                _context17.n = 7;
                break;
              }
              throw new Error('公開URLの取得に失敗しました');
            case 7:
              console.log('Exercise image uploaded successfully:', publicUrlData.publicUrl);
              return _context17.a(2, publicUrlData.publicUrl);
            case 8:
              _context17.p = 8;
              _t0 = _context17.v;
              console.error('Exercise image upload failed:', _t0);
              throw _t0;
            case 9:
              return _context17.a(2);
          }
        }, _callee17, null, [[4, 8]]);
      }));
      function uploadExerciseImage(_x1) {
        return _uploadExerciseImage.apply(this, arguments);
      }
      return uploadExerciseImage;
    }()
    /**
     * エクササイズ動画をアップロード
     * @param {File} file - 動画ファイル
     * @param {string} exerciseId - エクササイズID（オプション）
     * @returns {Promise<string>} 動画URL
     */
    )
  }, {
    key: "uploadExerciseVideo",
    value: (function () {
      var _uploadExerciseVideo = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee18(file) {
        var exerciseId,
          allowedTypes,
          fileExt,
          fileName,
          bucketName,
          _yield$supabaseServic0,
          error,
          _supabaseService$clie2,
          publicUrlData,
          _args18 = arguments,
          _t1;
        return _regenerator().w(function (_context18) {
          while (1) switch (_context18.p = _context18.n) {
            case 0:
              exerciseId = _args18.length > 1 && _args18[1] !== undefined ? _args18[1] : null;
              if (!(!_supabaseService.supabaseService.isAvailable() || !_supabaseService.supabaseService.getCurrentUser())) {
                _context18.n = 1;
                break;
              }
              throw new Error('認証が必要です');
            case 1:
              // ファイル形式とサイズのバリデーション
              allowedTypes = ['video/mp4', 'video/webm', 'video/ogg'];
              if (allowedTypes.includes(file.type)) {
                _context18.n = 2;
                break;
              }
              throw new Error('サポートされていないファイル形式です。MP4、WebM、OGGのみ対応しています。');
            case 2:
              if (!(file.size > 100 * 1024 * 1024)) {
                _context18.n = 3;
                break;
              }
              throw new Error('ファイルサイズは100MB以下にしてください');
            case 3:
              fileExt = file.name.split('.').pop().toLowerCase();
              fileName = exerciseId ? "".concat(exerciseId, "_").concat(Date.now(), ".").concat(fileExt) : "custom_".concat(_supabaseService.supabaseService.getCurrentUser().id, "_").concat(Date.now(), ".").concat(fileExt);
              _context18.p = 4;
              bucketName = exerciseId ? 'exercise-videos' : 'custom-exercise-media';
              _context18.n = 5;
              return _supabaseService.supabaseService.client.storage.from(bucketName).upload(fileName, file, {
                cacheControl: '3600',
                upsert: true,
                contentType: file.type
              });
            case 5:
              _yield$supabaseServic0 = _context18.v;
              error = _yield$supabaseServic0.error;
              if (!error) {
                _context18.n = 6;
                break;
              }
              console.error('Video upload error:', error);
              throw new Error("\u52D5\u753B\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u306B\u5931\u6557\u3057\u307E\u3057\u305F: ".concat(error.message));
            case 6:
              // 公開URLを取得
              _supabaseService$clie2 = _supabaseService.supabaseService.client.storage.from(bucketName).getPublicUrl(fileName), publicUrlData = _supabaseService$clie2.data;
              if (publicUrlData !== null && publicUrlData !== void 0 && publicUrlData.publicUrl) {
                _context18.n = 7;
                break;
              }
              throw new Error('公開URLの取得に失敗しました');
            case 7:
              console.log('Exercise video uploaded successfully:', publicUrlData.publicUrl);
              return _context18.a(2, publicUrlData.publicUrl);
            case 8:
              _context18.p = 8;
              _t1 = _context18.v;
              console.error('Exercise video upload failed:', _t1);
              throw _t1;
            case 9:
              return _context18.a(2);
          }
        }, _callee18, null, [[4, 8]]);
      }));
      function uploadExerciseVideo(_x10) {
        return _uploadExerciseVideo.apply(this, arguments);
      }
      return uploadExerciseVideo;
    }()
    /**
     * メディアファイルを削除
     * @param {string} url - メディアファイルのURL
     * @returns {Promise<boolean>} 削除成功かどうか
     */
    )
  }, {
    key: "deleteExerciseMedia",
    value: (function () {
      var _deleteExerciseMedia = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee19(url) {
        var urlParts, fileName, bucketName, _yield$supabaseServic1, error, _t10;
        return _regenerator().w(function (_context19) {
          while (1) switch (_context19.p = _context19.n) {
            case 0:
              if (!(!_supabaseService.supabaseService.isAvailable() || !url)) {
                _context19.n = 1;
                break;
              }
              return _context19.a(2, false);
            case 1:
              _context19.p = 1;
              // URLからファイル名とバケット名を抽出
              urlParts = url.split('/');
              fileName = urlParts[urlParts.length - 1]; // バケット名を推定
              bucketName = 'custom-exercise-media';
              if (url.includes('exercise-images')) {
                bucketName = 'exercise-images';
              } else if (url.includes('exercise-videos')) {
                bucketName = 'exercise-videos';
              }
              _context19.n = 2;
              return _supabaseService.supabaseService.client.storage.from(bucketName).remove([fileName]);
            case 2:
              _yield$supabaseServic1 = _context19.v;
              error = _yield$supabaseServic1.error;
              if (!error) {
                _context19.n = 3;
                break;
              }
              console.error('Media delete error:', error);
              return _context19.a(2, false);
            case 3:
              console.log('Exercise media deleted successfully:', fileName);
              return _context19.a(2, true);
            case 4:
              _context19.p = 4;
              _t10 = _context19.v;
              console.error('Exercise media delete failed:', _t10);
              return _context19.a(2, false);
          }
        }, _callee19, null, [[1, 4]]);
      }));
      function deleteExerciseMedia(_x11) {
        return _deleteExerciseMedia.apply(this, arguments);
      }
      return deleteExerciseMedia;
    }()
    /**
     * 画像ファイルのプレビューを生成
     * @param {File} file - 画像ファイル
     * @returns {Promise<string>} プレビューURL
     */
    )
  }, {
    key: "generateImagePreview",
    value: function generateImagePreview(file) {
      return new Promise(function (resolve, reject) {
        if (!file.type.startsWith('image/')) {
          reject(new Error('画像ファイルではありません'));
          return;
        }
        var reader = new FileReader();
        reader.onload = function (e) {
          return resolve(e.target.result);
        };
        reader.onerror = function () {
          return reject(new Error('ファイル読み込みに失敗しました'));
        };
        reader.readAsDataURL(file);
      });
    }

    /**
     * 動画ファイルの情報を取得
     * @param {File} file - 動画ファイル
     * @returns {Promise<Object>} 動画情報（duration, width, height）
     */
  }, {
    key: "getVideoInfo",
    value: function getVideoInfo(file) {
      return new Promise(function (resolve, reject) {
        if (!file.type.startsWith('video/')) {
          reject(new Error('動画ファイルではありません'));
          return;
        }
        var video = document.createElement('video');
        video.preload = 'metadata';
        video.onloadedmetadata = function () {
          resolve({
            duration: Math.round(video.duration),
            width: video.videoWidth,
            height: video.videoHeight
          });
          URL.revokeObjectURL(video.src);
        };
        video.onerror = function () {
          reject(new Error('動画ファイルの読み込みに失敗しました'));
          URL.revokeObjectURL(video.src);
        };
        video.src = URL.createObjectURL(file);
      });
    }

    /**
     * エクササイズを追加
     * @param {Object} exerciseData - エクササイズデータ
     * @returns {Promise<Object>} 追加されたエクササイズ
     */
  }, {
    key: "addExercise",
    value: (function () {
      var _addExercise = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee20(exerciseData) {
        var result, _t11;
        return _regenerator().w(function (_context20) {
          while (1) switch (_context20.p = _context20.n) {
            case 0:
              _context20.p = 0;
              if (_supabaseService.supabaseService.isAvailable()) {
                _context20.n = 1;
                break;
              }
              throw new Error('Supabase not available');
            case 1:
              _context20.n = 2;
              return _supabaseService.supabaseService.saveData('exercises', exerciseData);
            case 2:
              result = _context20.v;
              this.clearCache(); // キャッシュをクリア
              return _context20.a(2, result);
            case 3:
              _context20.p = 3;
              _t11 = _context20.v;
              (0, _errorHandler.handleError)(_t11, 'ExerciseService.addExercise');
              throw _t11;
            case 4:
              return _context20.a(2);
          }
        }, _callee20, this, [[0, 3]]);
      }));
      function addExercise(_x12) {
        return _addExercise.apply(this, arguments);
      }
      return addExercise;
    }()
    /**
     * エクササイズを更新
     * @param {number} id - エクササイズID
     * @param {Object} exerciseData - 更新データ
     * @returns {Promise<Object>} 更新されたエクササイズ
     */
    )
  }, {
    key: "updateExercise",
    value: (function () {
      var _updateExercise = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee21(id, exerciseData) {
        var result, _t12;
        return _regenerator().w(function (_context21) {
          while (1) switch (_context21.p = _context21.n) {
            case 0:
              _context21.p = 0;
              if (_supabaseService.supabaseService.isAvailable()) {
                _context21.n = 1;
                break;
              }
              throw new Error('Supabase not available');
            case 1:
              _context21.n = 2;
              return _supabaseService.supabaseService.saveData('exercises', _objectSpread(_objectSpread({}, exerciseData), {}, {
                id: id
              }));
            case 2:
              result = _context21.v;
              this.clearCache(); // キャッシュをクリア
              return _context21.a(2, result);
            case 3:
              _context21.p = 3;
              _t12 = _context21.v;
              (0, _errorHandler.handleError)(_t12, 'ExerciseService.updateExercise');
              throw _t12;
            case 4:
              return _context21.a(2);
          }
        }, _callee21, this, [[0, 3]]);
      }));
      function updateExercise(_x13, _x14) {
        return _updateExercise.apply(this, arguments);
      }
      return updateExercise;
    }()
    /**
     * エクササイズを削除
     * @param {number} id - エクササイズID
     * @returns {Promise<void>}
     */
    )
  }, {
    key: "deleteExercise",
    value: (function () {
      var _deleteExercise = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee22(id) {
        var _t13;
        return _regenerator().w(function (_context22) {
          while (1) switch (_context22.p = _context22.n) {
            case 0:
              _context22.p = 0;
              if (_supabaseService.supabaseService.isAvailable()) {
                _context22.n = 1;
                break;
              }
              throw new Error('Supabase not available');
            case 1:
              _context22.n = 2;
              return _supabaseService.supabaseService.saveData('exercises', {
                id: id,
                deleted: true
              });
            case 2:
              this.clearCache(); // キャッシュをクリア
              _context22.n = 4;
              break;
            case 3:
              _context22.p = 3;
              _t13 = _context22.v;
              (0, _errorHandler.handleError)(_t13, 'ExerciseService.deleteExercise');
              throw _t13;
            case 4:
              return _context22.a(2);
          }
        }, _callee22, this, [[0, 3]]);
      }));
      function deleteExercise(_x15) {
        return _deleteExercise.apply(this, arguments);
      }
      return deleteExercise;
    }())
  }]);
}(); // シングルトンインスタンスをエクスポート
var exerciseService = exports.exerciseService = new ExerciseService();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,