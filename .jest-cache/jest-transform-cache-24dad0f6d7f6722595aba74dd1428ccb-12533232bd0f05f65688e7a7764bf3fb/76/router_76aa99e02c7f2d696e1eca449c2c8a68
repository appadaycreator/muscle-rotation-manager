c1d5c864133ae7849e2261f8d059296c
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.router = exports["default"] = exports.Router = void 0;
var _helpers = require("./helpers.js");
var _lazyLoader = require("./lazyLoader.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } // router.js - ルーティング機能
var Router = exports.Router = /*#__PURE__*/function () {
  function Router() {
    _classCallCheck(this, Router);
    this.routes = new Map();
    this.currentRoute = null;
    this.pageCache = new Map();
    this.init();
  }

  /**
  * ルーターを初期化
  */
  return _createClass(Router, [{
    key: "init",
    value: function init() {
      var _this = this;
      // ルートを定義
      this.defineRoutes();

      // ブラウザの戻る/進むボタンに対応
      window.addEventListener('popstate', function (e) {
        var _e$state;
        console.log('🔄 Popstate event:', e.state);
        _this.handleRouteChange(((_e$state = e.state) === null || _e$state === void 0 ? void 0 : _e$state.route) || _this.getCurrentPath());
      });

      // 初期ルートを処理（少し遅延させてDOMの準備を待つ）
      setTimeout(function () {
        var currentPath = _this.getCurrentPath();
        console.log('🔄 Initial route:', currentPath);
        _this.handleRouteChange(currentPath);
      }, 100);

      // ナビゲーションリンクのクリックイベントを設定
      this.setupNavigationLinks();
    }

    /**
    * ナビゲーションリンクのクリックイベントを設定（MPA用）
    */
  }, {
    key: "setupNavigationLinks",
    value: function setupNavigationLinks() {
      // MPAではデフォルトのナビゲーションを使用
      // SPA的なルーティングは無効化
      console.log('🔄 MPA navigation: Using default browser navigation');
    }

    /**
    * ルートを定義
    */
  }, {
    key: "defineRoutes",
    value: function defineRoutes() {
      // ダッシュボード
      this.routes.set('/', {
        name: 'dashboard',
        title: 'ダッシュボード',
        component: 'dashboard',
        requiresAuth: true
      });

      // ワークアウト
      this.routes.set('/workout', {
        name: 'workout',
        title: 'ワークアウト',
        component: 'workout',
        requiresAuth: true
      });

      // カレンダー
      this.routes.set('/calendar', {
        name: 'calendar',
        title: 'カレンダー',
        component: 'calendar',
        requiresAuth: true
      });

      // 分析
      this.routes.set('/analysis', {
        name: 'analysis',
        title: '分析',
        component: 'analysis',
        requiresAuth: true
      });

      // プログレッシブ・オーバーロード
      this.routes.set('/progress', {
        name: 'progress',
        title: 'プログレッシブ・オーバーロード',
        component: 'progress',
        requiresAuth: true
      });

      // エクササイズデータベース
      this.routes.set('/exercises', {
        name: 'exercises',
        title: 'エクササイズデータベース',
        component: 'exercises',
        requiresAuth: true
      });

      // 設定
      this.routes.set('/settings', {
        name: 'settings',
        title: '設定',
        component: 'settings',
        requiresAuth: true
      });

      // 使い方
      this.routes.set('/help', {
        name: 'help',
        title: '使い方',
        component: 'help',
        requiresAuth: false
      });

      // プライバシーポリシー
      this.routes.set('/privacy', {
        name: 'privacy',
        title: 'プライバシーポリシー',
        component: 'privacy',
        requiresAuth: false
      });

      // 404エラー
      this.routes.set('/404', {
        name: '404',
        title: 'ページが見つかりません',
        component: '404',
        requiresAuth: false
      });
    }

    /**
    * 現在のパスを取得
    */
  }, {
    key: "getCurrentPath",
    value: function getCurrentPath() {
      return window.location.pathname;
    }

    /**
    * ルート変更を処理
    */
  }, {
    key: "handleRouteChange",
    value: (function () {
      var _handleRouteChange = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee(path) {
        var route, _t;
        return _regenerator().w(function (_context) {
          while (1) switch (_context.p = _context.n) {
            case 0:
              _context.p = 0;
              console.log('🔄 ルート変更:', path);

              // ルートを解決
              route = this.resolveRoute(path);
              if (route) {
                _context.n = 1;
                break;
              }
              console.warn('ルートが見つかりません:', path);
              this.show404Page();
              return _context.a(2);
            case 1:
              if (!(route.requiresAuth && !this.isAuthenticated())) {
                _context.n = 2;
                break;
              }
              this.navigateTo('/');
              (0, _helpers.showNotification)('ログインが必要です', 'warning');
              return _context.a(2);
            case 2:
              // ページタイトルを更新
              document.title = "".concat(route.title, " - MuscleRotationManager");

              // ページコンテンツを読み込み
              _context.n = 3;
              return this.loadPage(route);
            case 3:
              // ナビゲーション状態を更新
              this.updateNavigation(route.name);

              // ルート変更イベントを発火
              this.dispatchRouteChangeEvent(route);
              _context.n = 5;
              break;
            case 4:
              _context.p = 4;
              _t = _context.v;
              console.error('ルート変更エラー:', _t);
              this.navigateTo('/404');
            case 5:
              return _context.a(2);
          }
        }, _callee, this, [[0, 4]]);
      }));
      function handleRouteChange(_x) {
        return _handleRouteChange.apply(this, arguments);
      }
      return handleRouteChange;
    }()
    /**
    * ルートを解決
    */
    )
  }, {
    key: "resolveRoute",
    value: function resolveRoute(path) {
      // 完全一致
      if (this.routes.has(path)) {
        return this.routes.get(path);
      }

      // 動的ルートの処理（将来の拡張用）
      var _iterator = _createForOfIteratorHelper(this.routes),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var _step$value = _slicedToArray(_step.value, 2),
            routePath = _step$value[0],
            route = _step$value[1];
          if (this.matchDynamicRoute(routePath, path)) {
            return route;
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return null;
    }

    /**
    * 動的ルートのマッチング（将来の拡張用）
    */
  }, {
    key: "matchDynamicRoute",
    value: function matchDynamicRoute(routePath, path) {
      // 例: /workout/:id のような動的ルート
      var routeRegex = routePath.replace(/:\w+/g, '([^/]+)');
      var regex = new RegExp("^".concat(routeRegex, "$"));
      return regex.test(path);
    }

    /**
    * 認証状態をチェック
    */
  }, {
    key: "isAuthenticated",
    value: function isAuthenticated() {
      // 実際の認証チェックロジックを実装
      return localStorage.getItem('user') !== null;
    }

    /**
    * ページを読み込み
    */
  }, {
    key: "loadPage",
    value: (function () {
      var _loadPage = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2(route) {
        var mainContent, content, _mainContent, _t2, _t3;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.p = _context2.n) {
            case 0:
              _context2.p = 0;
              // メインコンテンツエリアを取得
              mainContent = document.getElementById('main-content');
              if (mainContent) {
                _context2.n = 1;
                break;
              }
              throw new Error('メインコンテンツエリアが見つかりません');
            case 1:
              _context2.n = 2;
              return this.loadPageContent(route.component);
            case 2:
              content = _context2.v;
              // コンテンツを挿入
              mainContent.innerHTML = content;

              // ページコンポーネントを初期化（エラーハンドリング付き）
              _context2.p = 3;
              _context2.n = 4;
              return this.initializePageComponent(route);
            case 4:
              _context2.n = 6;
              break;
            case 5:
              _context2.p = 5;
              _t2 = _context2.v;
              console.warn("\u30DA\u30FC\u30B8\u30B3\u30F3\u30DD\u30FC\u30CD\u30F3\u30C8\u521D\u671F\u5316\u306B\u5931\u6557\u3057\u307E\u3057\u305F (".concat(route.component, "):"), _t2);
              // コンポーネント初期化に失敗してもページは表示される
            case 6:
              _context2.n = 8;
              break;
            case 7:
              _context2.p = 7;
              _t3 = _context2.v;
              console.error('ページ読み込みエラー:', _t3);
              // エラーページを表示
              _mainContent = document.getElementById('main-content');
              if (_mainContent) {
                _mainContent.innerHTML = this.getErrorPage();
              }
              throw _t3;
            case 8:
              return _context2.a(2);
          }
        }, _callee2, this, [[3, 5], [0, 7]]);
      }));
      function loadPage(_x2) {
        return _loadPage.apply(this, arguments);
      }
      return loadPage;
    }()
    /**
    * ページコンテンツを読み込み
    */
    )
  }, {
    key: "loadPageContent",
    value: (function () {
      var _loadPageContent = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3(componentName) {
        var response, retryResponse, _content, content, _t4;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.p = _context3.n) {
            case 0:
              if (!this.pageCache.has(componentName)) {
                _context3.n = 1;
                break;
              }
              return _context3.a(2, this.pageCache.get(componentName));
            case 1:
              _context3.p = 1;
              _context3.n = 2;
              return fetch("partials/".concat(componentName, ".html"));
            case 2:
              response = _context3.v;
              if (!(response.status === 503)) {
                _context3.n = 7;
                break;
              }
              console.warn("503 Service Unavailable for ".concat(componentName, ", retrying..."));
              _context3.n = 3;
              return this.delay(1000);
            case 3:
              _context3.n = 4;
              return fetch("partials/".concat(componentName, ".html"));
            case 4:
              retryResponse = _context3.v;
              if (retryResponse.ok) {
                _context3.n = 5;
                break;
              }
              throw new Error("Failed to load partials/".concat(componentName, ".html after retry"));
            case 5:
              _context3.n = 6;
              return retryResponse.text();
            case 6:
              _content = _context3.v;
              this.pageCache.set(componentName, _content);
              return _context3.a(2, _content);
            case 7:
              if (response.ok) {
                _context3.n = 8;
                break;
              }
              throw new Error("Failed to load partials/".concat(componentName, ".html"));
            case 8:
              _context3.n = 9;
              return response.text();
            case 9:
              content = _context3.v;
              this.pageCache.set(componentName, content);
              return _context3.a(2, content);
            case 10:
              _context3.p = 10;
              _t4 = _context3.v;
              console.error("\u30DA\u30FC\u30B8\u30B3\u30F3\u30C6\u30F3\u30C4\u8AAD\u307F\u8FBC\u307F\u30A8\u30E9\u30FC (".concat(componentName, "):"), _t4);
              // 503エラーの場合は専用ページを表示
              if (!(_t4.message.includes('503') || _t4.message.includes('Service Unavailable'))) {
                _context3.n = 11;
                break;
              }
              return _context3.a(2, this.get503ErrorPage());
            case 11:
              return _context3.a(2, this.getErrorPage());
          }
        }, _callee3, this, [[1, 10]]);
      }));
      function loadPageContent(_x3) {
        return _loadPageContent.apply(this, arguments);
      }
      return loadPageContent;
    }()
    /**
    * 遅延処理
    */
    )
  }, {
    key: "delay",
    value: function delay(ms) {
      return new Promise(function (resolve) {
        return setTimeout(resolve, ms);
      });
    }

    /**
    * エラーページを取得
    */
  }, {
    key: "getErrorPage",
    value: function getErrorPage() {
      return "\n            <div class=\"page-content\">\n                <div class=\"text-center text-gray-500 py-8\">\n                    <i class=\"fas fa-exclamation-triangle text-4xl mb-4\"></i>\n                    <h2 class=\"text-2xl font-bold mb-2\">\u30DA\u30FC\u30B8\u306E\u8AAD\u307F\u8FBC\u307F\u306B\u5931\u6557\u3057\u307E\u3057\u305F</h2>\n                    <p class=\"mb-4\">\u3057\u3070\u3089\u304F\u6642\u9593\u3092\u304A\u3044\u3066\u304B\u3089\u518D\u5EA6\u304A\u8A66\u3057\u304F\u3060\u3055\u3044\u3002</p>\n                    <button onclick=\"router.navigateTo('/')\" class=\"btn-primary\">\n                        <i class=\"fas fa-home mr-2\"></i>\u30DB\u30FC\u30E0\u306B\u623B\u308B\n                    </button>\n                </div>\n            </div>\n        ";
    }

    /**
    * 503エラー専用ページを取得
    */
  }, {
    key: "get503ErrorPage",
    value: function get503ErrorPage() {
      return "\n            <div class=\"page-content\">\n                <div class=\"text-center text-gray-500 py-8\">\n                    <i class=\"fas fa-server text-4xl mb-4\"></i>\n                    <h2 class=\"text-2xl font-bold mb-2\">\u30B5\u30FC\u30D3\u30B9\u304C\u4E00\u6642\u7684\u306B\u5229\u7528\u3067\u304D\u307E\u305B\u3093</h2>\n                    <p class=\"mb-4\">\u30B5\u30FC\u30D0\u30FC\u304C\u4E00\u6642\u7684\u306B\u904E\u8CA0\u8377\u72B6\u614B\u3067\u3059\u3002\u3057\u3070\u3089\u304F\u6642\u9593\u3092\u304A\u3044\u3066\u304B\u3089\u518D\u5EA6\u304A\u8A66\u3057\u304F\u3060\u3055\u3044\u3002</p>\n                    <div class=\"space-x-4\">\n                        <button onclick=\"router.navigateTo('/')\" class=\"btn-primary\">\n                            <i class=\"fas fa-home mr-2\"></i>\u30DB\u30FC\u30E0\u306B\u623B\u308B\n                        </button>\n                        <button onclick=\"location.reload()\" class=\"btn-secondary\">\n                            <i class=\"fas fa-redo mr-2\"></i>\u518D\u8AAD\u307F\u8FBC\u307F\n                        </button>\n                    </div>\n                </div>\n            </div>\n        ";
    }

    /**
    * ページコンポーネントを初期化
    */
  }, {
    key: "initializePageComponent",
    value: (function () {
      var _initializePageComponent = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4(route) {
        var pageModule, _t5;
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.p = _context4.n) {
            case 0:
              _context4.p = 0;
              _context4.n = 1;
              return _lazyLoader.lazyLoader.loadPageModule(route.component);
            case 1:
              pageModule = _context4.v;
              if (!(pageModule && typeof pageModule.initialize === 'function')) {
                _context4.n = 2;
                break;
              }
              _context4.n = 2;
              return pageModule.initialize();
            case 2:
              _context4.n = 4;
              break;
            case 3:
              _context4.p = 3;
              _t5 = _context4.v;
              console.error("\u30DA\u30FC\u30B8\u30B3\u30F3\u30DD\u30FC\u30CD\u30F3\u30C8\u521D\u671F\u5316\u30A8\u30E9\u30FC (".concat(route.component, "):"), _t5);
              // エラーが発生した場合は、ページコンテンツを再読み込み
              this.reloadPageContent(route.component);
            case 4:
              return _context4.a(2);
          }
        }, _callee4, this, [[0, 3]]);
      }));
      function initializePageComponent(_x4) {
        return _initializePageComponent.apply(this, arguments);
      }
      return initializePageComponent;
    }()
    /**
    * ページコンテンツを再読み込み
    */
    )
  }, {
    key: "reloadPageContent",
    value: (function () {
      var _reloadPageContent = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5(componentName) {
        var mainContent, content, route, _t6;
        return _regenerator().w(function (_context5) {
          while (1) switch (_context5.p = _context5.n) {
            case 0:
              _context5.p = 0;
              mainContent = document.getElementById('main-content');
              if (mainContent) {
                _context5.n = 1;
                break;
              }
              console.error('メインコンテンツエリアが見つかりません');
              return _context5.a(2);
            case 1:
              _context5.n = 2;
              return this.loadPageContent(componentName);
            case 2:
              content = _context5.v;
              mainContent.innerHTML = content;

              // ページコンポーネントを再初期化
              route = this.routes.get("/".concat(componentName));
              if (!route) {
                _context5.n = 3;
                break;
              }
              _context5.n = 3;
              return this.initializePageComponent(route);
            case 3:
              _context5.n = 5;
              break;
            case 4:
              _context5.p = 4;
              _t6 = _context5.v;
              console.error("\u30DA\u30FC\u30B8\u30B3\u30F3\u30C6\u30F3\u30C4\u518D\u8AAD\u307F\u8FBC\u307F\u30A8\u30E9\u30FC (".concat(componentName, "):"), _t6);
            case 5:
              return _context5.a(2);
          }
        }, _callee5, this, [[0, 4]]);
      }));
      function reloadPageContent(_x5) {
        return _reloadPageContent.apply(this, arguments);
      }
      return reloadPageContent;
    }()
    /**
    * ナビゲーション状態を更新
    */
    )
  }, {
    key: "updateNavigation",
    value: function updateNavigation(activePageName) {
      // ナビゲーションアイテムのアクティブ状態を更新
      document.querySelectorAll('.nav-item').forEach(function (item) {
        item.classList.remove('active');
      });

      // アクティブなナビゲーションアイテムをハイライト
      var activeNavItem = document.querySelector("[data-page=\"".concat(activePageName, "\"]"));
      if (activeNavItem) {
        activeNavItem.classList.add('active');
      }
    }

    /**
    * ルート変更イベントを発火
    */
  }, {
    key: "dispatchRouteChangeEvent",
    value: function dispatchRouteChangeEvent(route) {
      var event = new CustomEvent('routechange', {
        detail: {
          route: route,
          path: this.getCurrentPath()
        }
      });
      window.dispatchEvent(event);
    }

    /**
    * 指定されたルートにナビゲート
    */
  }, {
    key: "navigateTo",
    value: function navigateTo(path) {
      if (path === this.getCurrentPath()) {
        return; // 同じページの場合は何もしない
      }

      // 個別HTMLファイルへの直接ナビゲーションをチェック
      if (this.isDirectHtmlFile(path)) {
        window.location.href = path;
        return;
      }

      // 履歴に追加
      window.history.pushState({
        route: path
      }, '', path);

      // ルート変更を処理
      this.handleRouteChange(path);
    }

    /**
    * 個別HTMLファイルへの直接ナビゲーションかチェック
    */
  }, {
    key: "isDirectHtmlFile",
    value: function isDirectHtmlFile(path) {
      // .html拡張子がある場合のみHTMLファイルとして扱う
      return path.endsWith('.html');
    }

    /**
    * 404ページを表示
    */
  }, {
    key: "show404Page",
    value: function show404Page() {
      var mainContent = document.getElementById('main-content');
      if (mainContent) {
        mainContent.innerHTML = "\n            <div class=\"page-content\">\n                <div class=\"text-center text-gray-500 py-8\">\n                    <i class=\"fas fa-exclamation-triangle text-4xl mb-4\"></i>\n                    <h2 class=\"text-2xl font-bold mb-2\">404 - \u30DA\u30FC\u30B8\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093</h2>\n                    <p class=\"mb-4\">\u304A\u63A2\u3057\u306E\u30DA\u30FC\u30B8\u306F\u5B58\u5728\u3057\u306A\u3044\u304B\u3001\u79FB\u52D5\u3055\u308C\u305F\u53EF\u80FD\u6027\u304C\u3042\u308A\u307E\u3059\u3002</p>\n                    <div class=\"flex justify-center space-x-4\">\n                        <button onclick=\"router.navigateTo('/')\" class=\"btn-primary\">\n                            <i class=\"fas fa-home mr-2\"></i>\u30DB\u30FC\u30E0\u306B\u623B\u308B\n                        </button>\n                        <button onclick=\"window.history.back()\" class=\"btn-secondary\">\n                            <i class=\"fas fa-arrow-left mr-2\"></i>\u524D\u306E\u30DA\u30FC\u30B8\u306B\u623B\u308B\n                        </button>\n                    </div>\n                </div>\n            </div>\n        ";

        // ページタイトルを更新
        document.title = '404 - ページが見つかりません - MuscleRotationManager';
      }
    }

    /**
    * 指定されたルートに置換（履歴に追加しない）
    */
  }, {
    key: "replaceTo",
    value: function replaceTo(path) {
      window.history.replaceState({
        route: path
      }, '', path);
      this.handleRouteChange(path);
    }

    /**
    * 前のページに戻る
    */
  }, {
    key: "goBack",
    value: function goBack() {
      window.history.back();
    }

    /**
    * 次のページに進む
    */
  }, {
    key: "goForward",
    value: function goForward() {
      window.history.forward();
    }

    /**
    * 現在のルート情報を取得
    */
  }, {
    key: "getCurrentRoute",
    value: function getCurrentRoute() {
      return this.currentRoute;
    }

    /**
    * ルートキャッシュをクリア
    */
  }, {
    key: "clearCache",
    value: function clearCache() {
      this.pageCache.clear();
      console.log('🔄 Router cache cleared');
    }

    /**
    * 完全なキャッシュクリア
    */
  }, {
    key: "clearAllCache",
    value: function clearAllCache() {
      // ルーターキャッシュをクリア
      this.pageCache.clear();

      // ローカルストレージをクリア
      if (typeof localStorage !== 'undefined') {
        localStorage.clear();
        console.log('🔄 Local storage cleared');
      }

      // セッションストレージをクリア
      if (typeof sessionStorage !== 'undefined') {
        sessionStorage.clear();
        console.log('🔄 Session storage cleared');
      }

      // Service Workerをクリア
      if ('serviceWorker' in navigator) {
        navigator.serviceWorker.getRegistrations().then(function (registrations) {
          registrations.forEach(function (registration) {
            registration.unregister();
          });
          console.log('🔄 Service workers cleared');
        });
      }

      // ブラウザキャッシュをクリア
      if ('caches' in window) {
        window.caches.keys().then(function (names) {
          names.forEach(function (name) {
            window.caches["delete"](name);
          });
          console.log('🔄 Browser caches cleared');
        });
      }
      console.log('🔄 All caches cleared successfully');
    }

    /**
    * 特定のページのキャッシュをクリア
    */
  }, {
    key: "clearPageCache",
    value: function clearPageCache(pageName) {
      this.pageCache["delete"](pageName);
    }
  }]);
}(); // グローバルルーターインスタンスを作成
var router = exports.router = new Router();

// グローバルに公開
window.router = router;

// Routerクラスとrouterインスタンスをエクスポート
// デフォルトエクスポートとしてrouterインスタンスを提供
var _default = exports["default"] = router; // グローバルキャッシュクリア機能を追加
window.clearAllCache = function () {
  router.clearAllCache();
  console.log('🔄 すべてのキャッシュがクリアされました');
};

// デバッグ用のグローバル関数
window.debugRouter = function () {
  console.log('🔍 Router Debug Info:');
  console.log('Current path:', router.getCurrentPath());
  console.log('Current route:', router.getCurrentRoute());
  console.log('Available routes:', Array.from(router.routes.keys()));
  console.log('Page cache size:', router.pageCache.size);
  console.log('Page cache keys:', Array.from(router.pageCache.keys()));
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,