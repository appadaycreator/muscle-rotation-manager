{"version":3,"names":["_DevTools","require","describe","devTools","beforeEach","DevTools","afterEach","jest","clearAllMocks","it","expect","isInitialized","toBe","performanceObserver","toBeNull","errorObserver","result","initialize","setupPerformanceMonitoring","toBeDefined","setupErrorTracking","setupNetworkMonitoring","setupMemoryMonitoring","performanceData","name","duration","startTime","Date","now","logPerformance","errorData","message","stack","timestamp","logError","networkData","url","method","status","logNetwork","memoryData","used","total","logMemory"],"sources":["devTools.test.js"],"sourcesContent":["// tests/unit/DevTools.test.js - DevToolsのテスト\n\nimport { DevTools } from '../../js/utils/DevTools.js';\n\ndescribe('DevTools', () => {\n  let devTools;\n\n  beforeEach(() => {\n    devTools = new DevTools();\n  });\n\n  afterEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('constructor', () => {\n    it('should initialize with default values', () => {\n      expect(devTools.isInitialized).toBe(false);\n      expect(devTools.performanceObserver).toBeNull();\n      expect(devTools.errorObserver).toBeNull();\n    });\n  });\n\n  describe('initialize', () => {\n    it('should initialize successfully', () => {\n      const result = devTools.initialize();\n\n      expect(result).toBe(true);\n      expect(devTools.isInitialized).toBe(true);\n    });\n\n    it('should not initialize if already initialized', () => {\n      devTools.isInitialized = true;\n\n      const result = devTools.initialize();\n\n      expect(result).toBe(false);\n    });\n  });\n\n  describe('setupPerformanceMonitoring', () => {\n    it('should setup performance monitoring', () => {\n      devTools.setupPerformanceMonitoring();\n\n      expect(devTools.performanceObserver).toBeDefined();\n    });\n  });\n\n  describe('setupErrorTracking', () => {\n    it('should setup error tracking', () => {\n      devTools.setupErrorTracking();\n\n      expect(devTools.errorObserver).toBeDefined();\n    });\n  });\n\n  describe('setupNetworkMonitoring', () => {\n    it('should setup network monitoring', () => {\n      devTools.setupNetworkMonitoring();\n\n      // Network monitoring setup should complete without errors\n      expect(devTools.isInitialized).toBe(false); // Not initialized yet\n    });\n  });\n\n  describe('setupMemoryMonitoring', () => {\n    it('should setup memory monitoring', () => {\n      devTools.setupMemoryMonitoring();\n\n      // Memory monitoring setup should complete without errors\n      expect(devTools.isInitialized).toBe(false); // Not initialized yet\n    });\n  });\n\n  describe('logPerformance', () => {\n    it('should log performance data', () => {\n      const performanceData = {\n        name: 'test-performance',\n        duration: 100,\n        startTime: Date.now(),\n      };\n\n      devTools.logPerformance(performanceData);\n\n      // Should complete without errors\n      expect(performanceData.name).toBe('test-performance');\n    });\n  });\n\n  describe('logError', () => {\n    it('should log error data', () => {\n      const errorData = {\n        message: 'Test error',\n        stack: 'Error stack trace',\n        timestamp: Date.now(),\n      };\n\n      devTools.logError(errorData);\n\n      // Should complete without errors\n      expect(errorData.message).toBe('Test error');\n    });\n  });\n\n  describe('logNetwork', () => {\n    it('should log network data', () => {\n      const networkData = {\n        url: 'https://example.com',\n        method: 'GET',\n        status: 200,\n        duration: 150,\n      };\n\n      devTools.logNetwork(networkData);\n\n      // Should complete without errors\n      expect(networkData.url).toBe('https://example.com');\n    });\n  });\n\n  describe('logMemory', () => {\n    it('should log memory data', () => {\n      const memoryData = {\n        used: 1000000,\n        total: 2000000,\n        timestamp: Date.now(),\n      };\n\n      devTools.logMemory(memoryData);\n\n      // Should complete without errors\n      expect(memoryData.used).toBe(1000000);\n    });\n  });\n\n  describe('integration', () => {\n    it('should handle complete dev tools setup', () => {\n      const result = devTools.initialize();\n\n      expect(result).toBe(true);\n      expect(devTools.isInitialized).toBe(true);\n\n      // Test logging\n      devTools.logPerformance({ name: 'test', duration: 100 });\n      devTools.logError({ message: 'test error' });\n      devTools.logNetwork({ url: 'https://test.com' });\n      devTools.logMemory({ used: 1000, total: 2000 });\n\n      // Should complete without errors\n      expect(devTools.isInitialized).toBe(true);\n    });\n  });\n});\n"],"mappings":"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","ignoreList":[]}