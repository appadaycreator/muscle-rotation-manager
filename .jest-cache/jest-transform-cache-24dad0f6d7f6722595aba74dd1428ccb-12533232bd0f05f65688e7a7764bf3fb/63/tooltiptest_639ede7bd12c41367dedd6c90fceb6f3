4532b1dbb51fd02cb4faba31aa543dae
"use strict";

var _TooltipManager = require("../../js/utils/TooltipManager.js");
// DOM環境のモック
var mockElement = {
  getAttribute: jest.fn(),
  setAttribute: jest.fn(),
  removeAttribute: jest.fn(),
  getBoundingClientRect: jest.fn(function () {
    return {
      left: 0,
      top: 0,
      width: 100,
      height: 50,
      right: 100,
      bottom: 50
    };
  }),
  matches: jest.fn(function () {
    return true;
  }),
  closest: jest.fn(),
  parentNode: {
    removeChild: jest.fn()
  }
};
var mockContainer = {
  id: '',
  className: '',
  innerHTML: '',
  style: {
    cssText: '',
    opacity: '0'
  },
  appendChild: jest.fn(),
  remove: jest.fn(),
  getBoundingClientRect: jest.fn(function () {
    return {
      width: 200,
      height: 100
    };
  })
};
Object.defineProperty(document, 'getElementById', {
  value: jest.fn(function () {
    return mockContainer;
  })
});
Object.defineProperty(document, 'createElement', {
  value: jest.fn(function () {
    return mockContainer;
  })
});
Object.defineProperty(document, 'addEventListener', {
  value: jest.fn()
});
Object.defineProperty(window, 'addEventListener', {
  value: jest.fn()
});
Object.defineProperty(document.body, 'appendChild', {
  value: jest.fn()
});
describe('TooltipManager', function () {
  beforeEach(function () {
    jest.clearAllMocks();
  });
  describe('constructor', function () {
    test('should initialize with default values', function () {
      expect(_TooltipManager.tooltipManager.activeTooltip).toBeNull();
      expect(_TooltipManager.tooltipManager.isInitialized).toBe(false);
      expect(_TooltipManager.tooltipManager.config).toBeDefined();
    });
  });
  describe('initialize', function () {
    test('should initialize tooltip manager', function () {
      jest.spyOn(_TooltipManager.tooltipManager, 'createContainer').mockImplementation(function () {});
      jest.spyOn(_TooltipManager.tooltipManager, 'setupEventListeners').mockImplementation(function () {});
      _TooltipManager.tooltipManager.initialize();
      expect(_TooltipManager.tooltipManager.isInitialized).toBe(true);
    });
    test('should not initialize if already initialized', function () {
      _TooltipManager.tooltipManager.isInitialized = true;
      _TooltipManager.tooltipManager.initialize();
      expect(_TooltipManager.tooltipManager.isInitialized).toBe(true);
    });
  });
  describe('addTooltip', function () {
    test('should add tooltip to element', function () {
      var element = mockElement;
      var text = 'Test tooltip';
      _TooltipManager.tooltipManager.addTooltip(element, text);
      expect(element.setAttribute).toHaveBeenCalledWith('data-tooltip', text);
    });
    test('should not add tooltip if element or text is missing', function () {
      _TooltipManager.tooltipManager.addTooltip(null, 'Test');
      _TooltipManager.tooltipManager.addTooltip(mockElement, null);

      // エラーが発生しないことを確認
      expect(true).toBe(true);
    });
  });
  describe('destroy', function () {
    test('should destroy tooltip manager', function () {
      _TooltipManager.tooltipManager.isInitialized = true;
      _TooltipManager.tooltipManager.destroy();
      expect(_TooltipManager.tooltipManager.isInitialized).toBe(false);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,