4d8a88c3c4d3bdda2213b5c890cf3e20
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.AnalysisPage = void 0;
var _authManager = require("../modules/authManager.js");
var _workoutDataService = require("../services/workoutDataService.js");
var _progressiveOverloadService = require("../services/progressiveOverloadService.js");
var _helpers = require("../utils/helpers.js");
var _errorHandler = require("../utils/errorHandler.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2)); }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } // analysisPage.js - 分析ページの機能
var AnalysisPage = exports.AnalysisPage = /*#__PURE__*/function () {
  function AnalysisPage() {
    _classCallCheck(this, AnalysisPage);
    this.workoutData = [];
    this.charts = {};
    this.isLoading = false;
    this.progressiveOverloadData = null;
    this.selectedExercise = null;
    this.selectedMuscleGroup = null;
    this.analysisPeriod = 90; // デフォルト90日
  }

  /**
   * 分析ページを初期化
   */
  return _createClass(AnalysisPage, [{
    key: "initialize",
    value: (function () {
      var _initialize = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {
        var _this = this;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              console.log('Analysis page initialized');

              // 認証チェックをスキップして分析ページを表示
              _context2.n = 1;
              return (0, _helpers.safeAsync)(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {
                return _regenerator().w(function (_context) {
                  while (1) switch (_context.n) {
                    case 0:
                      // 分析ページのコンテンツを表示
                      _this.renderAnalysisPage();
                      _context.n = 1;
                      return _this.loadWorkoutData();
                    case 1:
                      _context.n = 2;
                      return _this.loadProgressiveOverloadData();
                    case 2:
                      _this.renderStatistics();
                      _this.renderProgressiveOverloadSection();
                      _this.renderCharts();
                      _this.generateAnalysisReport();
                      _this.setupEventListeners();
                    case 3:
                      return _context.a(2);
                  }
                }, _callee);
              })), '分析ページの初期化', function (error) {
                (0, _errorHandler.handleError)(error, {
                  context: '分析ページ初期化',
                  showNotification: true
                });
              });
            case 1:
              return _context2.a(2);
          }
        }, _callee2);
      }));
      function initialize() {
        return _initialize.apply(this, arguments);
      }
      return initialize;
    }()
    /**
     * ログインプロンプトを表示
     */
    )
  }, {
    key: "showLoginPrompt",
    value: function showLoginPrompt() {
      var mainContent = (0, _helpers.safeGetElement)('#main-content');
      if (!mainContent) {
        return;
      }
      mainContent.innerHTML = "\n            <div class=\"min-h-screen flex items-center justify-center bg-gray-50\">\n                <div class=\"max-w-md w-full bg-white rounded-lg shadow-md p-6 text-center\">\n                    <div class=\"mb-6\">\n                        <div class=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-blue-100 mb-4\">\n                            <svg class=\"h-6 w-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"></path>\n                            </svg>\n                        </div>\n                        <h2 class=\"text-2xl font-bold text-gray-900 mb-2\">\u30ED\u30B0\u30A4\u30F3\u304C\u5FC5\u8981\u3067\u3059</h2>\n                        <p class=\"text-gray-600 mb-6\">\u5206\u6790\u6A5F\u80FD\u3092\u4F7F\u7528\u3059\u308B\u306B\u306F\u30ED\u30B0\u30A4\u30F3\u3057\u3066\u304F\u3060\u3055\u3044\u3002</p>\n                    </div>\n                    <div class=\"space-y-3\">\n                        <button id=\"login-btn\" class=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors\">\n                            \u30ED\u30B0\u30A4\u30F3\n                        </button>\n                        <button onclick=\"window.location.href='/index.html'\" class=\"w-full bg-gray-200 text-gray-800 py-2 px-4 rounded-md hover:bg-gray-300 transition-colors\">\n                            \u30DB\u30FC\u30E0\u306B\u623B\u308B\n                        </button>\n                    </div>\n                </div>\n            </div>\n        ";

      // ログインボタンのイベントリスナーを設定
      var loginBtn = document.getElementById('login-btn');
      if (loginBtn) {
        loginBtn.addEventListener('click', function () {
          _authManager.authManager.showAuthModal('login');
        });
      }
    }

    /**
     * 分析ページのコンテンツを表示
     */
  }, {
    key: "renderAnalysisPage",
    value: function renderAnalysisPage() {
      var mainContent = (0, _helpers.safeGetElement)('#main-content');
      if (!mainContent) {
        return;
      }
      mainContent.innerHTML = "\n            <div class=\"mb-8\">\n                <h1 class=\"text-3xl font-bold text-gray-900\">\u5206\u6790</h1>\n                <p class=\"mt-2 text-gray-600\">\u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u30C7\u30FC\u30BF\u3092\u5206\u6790\u3057\u3001\u9032\u6357\u3092\u53EF\u8996\u5316\u3057\u307E\u3057\u3087\u3046</p>\n            </div>\n\n            <!-- \u7DCF\u5408\u7D71\u8A08 -->\n            <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n                <div class=\"bg-white overflow-hidden shadow rounded-lg\">\n                    <div class=\"p-5\">\n                        <div class=\"flex items-center\">\n                            <div class=\"flex-shrink-0\">\n                                <i class=\"fas fa-dumbbell text-2xl text-blue-600\"></i>\n                            </div>\n                            <div class=\"ml-5 w-0 flex-1\">\n                                <dl>\n                                    <dt class=\"text-sm font-medium text-gray-500 truncate\">\u7DCF\u30EF\u30FC\u30AF\u30A2\u30A6\u30C8\u6570</dt>\n                                    <dd class=\"text-lg font-medium text-gray-900\" id=\"total-workouts\">0</dd>\n                                </dl>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"bg-white overflow-hidden shadow rounded-lg\">\n                    <div class=\"p-5\">\n                        <div class=\"flex items-center\">\n                            <div class=\"flex-shrink-0\">\n                                <i class=\"fas fa-clock text-2xl text-green-600\"></i>\n                            </div>\n                            <div class=\"ml-5 w-0 flex-1\">\n                                <dl>\n                                    <dt class=\"text-sm font-medium text-gray-500 truncate\">\u7DCF\u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u6642\u9593</dt>\n                                    <dd class=\"text-lg font-medium text-gray-900\" id=\"total-hours\">0\u6642\u9593</dd>\n                                </dl>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"bg-white overflow-hidden shadow rounded-lg\">\n                    <div class=\"p-5\">\n                        <div class=\"flex items-center\">\n                            <div class=\"flex-shrink-0\">\n                                <i class=\"fas fa-chart-line text-2xl text-purple-600\"></i>\n                            </div>\n                            <div class=\"ml-5 w-0 flex-1\">\n                                <dl>\n                                    <dt class=\"text-sm font-medium text-gray-500 truncate\">\u5E73\u5747\u30BB\u30C3\u30B7\u30E7\u30F3\u6642\u9593</dt>\n                                    <dd class=\"text-lg font-medium text-gray-900\" id=\"avg-session-time\">0\u6642\u9593</dd>\n                                </dl>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- \u7B4B\u8089\u90E8\u4F4D\u5225\u7D71\u8A08 -->\n            <div class=\"bg-white shadow rounded-lg mb-8\">\n                <div class=\"px-4 py-5 sm:p-6\">\n                    <h3 class=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\u7B4B\u8089\u90E8\u4F4D\u5225\u7D71\u8A08</h3>\n                    <div id=\"muscle-group-stats\">\n                        <div class=\"text-center text-gray-500 py-4\">\n                            <i class=\"fas fa-spinner fa-spin text-xl mb-2\"></i>\n                            <p>\u7D71\u8A08\u30C7\u30FC\u30BF\u3092\u8AAD\u307F\u8FBC\u307F\u4E2D...</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- \u30D7\u30ED\u30B0\u30EC\u30C3\u30B7\u30D6\u30FB\u30AA\u30FC\u30D0\u30FC\u30ED\u30FC\u30C9\u5206\u6790 -->\n            <div class=\"bg-white shadow rounded-lg mb-8\">\n                <div class=\"px-4 py-5 sm:p-6\">\n                    <div class=\"flex justify-between items-center mb-4\">\n                        <h3 class=\"text-lg leading-6 font-medium text-gray-900\">\u30D7\u30ED\u30B0\u30EC\u30C3\u30B7\u30D6\u30FB\u30AA\u30FC\u30D0\u30FC\u30ED\u30FC\u30C9\u5206\u6790</h3>\n                        <div class=\"flex items-center space-x-2\">\n                            <label class=\"text-sm text-gray-600\">\u671F\u9593:</label>\n                            <select id=\"analysis-period\" class=\"border border-gray-300 rounded-md px-2 py-1 text-sm\">\n                                <option value=\"30\">30\u65E5</option>\n                                <option value=\"60\">60\u65E5</option>\n                                <option value=\"90\" selected>90\u65E5</option>\n                                <option value=\"180\">180\u65E5</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div id=\"progressive-overload-content\">\n                        <div class=\"text-center text-gray-500 py-4\">\n                            <i class=\"fas fa-spinner fa-spin text-xl mb-2\"></i>\n                            <p>\u30D7\u30ED\u30B0\u30EC\u30C3\u30B7\u30D6\u30FB\u30AA\u30FC\u30D0\u30FC\u30ED\u30FC\u30C9\u5206\u6790\u3092\u8AAD\u307F\u8FBC\u307F\u4E2D...</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- \u9032\u6B69\u7D71\u8A08 -->\n            <div class=\"bg-white shadow rounded-lg mb-8\">\n                <div class=\"px-4 py-5 sm:p-6\">\n                    <h3 class=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\u9032\u6B69\u7D71\u8A08</h3>\n                    <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                        <div class=\"text-center\">\n                            <div class=\"text-2xl font-bold text-green-600\" id=\"strength-progress\">-</div>\n                            <div class=\"text-sm text-gray-500\">\u7B4B\u529B\u5411\u4E0A\u7387</div>\n                        </div>\n                        <div class=\"text-center\">\n                            <div class=\"text-2xl font-bold text-blue-600\" id=\"endurance-progress\">-</div>\n                            <div class=\"text-sm text-gray-500\">\u6301\u4E45\u529B\u5411\u4E0A\u7387</div>\n                        </div>\n                        <div class=\"text-center\">\n                            <div class=\"text-2xl font-bold text-purple-600\" id=\"overall-score\">-</div>\n                            <div class=\"text-sm text-gray-500\">\u7DCF\u5408\u30B9\u30B3\u30A2</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- \u9032\u6357\u30B0\u30E9\u30D5 -->\n            <div class=\"bg-white shadow rounded-lg mb-8\">\n                <div class=\"px-4 py-5 sm:p-6\">\n                    <h3 class=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\u9032\u6357\u30B0\u30E9\u30D5</h3>\n                    <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                        <!-- \u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u983B\u5EA6\u30B0\u30E9\u30D5 -->\n                        <div>\n                            <h4 class=\"text-md font-medium text-gray-700 mb-3\">\u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u983B\u5EA6</h4>\n                            <div class=\"h-64\">\n                                <canvas id=\"frequency-chart\"></canvas>\n                            </div>\n                        </div>\n                        \n                        <!-- \u90E8\u4F4D\u5225\u30B0\u30E9\u30D5 -->\n                        <div>\n                            <h4 class=\"text-md font-medium text-gray-700 mb-3\">\u90E8\u4F4D\u5225\u5206\u5E03</h4>\n                            <div class=\"h-64\">\n                                <canvas id=\"muscle-group-chart\"></canvas>\n                            </div>\n                        </div>\n                        \n                        <!-- \u91CD\u91CF\u9032\u6B69\u30B0\u30E9\u30D5 -->\n                        <div>\n                            <h4 class=\"text-md font-medium text-gray-700 mb-3\">\u91CD\u91CF\u9032\u6B69</h4>\n                            <div class=\"h-64\">\n                                <canvas id=\"weight-progress-chart\"></canvas>\n                            </div>\n                        </div>\n                        \n                        <!-- \u30BB\u30C3\u30C8\u6570\u9032\u6B69\u30B0\u30E9\u30D5 -->\n                        <div>\n                            <h4 class=\"text-md font-medium text-gray-700 mb-3\">\u30BB\u30C3\u30C8\u6570\u9032\u6B69</h4>\n                            <div class=\"h-64\">\n                                <canvas id=\"sets-progress-chart\"></canvas>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- \u8A73\u7D30\u7D71\u8A08 -->\n            <div class=\"bg-white shadow rounded-lg\">\n                <div class=\"px-4 py-5 sm:p-6\">\n                    <h3 class=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\u8A73\u7D30\u7D71\u8A08</h3>\n                    <div id=\"detailed-stats\">\n                        <div class=\"text-center text-gray-500 py-4\">\n                            <i class=\"fas fa-spinner fa-spin text-xl mb-2\"></i>\n                            <p>\u8A73\u7D30\u30C7\u30FC\u30BF\u3092\u8AAD\u307F\u8FBC\u307F\u4E2D...</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- \u5206\u6790\u30EC\u30DD\u30FC\u30C8 -->\n            <div class=\"bg-white shadow rounded-lg mt-8\">\n                <div class=\"px-4 py-5 sm:p-6\">\n                    <h3 class=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\u5206\u6790\u30EC\u30DD\u30FC\u30C8</h3>\n                    <div id=\"analysis-report\">\n                        <div class=\"text-center text-gray-500 py-4\">\n                            <i class=\"fas fa-spinner fa-spin text-xl mb-2\"></i>\n                            <p>\u30EC\u30DD\u30FC\u30C8\u3092\u751F\u6210\u4E2D...</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ";
    }

    /**
     * ワークアウトデータを読み込み
     */
  }, {
    key: "loadWorkoutData",
    value: (function () {
      var _loadWorkoutData = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {
        var _iterator, _step, workout, _t, _t2;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.p = _context3.n) {
            case 0:
              _context3.p = 0;
              this.isLoading = true;

              // ワークアウトデータサービスから読み込み
              _context3.n = 1;
              return _workoutDataService.workoutDataService.loadWorkouts({
                limit: 1000
              });
            case 1:
              this.workoutData = _context3.v;
              if (!(this.workoutData.length === 0)) {
                _context3.n = 8;
                break;
              }
              this.workoutData = this.generateSampleWorkoutData();

              // サンプルデータを保存
              _iterator = _createForOfIteratorHelper(this.workoutData);
              _context3.p = 2;
              _iterator.s();
            case 3:
              if ((_step = _iterator.n()).done) {
                _context3.n = 5;
                break;
              }
              workout = _step.value;
              _context3.n = 4;
              return _workoutDataService.workoutDataService.saveWorkout(workout);
            case 4:
              _context3.n = 3;
              break;
            case 5:
              _context3.n = 7;
              break;
            case 6:
              _context3.p = 6;
              _t = _context3.v;
              _iterator.e(_t);
            case 7:
              _context3.p = 7;
              _iterator.f();
              return _context3.f(7);
            case 8:
              console.log("Loaded ".concat(this.workoutData.length, " workouts for analysis"));
              _context3.n = 10;
              break;
            case 9:
              _context3.p = 9;
              _t2 = _context3.v;
              console.error('Error loading workout data:', _t2);
              this.workoutData = this.generateSampleWorkoutData();
              (0, _helpers.showNotification)('ワークアウトデータの読み込みに失敗しました', 'error');
            case 10:
              _context3.p = 10;
              this.isLoading = false;
              return _context3.f(10);
            case 11:
              return _context3.a(2);
          }
        }, _callee3, this, [[2, 6, 7, 8], [0, 9, 10, 11]]);
      }));
      function loadWorkoutData() {
        return _loadWorkoutData.apply(this, arguments);
      }
      return loadWorkoutData;
    }()
    /**
     * プログレッシブ・オーバーロードデータを読み込み
     */
    )
  }, {
    key: "loadProgressiveOverloadData",
    value: (function () {
      var _loadProgressiveOverloadData = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {
        var _t3;
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.p = _context4.n) {
            case 0:
              _context4.p = 0;
              console.log('Loading progressive overload data...');
              _context4.n = 1;
              return _progressiveOverloadService.progressiveOverloadService.getOverallProgress(this.analysisPeriod);
            case 1:
              this.progressiveOverloadData = _context4.v;
              console.log('Progressive overload data loaded:', this.progressiveOverloadData);
              _context4.n = 3;
              break;
            case 2:
              _context4.p = 2;
              _t3 = _context4.v;
              console.error('Error loading progressive overload data:', _t3);
              (0, _helpers.showNotification)('プログレッシブ・オーバーロードデータの読み込みに失敗しました', 'error');
            case 3:
              return _context4.a(2);
          }
        }, _callee4, this, [[0, 2]]);
      }));
      function loadProgressiveOverloadData() {
        return _loadProgressiveOverloadData.apply(this, arguments);
      }
      return loadProgressiveOverloadData;
    }()
    /**
     * サンプルワークアウトデータを生成
     * @returns {Array} サンプルワークアウトデータ配列
     */
    )
  }, {
    key: "generateSampleWorkoutData",
    value: function generateSampleWorkoutData() {
      var today = new Date();
      var sampleData = [];

      // 過去90日分のサンプルデータを生成
      for (var i = 0; i < 90; i++) {
        var date = new Date(today);
        date.setDate(date.getDate() - i);

        // 2-3日に1回の頻度でワークアウトを生成
        if (i % 2 === 0 || i % 3 === 0) {
          var muscleGroups = ['胸', '背中', '肩', '腕', '脚', '腹筋'];
          var randomMuscles = muscleGroups.sort(function () {
            return 0.5 - Math.random();
          }).slice(0, 2);

          // 重量の進歩をシミュレート
          var baseWeight = 80;
          var progressFactor = Math.max(0, (90 - i) / 90); // 時間とともに重量が増加
          var weight = Math.floor(baseWeight + progressFactor * 20);
          sampleData.push({
            id: "sample-".concat(i),
            date: date.toISOString().split('T')[0],
            muscle_groups: randomMuscles,
            exercises: [{
              name: 'ベンチプレス',
              sets: 3,
              reps: 10,
              weight: weight
            }, {
              name: 'プッシュアップ',
              sets: 3,
              reps: 15,
              weight: 0
            }],
            duration: 45 + Math.floor(Math.random() * 30),
            // 45-75分
            notes: 'サンプルワークアウト'
          });
        }
      }
      return sampleData;
    }

    /**
     * 統計情報をレンダリング
     */
  }, {
    key: "renderStatistics",
    value: function renderStatistics() {
      this.renderOverallStats();
      this.renderMuscleGroupStats();
      this.renderProgressStats();
    }

    /**
     * プログレッシブ・オーバーロードセクションをレンダリング
     */
  }, {
    key: "renderProgressiveOverloadSection",
    value: function renderProgressiveOverloadSection() {
      var _this2 = this;
      var container = (0, _helpers.safeGetElement)('#progressive-overload-content');
      if (!container) {
        console.warn('Progressive overload container not found');
        return;
      }
      if (!this.progressiveOverloadData) {
        container.innerHTML = "\n        <div class=\"text-center text-gray-500 py-4\">\n          <i class=\"fas fa-exclamation-triangle text-xl mb-2\"></i>\n          <p>\u30D7\u30ED\u30B0\u30EC\u30C3\u30B7\u30D6\u30FB\u30AA\u30FC\u30D0\u30FC\u30ED\u30FC\u30C9\u30C7\u30FC\u30BF\u304C\u3042\u308A\u307E\u305B\u3093</p>\n        </div>\n      ";
        return;
      }
      var data = this.progressiveOverloadData;
      container.innerHTML = "\n      <!-- \u7DCF\u5408\u30E1\u30C8\u30EA\u30AF\u30B9 -->\n      <div class=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n        <div class=\"text-center p-4 bg-blue-50 rounded-lg relative group\">\n          <div class=\"text-2xl font-bold text-blue-600\">".concat(data.totalWorkouts, "</div>\n          <div class=\"text-sm text-gray-600 flex items-center justify-center\">\n            \u7DCF\u30EF\u30FC\u30AF\u30A2\u30A6\u30C8\u6570\n            <i class=\"fas fa-info-circle ml-1 text-gray-400 cursor-help\" \n               title=\"\u8A18\u9332\u3055\u308C\u305F\u30EF\u30FC\u30AF\u30A2\u30A6\u30C8\u306E\u7DCF\u6570\u3067\u3059\u3002\u7D99\u7D9A\u7684\u306A\u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u306E\u6307\u6A19\u3068\u3057\u3066\u4F7F\u7528\u3055\u308C\u307E\u3059\u3002\"></i>\n          </div>\n        </div>\n        <div class=\"text-center p-4 bg-green-50 rounded-lg relative group\">\n          <div class=\"text-2xl font-bold text-green-600\">").concat(this.formatVolume(data.overallMetrics.totalVolume), "</div>\n          <div class=\"text-sm text-gray-600 flex items-center justify-center\">\n            \u7DCF\u30DC\u30EA\u30E5\u30FC\u30E0\n            <i class=\"fas fa-info-circle ml-1 text-gray-400 cursor-help\" \n               title=\"\u5168\u3066\u306E\u30A8\u30AF\u30B5\u30B5\u30A4\u30BA\u306E\u91CD\u91CF\xD7\u56DE\u6570\xD7\u30BB\u30C3\u30C8\u6570\u306E\u5408\u8A08\u3067\u3059\u3002\u7B4B\u529B\u5411\u4E0A\u306E\u6307\u6A19\u3068\u3057\u3066\u4F7F\u7528\u3055\u308C\u307E\u3059\u3002\"></i>\n          </div>\n        </div>\n        <div class=\"text-center p-4 bg-purple-50 rounded-lg relative group\">\n          <div class=\"text-2xl font-bold text-purple-600\">").concat(data.consistencyScore, "%</div>\n          <div class=\"text-sm text-gray-600 flex items-center justify-center\">\n            \u4E00\u8CAB\u6027\u30B9\u30B3\u30A2\n            <i class=\"fas fa-info-circle ml-1 text-gray-400 cursor-help\" \n               title=\"\u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u306E\u7D99\u7D9A\u6027\u3092\u8868\u3059\u30B9\u30B3\u30A2\u3067\u3059\u3002\u9AD8\u3044\u307B\u3069\u5B9A\u671F\u7684\u306B\u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u3092\u884C\u3063\u3066\u3044\u307E\u3059\u3002\"></i>\n          </div>\n        </div>\n        <div class=\"text-center p-4 bg-orange-50 rounded-lg relative group\">\n          <div class=\"text-2xl font-bold text-orange-600\">").concat(this.formatVolume(data.overallMetrics.averageVolumePerWorkout), "</div>\n          <div class=\"text-sm text-gray-600 flex items-center justify-center\">\n            \u5E73\u5747\u30DC\u30EA\u30E5\u30FC\u30E0\n            <i class=\"fas fa-info-circle ml-1 text-gray-400 cursor-help\" \n               title=\"1\u56DE\u306E\u30EF\u30FC\u30AF\u30A2\u30A6\u30C8\u3042\u305F\u308A\u306E\u5E73\u5747\u30DC\u30EA\u30E5\u30FC\u30E0\u3067\u3059\u3002\u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u5F37\u5EA6\u306E\u6307\u6A19\u3068\u3057\u3066\u4F7F\u7528\u3055\u308C\u307E\u3059\u3002\"></i>\n          </div>\n        </div>\n      </div>\n\n      <!-- \u7B4B\u8089\u90E8\u4F4D\u5225\u9032\u6B69 -->\n      <div class=\"mb-6\">\n        <h4 class=\"text-md font-medium text-gray-700 mb-3\">\u7B4B\u8089\u90E8\u4F4D\u5225\u9032\u6B69</h4>\n        <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          ").concat(Object.entries(data.muscleGroupProgress).map(function (_ref2) {
        var _ref3 = _slicedToArray(_ref2, 2),
          muscle = _ref3[0],
          progress = _ref3[1];
        if (!progress) return '';
        return "\n              <div class=\"border border-gray-200 rounded-lg p-4\">\n                <h5 class=\"font-medium text-gray-800 mb-2\">".concat(_this2.getMuscleGroupName(muscle), "</h5>\n                <div class=\"space-y-2\">\n                  <div class=\"flex justify-between text-sm\">\n                    <span class=\"text-gray-600\">\u30BB\u30C3\u30B7\u30E7\u30F3\u6570:</span>\n                    <span class=\"font-medium\">").concat(progress.totalSessions, "</span>\n                  </div>\n                  <div class=\"flex justify-between text-sm\">\n                    <span class=\"text-gray-600\">\u983B\u5EA6\u30B9\u30B3\u30A2:</span>\n                    <span class=\"font-medium\">").concat(progress.frequencyAnalysis.frequencyScore, "</span>\n                  </div>\n                  <div class=\"flex justify-between text-sm\">\n                    <span class=\"text-gray-600\">\u5E73\u5747\u9593\u9694:</span>\n                    <span class=\"font-medium\">").concat(progress.frequencyAnalysis.averageDaysBetween, "\u65E5</span>\n                  </div>\n                </div>\n              </div>\n            ");
      }).join(''), "\n        </div>\n      </div>\n\n      <!-- \u63A8\u5968\u4E8B\u9805 -->\n      <div class=\"mb-6\">\n        <h4 class=\"text-md font-medium text-gray-700 mb-3\">\u63A8\u5968\u4E8B\u9805</h4>\n        <div class=\"space-y-3\">\n          ").concat(data.recommendations.map(function (rec) {
        return "\n            <div class=\"p-4 rounded-lg ".concat(rec.priority === 'high' ? 'bg-red-50 border-l-4 border-red-400' : rec.priority === 'medium' ? 'bg-yellow-50 border-l-4 border-yellow-400' : 'bg-green-50 border-l-4 border-green-400', "\">\n              <div class=\"flex items-start\">\n                <div class=\"flex-shrink-0\">\n                  <i class=\"fas ").concat(rec.priority === 'high' ? 'fa-exclamation-triangle text-red-400' : rec.priority === 'medium' ? 'fa-info-circle text-yellow-400' : 'fa-check-circle text-green-400', "\"></i>\n                </div>\n                <div class=\"ml-3\">\n                  <p class=\"text-sm font-medium ").concat(rec.priority === 'high' ? 'text-red-800' : rec.priority === 'medium' ? 'text-yellow-800' : 'text-green-800', "\">\n                    ").concat(rec.message, "\n                  </p>\n                  <p class=\"text-sm ").concat(rec.priority === 'high' ? 'text-red-700' : rec.priority === 'medium' ? 'text-yellow-700' : 'text-green-700', " mt-1\">\n                    <strong>\u63A8\u5968\u30A2\u30AF\u30B7\u30E7\u30F3:</strong> ").concat(rec.action, "\n                  </p>\n                </div>\n              </div>\n            </div>\n          ");
      }).join(''), "\n        </div>\n      </div>\n\n      <!-- \u30A8\u30AF\u30B5\u30B5\u30A4\u30BA\u5225\u9032\u6B69 -->\n      <div>\n        <h4 class=\"text-md font-medium text-gray-700 mb-3\">\u30A8\u30AF\u30B5\u30B5\u30A4\u30BA\u5225\u9032\u6B69</h4>\n        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          ").concat(Object.entries(data.exerciseProgress).slice(0, 6).map(function (_ref4) {
        var _ref5 = _slicedToArray(_ref4, 2),
          exercise = _ref5[0],
          progress = _ref5[1];
        if (!progress) return '';
        return "\n              <div class=\"border border-gray-200 rounded-lg p-4\">\n                <h5 class=\"font-medium text-gray-800 mb-2\">".concat(exercise, "</h5>\n                <div class=\"space-y-2\">\n                  <div class=\"flex justify-between text-sm\">\n                    <span class=\"text-gray-600\">\u30BB\u30C3\u30B7\u30E7\u30F3\u6570:</span>\n                    <span class=\"font-medium\">").concat(progress.totalSessions, "</span>\n                  </div>\n                  <div class=\"flex justify-between text-sm\">\n                    <span class=\"text-gray-600\">\u30DC\u30EA\u30E5\u30FC\u30E0\u9032\u6B69:</span>\n                    <span class=\"font-medium ").concat(progress.progressMetrics.volumeProgression > 0 ? 'text-green-600' : 'text-red-600', "\">\n                      ").concat(progress.progressMetrics.volumeProgression > 0 ? '+' : '').concat(progress.progressMetrics.volumeProgression, "%\n                    </span>\n                  </div>\n                  <div class=\"flex justify-between text-sm\">\n                    <span class=\"text-gray-600\">\u5F37\u5EA6\u9032\u6B69:</span>\n                    <span class=\"font-medium ").concat(progress.progressMetrics.intensityProgression > 0 ? 'text-green-600' : 'text-red-600', "\">\n                      ").concat(progress.progressMetrics.intensityProgression > 0 ? '+' : '').concat(progress.progressMetrics.intensityProgression, "%\n                    </span>\n                  </div>\n                  <div class=\"flex justify-between text-sm\">\n                    <span class=\"text-gray-600\">\u5E73\u5747\u91CD\u91CF:</span>\n                    <span class=\"font-medium\">").concat(progress.progressMetrics.averageWeight, "kg</span>\n                  </div>\n                </div>\n              </div>\n            ");
      }).join(''), "\n        </div>\n      </div>\n    ");
    }

    /**
     * 総合統計をレンダリング
     */
  }, {
    key: "renderOverallStats",
    value: function renderOverallStats() {
      var totalWorkouts = this.workoutData.length;
      var totalHours = this.workoutData.reduce(function (sum, workout) {
        return sum + (workout.duration || 0);
      }, 0) / 3600;
      var avgSessionTime = totalWorkouts > 0 ? totalHours / totalWorkouts : 0;

      // 要素の存在確認を追加
      var totalWorkoutsEl = (0, _helpers.safeGetElement)('#total-workouts');
      var totalHoursEl = (0, _helpers.safeGetElement)('#total-hours');
      var avgSessionTimeEl = (0, _helpers.safeGetElement)('#avg-session-time');
      if (totalWorkoutsEl) {
        totalWorkoutsEl.textContent = totalWorkouts;
      }
      if (totalHoursEl) {
        totalHoursEl.textContent = "".concat(totalHours.toFixed(1), "\u6642\u9593");
      }
      if (avgSessionTimeEl) {
        avgSessionTimeEl.textContent = "".concat(avgSessionTime.toFixed(1), "\u6642\u9593");
      }
    }

    /**
     * 部位別統計をレンダリング
     */
  }, {
    key: "renderMuscleGroupStats",
    value: function renderMuscleGroupStats() {
      var _this3 = this;
      var muscleGroupCounts = {};
      this.workoutData.forEach(function (workout) {
        var muscleGroups = workout.muscle_groups || workout.muscleGroups || [];
        muscleGroups.forEach(function (muscle) {
          muscleGroupCounts[muscle] = (muscleGroupCounts[muscle] || 0) + 1;
        });
      });
      var container = (0, _helpers.safeGetElement)('#muscle-group-stats');
      if (!container) {
        return;
      }
      container.innerHTML = Object.entries(muscleGroupCounts).sort(function (_ref6, _ref7) {
        var _ref8 = _slicedToArray(_ref6, 2),
          a = _ref8[1];
        var _ref9 = _slicedToArray(_ref7, 2),
          b = _ref9[1];
        return b - a;
      }).slice(0, 5).map(function (_ref0) {
        var _ref1 = _slicedToArray(_ref0, 2),
          muscle = _ref1[0],
          count = _ref1[1];
        return "\n                <div class=\"flex justify-between\">\n                    <span class=\"text-gray-600\">".concat(_this3.getMuscleGroupName(muscle), "</span>\n                    <span class=\"font-bold text-blue-600\">").concat(count, "\u56DE</span>\n                </div>\n            ");
      }).join('');
    }

    /**
     * 筋肉部位名を取得
     */
  }, {
    key: "getMuscleGroupName",
    value:
    /**
     * 筋肉部位名を取得
     * @param {string} muscle - 筋肉部位ID
     * @returns {string} 筋肉部位名
     */
    function getMuscleGroupName(muscle) {
      var names = {
        chest: '胸',
        back: '背中',
        shoulders: '肩',
        arms: '腕',
        legs: '脚',
        core: '腹筋'
      };
      return names[muscle] || muscle;
    }
  }, {
    key: "renderProgressStats",
    value:
    /**
     * 進歩統計をレンダリング
     */
    function renderProgressStats() {
      // 簡易的な進歩率計算
      var recentWorkouts = this.workoutData.slice(-10);
      var olderWorkouts = this.workoutData.slice(-20, -10);
      var recentAvgWeight = this.calculateAverageWeight(recentWorkouts);
      var olderAvgWeight = this.calculateAverageWeight(olderWorkouts);
      var strengthProgress = olderAvgWeight > 0 ? ((recentAvgWeight - olderAvgWeight) / olderAvgWeight * 100).toFixed(1) : 0;

      // 要素の存在確認を追加
      var strengthProgressEl = (0, _helpers.safeGetElement)('#strength-progress');
      var enduranceProgressEl = (0, _helpers.safeGetElement)('#endurance-progress');
      var overallScoreEl = (0, _helpers.safeGetElement)('#overall-score');
      if (strengthProgressEl) {
        strengthProgressEl.textContent = "".concat(strengthProgress, "%");
      }
      if (enduranceProgressEl) {
        enduranceProgressEl.textContent = '計算中...';
      }
      if (overallScoreEl) {
        overallScoreEl.textContent = this.calculateOverallScore();
      }
    }

    /**
     * 平均重量を計算
     */
  }, {
    key: "calculateAverageWeight",
    value: function calculateAverageWeight(workouts) {
      if (workouts.length === 0) {
        return 0;
      }
      var totalWeight = 0;
      var count = 0;
      workouts.forEach(function (workout) {
        if (workout.exercises || workout.training_logs) {
          var exercises = workout.exercises || workout.training_logs || [];
          exercises.forEach(function (exercise) {
            if (exercise.weights && Array.isArray(exercise.weights)) {
              exercise.weights.forEach(function (weight) {
                if (weight > 0) {
                  totalWeight += weight;
                  count++;
                }
              });
            }
          });
        }
      });
      return count > 0 ? totalWeight / count : 0;
    }

    /**
     * 総合スコアを計算
     */
  }, {
    key: "calculateOverallScore",
    value: function calculateOverallScore() {
      var totalWorkouts = this.workoutData.length;
      var consistency = Math.min(totalWorkouts / 30, 1) * 100; // 30日で正規化
      var frequency = Math.min(totalWorkouts / 10, 1) * 100; // 10回で正規化

      return Math.round((consistency + frequency) / 2);
    }

    /**
     * チャートをレンダリング
     */
  }, {
    key: "renderCharts",
    value: (function () {
      var _renderCharts = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5() {
        var _t4;
        return _regenerator().w(function (_context5) {
          while (1) switch (_context5.p = _context5.n) {
            case 0:
              _context5.p = 0;
              if (!(typeof Chart === 'undefined')) {
                _context5.n = 1;
                break;
              }
              console.error('Chart.js is not loaded');
              (0, _helpers.showNotification)('グラフライブラリの読み込みに失敗しました', 'error');
              return _context5.a(2);
            case 1:
              _context5.n = 2;
              return this.renderFrequencyChart();
            case 2:
              _context5.n = 3;
              return this.renderMuscleGroupChart();
            case 3:
              _context5.n = 4;
              return this.renderWeightProgressChart();
            case 4:
              _context5.n = 5;
              return this.renderSetsProgressChart();
            case 5:
              console.log('All charts rendered successfully');
              _context5.n = 7;
              break;
            case 6:
              _context5.p = 6;
              _t4 = _context5.v;
              console.error('Error rendering charts:', _t4);
              (0, _errorHandler.handleError)(_t4, {
                context: 'チャート描画',
                showNotification: true
              });
            case 7:
              return _context5.a(2);
          }
        }, _callee5, this, [[0, 6]]);
      }));
      function renderCharts() {
        return _renderCharts.apply(this, arguments);
      }
      return renderCharts;
    }()
    /**
     * トレーニング頻度チャートをレンダリング
     */
    )
  }, {
    key: "renderFrequencyChart",
    value: (function () {
      var _renderFrequencyChart = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6() {
        var canvas, frequencyData, _t5;
        return _regenerator().w(function (_context6) {
          while (1) switch (_context6.p = _context6.n) {
            case 0:
              _context6.p = 0;
              canvas = (0, _helpers.safeGetElement)('#frequency-chart');
              if (canvas) {
                _context6.n = 1;
                break;
              }
              console.warn('Frequency chart canvas not found');
              return _context6.a(2);
            case 1:
              frequencyData = this.calculateFrequencyData();
              this.charts.frequency = new Chart(canvas, {
                type: 'line',
                data: {
                  labels: frequencyData.labels,
                  datasets: [{
                    label: 'トレーニング回数',
                    data: frequencyData.data,
                    borderColor: '#3b82f6',
                    backgroundColor: 'rgba(59, 130, 246, 0.1)',
                    tension: 0.4
                  }]
                },
                options: {
                  responsive: true,
                  maintainAspectRatio: false,
                  plugins: {
                    legend: {
                      display: false
                    }
                  },
                  scales: {
                    y: {
                      beginAtZero: true,
                      ticks: {
                        stepSize: 1
                      }
                    }
                  }
                }
              });
              console.log('Frequency chart rendered successfully');
              _context6.n = 3;
              break;
            case 2:
              _context6.p = 2;
              _t5 = _context6.v;
              console.error('Error rendering frequency chart:', _t5);
            case 3:
              return _context6.a(2);
          }
        }, _callee6, this, [[0, 2]]);
      }));
      function renderFrequencyChart() {
        return _renderFrequencyChart.apply(this, arguments);
      }
      return renderFrequencyChart;
    }()
    /**
     * 部位別チャートをレンダリング
     */
    )
  }, {
    key: "renderMuscleGroupChart",
    value: (function () {
      var _renderMuscleGroupChart = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee7() {
        var canvas, muscleGroupData, _t6;
        return _regenerator().w(function (_context7) {
          while (1) switch (_context7.p = _context7.n) {
            case 0:
              _context7.p = 0;
              canvas = (0, _helpers.safeGetElement)('#muscle-group-chart');
              if (canvas) {
                _context7.n = 1;
                break;
              }
              console.warn('Muscle group chart canvas not found');
              return _context7.a(2);
            case 1:
              muscleGroupData = this.calculateMuscleGroupData();
              this.charts.muscleGroup = new Chart(canvas, {
                type: 'doughnut',
                data: {
                  labels: muscleGroupData.labels,
                  datasets: [{
                    data: muscleGroupData.data,
                    backgroundColor: ['#ef4444', '#3b82f6', '#10b981', '#f59e0b', '#8b5cf6', '#ec4899']
                  }]
                },
                options: {
                  responsive: true,
                  maintainAspectRatio: false,
                  plugins: {
                    legend: {
                      position: 'bottom'
                    }
                  }
                }
              });
              console.log('Muscle group chart rendered successfully');
              _context7.n = 3;
              break;
            case 2:
              _context7.p = 2;
              _t6 = _context7.v;
              console.error('Error rendering muscle group chart:', _t6);
            case 3:
              return _context7.a(2);
          }
        }, _callee7, this, [[0, 2]]);
      }));
      function renderMuscleGroupChart() {
        return _renderMuscleGroupChart.apply(this, arguments);
      }
      return renderMuscleGroupChart;
    }()
    /**
     * 重量推移チャートをレンダリング
     */
    )
  }, {
    key: "renderWeightProgressChart",
    value: (function () {
      var _renderWeightProgressChart = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee8() {
        var canvas, weightData, _t7;
        return _regenerator().w(function (_context8) {
          while (1) switch (_context8.p = _context8.n) {
            case 0:
              _context8.p = 0;
              canvas = (0, _helpers.safeGetElement)('#weight-progress-chart');
              if (canvas) {
                _context8.n = 1;
                break;
              }
              console.warn('Weight progress chart canvas not found');
              return _context8.a(2);
            case 1:
              weightData = this.calculateWeightProgressData();
              this.charts.weightProgress = new Chart(canvas, {
                type: 'line',
                data: {
                  labels: weightData.labels,
                  datasets: [{
                    label: '平均重量 (kg)',
                    data: weightData.data,
                    borderColor: '#f59e0b',
                    backgroundColor: 'rgba(245, 158, 11, 0.1)',
                    tension: 0.4
                  }]
                },
                options: {
                  responsive: true,
                  maintainAspectRatio: false,
                  plugins: {
                    legend: {
                      display: false
                    }
                  },
                  scales: {
                    y: {
                      beginAtZero: true
                    }
                  }
                }
              });
              console.log('Weight progress chart rendered successfully');
              _context8.n = 3;
              break;
            case 2:
              _context8.p = 2;
              _t7 = _context8.v;
              console.error('Error rendering weight progress chart:', _t7);
            case 3:
              return _context8.a(2);
          }
        }, _callee8, this, [[0, 2]]);
      }));
      function renderWeightProgressChart() {
        return _renderWeightProgressChart.apply(this, arguments);
      }
      return renderWeightProgressChart;
    }()
    /**
     * セット数推移チャートをレンダリング
     */
    )
  }, {
    key: "renderSetsProgressChart",
    value: (function () {
      var _renderSetsProgressChart = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee9() {
        var canvas, setsData, _t8;
        return _regenerator().w(function (_context9) {
          while (1) switch (_context9.p = _context9.n) {
            case 0:
              _context9.p = 0;
              canvas = (0, _helpers.safeGetElement)('#sets-progress-chart');
              if (canvas) {
                _context9.n = 1;
                break;
              }
              console.warn('Sets progress chart canvas not found');
              return _context9.a(2);
            case 1:
              setsData = this.calculateSetsProgressData();
              this.charts.setsProgress = new Chart(canvas, {
                type: 'bar',
                data: {
                  labels: setsData.labels,
                  datasets: [{
                    label: 'セット数',
                    data: setsData.data,
                    backgroundColor: '#8b5cf6',
                    borderColor: '#7c3aed',
                    borderWidth: 1
                  }]
                },
                options: {
                  responsive: true,
                  maintainAspectRatio: false,
                  plugins: {
                    legend: {
                      display: false
                    }
                  },
                  scales: {
                    y: {
                      beginAtZero: true,
                      ticks: {
                        stepSize: 1
                      }
                    }
                  }
                }
              });
              console.log('Sets progress chart rendered successfully');
              _context9.n = 3;
              break;
            case 2:
              _context9.p = 2;
              _t8 = _context9.v;
              console.error('Error rendering sets progress chart:', _t8);
            case 3:
              return _context9.a(2);
          }
        }, _callee9, this, [[0, 2]]);
      }));
      function renderSetsProgressChart() {
        return _renderSetsProgressChart.apply(this, arguments);
      }
      return renderSetsProgressChart;
    }()
    /**
     * 頻度データを計算
     */
    )
  }, {
    key: "calculateFrequencyData",
    value: function calculateFrequencyData() {
      var last30Days = [];
      var today = new Date();
      for (var i = 29; i >= 0; i--) {
        var date = new Date(today);
        date.setDate(date.getDate() - i);
        last30Days.push(date.toISOString().split('T')[0]);
      }
      var frequencyMap = {};
      last30Days.forEach(function (date) {
        frequencyMap[date] = 0;
      });
      this.workoutData.forEach(function (workout) {
        var workoutDate = new Date(workout.date || workout.startTime).toISOString().split('T')[0];
        if (Object.prototype.hasOwnProperty.call(frequencyMap, workoutDate)) {
          frequencyMap[workoutDate]++;
        }
      });
      return {
        labels: last30Days.map(function (date) {
          return new Date(date).toLocaleDateString('ja-JP', {
            month: 'short',
            day: 'numeric'
          });
        }),
        data: Object.values(frequencyMap)
      };
    }

    /**
     * 部位別データを計算
     */
  }, {
    key: "calculateMuscleGroupData",
    value: function calculateMuscleGroupData() {
      var _this4 = this;
      var muscleGroupCounts = {};
      this.workoutData.forEach(function (workout) {
        var muscleGroups = workout.muscle_groups || workout.muscleGroups || [];
        muscleGroups.forEach(function (muscle) {
          muscleGroupCounts[muscle] = (muscleGroupCounts[muscle] || 0) + 1;
        });
      });
      var sorted = Object.entries(muscleGroupCounts).sort(function (_ref10, _ref11) {
        var _ref12 = _slicedToArray(_ref10, 2),
          a = _ref12[1];
        var _ref13 = _slicedToArray(_ref11, 2),
          b = _ref13[1];
        return b - a;
      }).slice(0, 6);
      return {
        labels: sorted.map(function (_ref14) {
          var _ref15 = _slicedToArray(_ref14, 1),
            muscle = _ref15[0];
          return _this4.getMuscleGroupName(muscle);
        }),
        data: sorted.map(function (_ref16) {
          var _ref17 = _slicedToArray(_ref16, 2),
            count = _ref17[1];
          return count;
        })
      };
    }

    /**
     * 重量進歩データを計算
     */
  }, {
    key: "calculateWeightProgressData",
    value: function calculateWeightProgressData() {
      var _this5 = this;
      // 簡易的な重量進歩データ
      var last10Workouts = this.workoutData.slice(-10);
      var labels = last10Workouts.map(function (_, index) {
        return "\u30BB\u30C3\u30B7\u30E7\u30F3".concat(index + 1);
      });
      var data = last10Workouts.map(function (workout) {
        return _this5.calculateAverageWeight([workout]);
      });
      return {
        labels: labels,
        data: data
      };
    }

    /**
     * セット数進歩データを計算
     */
  }, {
    key: "calculateSetsProgressData",
    value: function calculateSetsProgressData() {
      var last10Workouts = this.workoutData.slice(-10);
      var labels = last10Workouts.map(function (_, index) {
        return "\u30BB\u30C3\u30B7\u30E7\u30F3".concat(index + 1);
      });
      var data = last10Workouts.map(function (workout) {
        if (workout.exercises || workout.training_logs) {
          var exercises = workout.exercises || workout.training_logs || [];
          return exercises.reduce(function (sum, exercise) {
            return sum + (exercise.sets || 0);
          }, 0);
        }
        return 0;
      });
      return {
        labels: labels,
        data: data
      };
    }

    /**
     * 分析レポートを生成
     */
  }, {
    key: "generateAnalysisReport",
    value: function generateAnalysisReport() {
      var container = (0, _helpers.safeGetElement)('#analysis-report');
      if (!container) {
        return;
      }
      var report = this.generateReport();
      container.innerHTML = report;
    }

    /**
     * レポートを生成
     */
  }, {
    key: "generateReport",
    value: function generateReport() {
      var totalWorkouts = this.workoutData.length;
      var totalHours = this.workoutData.reduce(function (sum, workout) {
        return sum + (workout.duration || 0);
      }, 0) / 3600;
      var muscleGroupCounts = {};
      this.workoutData.forEach(function (workout) {
        var muscleGroups = workout.muscle_groups || workout.muscleGroups || [];
        muscleGroups.forEach(function (muscle) {
          muscleGroupCounts[muscle] = (muscleGroupCounts[muscle] || 0) + 1;
        });
      });
      var mostTrainedMuscle = Object.entries(muscleGroupCounts).sort(function (_ref18, _ref19) {
        var _ref20 = _slicedToArray(_ref18, 2),
          a = _ref20[1];
        var _ref21 = _slicedToArray(_ref19, 2),
          b = _ref21[1];
        return b - a;
      })[0];
      return "\n            <div class=\"space-y-4\">\n                <div class=\"p-4 bg-blue-50 rounded-lg\">\n                    <h4 class=\"font-semibold text-blue-800 mb-2\">\u7DCF\u5408\u8A55\u4FA1</h4>\n                    <p class=\"text-blue-700\">\n                        \u3053\u308C\u307E\u3067\u306B".concat(totalWorkouts, "\u56DE\u306E\u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u3092\u5B9F\u65BD\u3057\u3001\n                        \u5408\u8A08").concat(totalHours.toFixed(1), "\u6642\u9593\u306E\u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u3092\u884C\u3044\u307E\u3057\u305F\u3002\n                    </p>\n                </div>\n                \n                <div class=\"p-4 bg-green-50 rounded-lg\">\n                    <h4 class=\"font-semibold text-green-800 mb-2\">\u6700\u3082\u935B\u3048\u3066\u3044\u308B\u90E8\u4F4D</h4>\n                    <p class=\"text-green-700\">\n                        ").concat(mostTrainedMuscle ? "".concat(this.getMuscleGroupName(mostTrainedMuscle[0]), "\uFF08").concat(mostTrainedMuscle[1], "\u56DE\uFF09") : 'データが不足しています', "\n                    </p>\n                </div>\n                \n                <div class=\"p-4 bg-yellow-50 rounded-lg\">\n                    <h4 class=\"font-semibold text-yellow-800 mb-2\">\u63A8\u5968\u4E8B\u9805</h4>\n                    <p class=\"text-yellow-700\">\n                        \u7D99\u7D9A\u7684\u306A\u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u3092\u7D9A\u3051\u308B\u3053\u3068\u3067\u3001\u3055\u3089\u306A\u308B\u9032\u6B69\u304C\u671F\u5F85\u3067\u304D\u307E\u3059\u3002\n                        \u30D0\u30E9\u30F3\u30B9\u306E\u53D6\u308C\u305F\u30C8\u30EC\u30FC\u30CB\u30F3\u30B0\u3092\u5FC3\u304C\u3051\u307E\u3057\u3087\u3046\u3002\n                    </p>\n                </div>\n            </div>\n        ");
    }

    /**
     * イベントリスナーを設定
     */
  }, {
    key: "setupEventListeners",
    value: function setupEventListeners() {
      var _this6 = this;
      // 分析期間の変更
      var periodSelect = (0, _helpers.safeGetElement)('#analysis-period');
      if (periodSelect) {
        periodSelect.addEventListener('change', /*#__PURE__*/function () {
          var _ref22 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee0(event) {
            return _regenerator().w(function (_context0) {
              while (1) switch (_context0.n) {
                case 0:
                  _this6.analysisPeriod = parseInt(event.target.value);
                  console.log('Analysis period changed to:', _this6.analysisPeriod);

                  // プログレッシブ・オーバーロードデータを再読み込み
                  _context0.n = 1;
                  return _this6.loadProgressiveOverloadData();
                case 1:
                  _this6.renderProgressiveOverloadSection();
                case 2:
                  return _context0.a(2);
              }
            }, _callee0);
          }));
          return function (_x) {
            return _ref22.apply(this, arguments);
          };
        }());
      }
    }

    /**
     * チャートを破棄
     */
  }, {
    key: "destroy",
    value: function destroy() {
      Object.values(this.charts).forEach(function (chart) {
        if (chart && typeof chart.destroy === 'function') {
          chart.destroy();
        }
      });
      this.charts = {};
    }

    /**
     * ボリュームをフォーマット
     * @param {number} volume - ボリューム値
     * @returns {string} フォーマットされたボリューム
     */
  }, {
    key: "formatVolume",
    value: function formatVolume(volume) {
      if (volume >= 1000000) {
        return "".concat((volume / 1000000).toFixed(1), "M");
      } else if (volume >= 1000) {
        return "".concat((volume / 1000).toFixed(1), "K");
      } else {
        return volume.toString();
      }
    }
  }]);
}(); // デフォルトエクスポート
var analysisPage = new AnalysisPage();
var _default = exports["default"] = analysisPage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfYXV0aE1hbmFnZXIiLCJyZXF1aXJlIiwiX3dvcmtvdXREYXRhU2VydmljZSIsIl9wcm9ncmVzc2l2ZU92ZXJsb2FkU2VydmljZSIsIl9oZWxwZXJzIiwiX2Vycm9ySGFuZGxlciIsIl90eXBlb2YiLCJvIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJjb25zdHJ1Y3RvciIsInByb3RvdHlwZSIsIl9zbGljZWRUb0FycmF5IiwiciIsImUiLCJfYXJyYXlXaXRoSG9sZXMiLCJfaXRlcmFibGVUb0FycmF5TGltaXQiLCJfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJfbm9uSXRlcmFibGVSZXN0IiwiVHlwZUVycm9yIiwibCIsInQiLCJuIiwiaSIsInUiLCJhIiwiZiIsImNhbGwiLCJuZXh0IiwiT2JqZWN0IiwiZG9uZSIsInB1c2giLCJ2YWx1ZSIsImxlbmd0aCIsIkFycmF5IiwiaXNBcnJheSIsIl9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIiwiX24iLCJGIiwicyIsIl9hcnJheUxpa2VUb0FycmF5IiwidG9TdHJpbmciLCJzbGljZSIsIm5hbWUiLCJmcm9tIiwidGVzdCIsIl9yZWdlbmVyYXRvciIsInRvU3RyaW5nVGFnIiwiYyIsIkdlbmVyYXRvciIsImNyZWF0ZSIsIl9yZWdlbmVyYXRvckRlZmluZTIiLCJwIiwieSIsIkciLCJ2IiwiZCIsImJpbmQiLCJHZW5lcmF0b3JGdW5jdGlvbiIsIkdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlIiwiZ2V0UHJvdG90eXBlT2YiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsImRpc3BsYXlOYW1lIiwidyIsIm0iLCJkZWZpbmVQcm9wZXJ0eSIsIl9yZWdlbmVyYXRvckRlZmluZSIsIl9pbnZva2UiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJhc3luY0dlbmVyYXRvclN0ZXAiLCJQcm9taXNlIiwicmVzb2x2ZSIsInRoZW4iLCJfYXN5bmNUb0dlbmVyYXRvciIsImFyZ3VtZW50cyIsImFwcGx5IiwiX25leHQiLCJfdGhyb3ciLCJfY2xhc3NDYWxsQ2hlY2siLCJfZGVmaW5lUHJvcGVydGllcyIsIl90b1Byb3BlcnR5S2V5Iiwia2V5IiwiX2NyZWF0ZUNsYXNzIiwiX3RvUHJpbWl0aXZlIiwidG9QcmltaXRpdmUiLCJTdHJpbmciLCJOdW1iZXIiLCJBbmFseXNpc1BhZ2UiLCJleHBvcnRzIiwid29ya291dERhdGEiLCJjaGFydHMiLCJpc0xvYWRpbmciLCJwcm9ncmVzc2l2ZU92ZXJsb2FkRGF0YSIsInNlbGVjdGVkRXhlcmNpc2UiLCJzZWxlY3RlZE11c2NsZUdyb3VwIiwiYW5hbHlzaXNQZXJpb2QiLCJfaW5pdGlhbGl6ZSIsIl9jYWxsZWUyIiwiX3RoaXMiLCJfY29udGV4dDIiLCJjb25zb2xlIiwibG9nIiwic2FmZUFzeW5jIiwiX2NhbGxlZSIsIl9jb250ZXh0IiwicmVuZGVyQW5hbHlzaXNQYWdlIiwibG9hZFdvcmtvdXREYXRhIiwibG9hZFByb2dyZXNzaXZlT3ZlcmxvYWREYXRhIiwicmVuZGVyU3RhdGlzdGljcyIsInJlbmRlclByb2dyZXNzaXZlT3ZlcmxvYWRTZWN0aW9uIiwicmVuZGVyQ2hhcnRzIiwiZ2VuZXJhdGVBbmFseXNpc1JlcG9ydCIsInNldHVwRXZlbnRMaXN0ZW5lcnMiLCJlcnJvciIsImhhbmRsZUVycm9yIiwiY29udGV4dCIsInNob3dOb3RpZmljYXRpb24iLCJpbml0aWFsaXplIiwic2hvd0xvZ2luUHJvbXB0IiwibWFpbkNvbnRlbnQiLCJzYWZlR2V0RWxlbWVudCIsImlubmVySFRNTCIsImxvZ2luQnRuIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJhdXRoTWFuYWdlciIsInNob3dBdXRoTW9kYWwiLCJfbG9hZFdvcmtvdXREYXRhIiwiX2NhbGxlZTMiLCJfaXRlcmF0b3IiLCJfc3RlcCIsIndvcmtvdXQiLCJfdCIsIl90MiIsIl9jb250ZXh0MyIsIndvcmtvdXREYXRhU2VydmljZSIsImxvYWRXb3Jrb3V0cyIsImxpbWl0IiwiZ2VuZXJhdGVTYW1wbGVXb3Jrb3V0RGF0YSIsInNhdmVXb3Jrb3V0IiwiY29uY2F0IiwiX2xvYWRQcm9ncmVzc2l2ZU92ZXJsb2FkRGF0YSIsIl9jYWxsZWU0IiwiX3QzIiwiX2NvbnRleHQ0IiwicHJvZ3Jlc3NpdmVPdmVybG9hZFNlcnZpY2UiLCJnZXRPdmVyYWxsUHJvZ3Jlc3MiLCJ0b2RheSIsIkRhdGUiLCJzYW1wbGVEYXRhIiwiZGF0ZSIsInNldERhdGUiLCJnZXREYXRlIiwibXVzY2xlR3JvdXBzIiwicmFuZG9tTXVzY2xlcyIsInNvcnQiLCJNYXRoIiwicmFuZG9tIiwiYmFzZVdlaWdodCIsInByb2dyZXNzRmFjdG9yIiwibWF4Iiwid2VpZ2h0IiwiZmxvb3IiLCJpZCIsInRvSVNPU3RyaW5nIiwic3BsaXQiLCJtdXNjbGVfZ3JvdXBzIiwiZXhlcmNpc2VzIiwic2V0cyIsInJlcHMiLCJkdXJhdGlvbiIsIm5vdGVzIiwicmVuZGVyT3ZlcmFsbFN0YXRzIiwicmVuZGVyTXVzY2xlR3JvdXBTdGF0cyIsInJlbmRlclByb2dyZXNzU3RhdHMiLCJfdGhpczIiLCJjb250YWluZXIiLCJ3YXJuIiwiZGF0YSIsInRvdGFsV29ya291dHMiLCJmb3JtYXRWb2x1bWUiLCJvdmVyYWxsTWV0cmljcyIsInRvdGFsVm9sdW1lIiwiY29uc2lzdGVuY3lTY29yZSIsImF2ZXJhZ2VWb2x1bWVQZXJXb3Jrb3V0IiwiZW50cmllcyIsIm11c2NsZUdyb3VwUHJvZ3Jlc3MiLCJtYXAiLCJfcmVmMiIsIl9yZWYzIiwibXVzY2xlIiwicHJvZ3Jlc3MiLCJnZXRNdXNjbGVHcm91cE5hbWUiLCJ0b3RhbFNlc3Npb25zIiwiZnJlcXVlbmN5QW5hbHlzaXMiLCJmcmVxdWVuY3lTY29yZSIsImF2ZXJhZ2VEYXlzQmV0d2VlbiIsImpvaW4iLCJyZWNvbW1lbmRhdGlvbnMiLCJyZWMiLCJwcmlvcml0eSIsIm1lc3NhZ2UiLCJhY3Rpb24iLCJleGVyY2lzZVByb2dyZXNzIiwiX3JlZjQiLCJfcmVmNSIsImV4ZXJjaXNlIiwicHJvZ3Jlc3NNZXRyaWNzIiwidm9sdW1lUHJvZ3Jlc3Npb24iLCJpbnRlbnNpdHlQcm9ncmVzc2lvbiIsImF2ZXJhZ2VXZWlnaHQiLCJ0b3RhbEhvdXJzIiwicmVkdWNlIiwic3VtIiwiYXZnU2Vzc2lvblRpbWUiLCJ0b3RhbFdvcmtvdXRzRWwiLCJ0b3RhbEhvdXJzRWwiLCJhdmdTZXNzaW9uVGltZUVsIiwidGV4dENvbnRlbnQiLCJ0b0ZpeGVkIiwiX3RoaXMzIiwibXVzY2xlR3JvdXBDb3VudHMiLCJmb3JFYWNoIiwiX3JlZjYiLCJfcmVmNyIsIl9yZWY4IiwiX3JlZjkiLCJiIiwiX3JlZjAiLCJfcmVmMSIsImNvdW50IiwibmFtZXMiLCJjaGVzdCIsImJhY2siLCJzaG91bGRlcnMiLCJhcm1zIiwibGVncyIsImNvcmUiLCJyZWNlbnRXb3Jrb3V0cyIsIm9sZGVyV29ya291dHMiLCJyZWNlbnRBdmdXZWlnaHQiLCJjYWxjdWxhdGVBdmVyYWdlV2VpZ2h0Iiwib2xkZXJBdmdXZWlnaHQiLCJzdHJlbmd0aFByb2dyZXNzIiwic3RyZW5ndGhQcm9ncmVzc0VsIiwiZW5kdXJhbmNlUHJvZ3Jlc3NFbCIsIm92ZXJhbGxTY29yZUVsIiwiY2FsY3VsYXRlT3ZlcmFsbFNjb3JlIiwid29ya291dHMiLCJ0b3RhbFdlaWdodCIsInRyYWluaW5nX2xvZ3MiLCJ3ZWlnaHRzIiwiY29uc2lzdGVuY3kiLCJtaW4iLCJmcmVxdWVuY3kiLCJyb3VuZCIsIl9yZW5kZXJDaGFydHMiLCJfY2FsbGVlNSIsIl90NCIsIl9jb250ZXh0NSIsIkNoYXJ0IiwicmVuZGVyRnJlcXVlbmN5Q2hhcnQiLCJyZW5kZXJNdXNjbGVHcm91cENoYXJ0IiwicmVuZGVyV2VpZ2h0UHJvZ3Jlc3NDaGFydCIsInJlbmRlclNldHNQcm9ncmVzc0NoYXJ0IiwiX3JlbmRlckZyZXF1ZW5jeUNoYXJ0IiwiX2NhbGxlZTYiLCJjYW52YXMiLCJmcmVxdWVuY3lEYXRhIiwiX3Q1IiwiX2NvbnRleHQ2IiwiY2FsY3VsYXRlRnJlcXVlbmN5RGF0YSIsInR5cGUiLCJsYWJlbHMiLCJkYXRhc2V0cyIsImxhYmVsIiwiYm9yZGVyQ29sb3IiLCJiYWNrZ3JvdW5kQ29sb3IiLCJ0ZW5zaW9uIiwib3B0aW9ucyIsInJlc3BvbnNpdmUiLCJtYWludGFpbkFzcGVjdFJhdGlvIiwicGx1Z2lucyIsImxlZ2VuZCIsImRpc3BsYXkiLCJzY2FsZXMiLCJiZWdpbkF0WmVybyIsInRpY2tzIiwic3RlcFNpemUiLCJfcmVuZGVyTXVzY2xlR3JvdXBDaGFydCIsIl9jYWxsZWU3IiwibXVzY2xlR3JvdXBEYXRhIiwiX3Q2IiwiX2NvbnRleHQ3IiwiY2FsY3VsYXRlTXVzY2xlR3JvdXBEYXRhIiwibXVzY2xlR3JvdXAiLCJwb3NpdGlvbiIsIl9yZW5kZXJXZWlnaHRQcm9ncmVzc0NoYXJ0IiwiX2NhbGxlZTgiLCJ3ZWlnaHREYXRhIiwiX3Q3IiwiX2NvbnRleHQ4IiwiY2FsY3VsYXRlV2VpZ2h0UHJvZ3Jlc3NEYXRhIiwid2VpZ2h0UHJvZ3Jlc3MiLCJfcmVuZGVyU2V0c1Byb2dyZXNzQ2hhcnQiLCJfY2FsbGVlOSIsInNldHNEYXRhIiwiX3Q4IiwiX2NvbnRleHQ5IiwiY2FsY3VsYXRlU2V0c1Byb2dyZXNzRGF0YSIsInNldHNQcm9ncmVzcyIsImJvcmRlcldpZHRoIiwibGFzdDMwRGF5cyIsImZyZXF1ZW5jeU1hcCIsIndvcmtvdXREYXRlIiwic3RhcnRUaW1lIiwiaGFzT3duUHJvcGVydHkiLCJ0b0xvY2FsZURhdGVTdHJpbmciLCJtb250aCIsImRheSIsInZhbHVlcyIsIl90aGlzNCIsInNvcnRlZCIsIl9yZWYxMCIsIl9yZWYxMSIsIl9yZWYxMiIsIl9yZWYxMyIsIl9yZWYxNCIsIl9yZWYxNSIsIl9yZWYxNiIsIl9yZWYxNyIsIl90aGlzNSIsImxhc3QxMFdvcmtvdXRzIiwiXyIsImluZGV4IiwicmVwb3J0IiwiZ2VuZXJhdGVSZXBvcnQiLCJtb3N0VHJhaW5lZE11c2NsZSIsIl9yZWYxOCIsIl9yZWYxOSIsIl9yZWYyMCIsIl9yZWYyMSIsIl90aGlzNiIsInBlcmlvZFNlbGVjdCIsIl9yZWYyMiIsIl9jYWxsZWUwIiwiZXZlbnQiLCJfY29udGV4dDAiLCJwYXJzZUludCIsInRhcmdldCIsIl94IiwiZGVzdHJveSIsImNoYXJ0Iiwidm9sdW1lIiwiYW5hbHlzaXNQYWdlIiwiX2RlZmF1bHQiXSwic291cmNlcyI6WyJhbmFseXNpc1BhZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gYW5hbHlzaXNQYWdlLmpzIC0g5YiG5p6Q44Oa44O844K444Gu5qmf6IO9XG5cbmltcG9ydCB7IGF1dGhNYW5hZ2VyIH0gZnJvbSAnLi4vbW9kdWxlcy9hdXRoTWFuYWdlci5qcyc7XG5pbXBvcnQgeyB3b3Jrb3V0RGF0YVNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy93b3Jrb3V0RGF0YVNlcnZpY2UuanMnO1xuaW1wb3J0IHsgcHJvZ3Jlc3NpdmVPdmVybG9hZFNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9wcm9ncmVzc2l2ZU92ZXJsb2FkU2VydmljZS5qcyc7XG5pbXBvcnQge1xuICBzaG93Tm90aWZpY2F0aW9uLFxuICBzYWZlQXN5bmMsXG4gIHNhZmVHZXRFbGVtZW50LFxufSBmcm9tICcuLi91dGlscy9oZWxwZXJzLmpzJztcbmltcG9ydCB7IGhhbmRsZUVycm9yIH0gZnJvbSAnLi4vdXRpbHMvZXJyb3JIYW5kbGVyLmpzJztcblxuY2xhc3MgQW5hbHlzaXNQYWdlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy53b3Jrb3V0RGF0YSA9IFtdO1xuICAgIHRoaXMuY2hhcnRzID0ge307XG4gICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZTtcbiAgICB0aGlzLnByb2dyZXNzaXZlT3ZlcmxvYWREYXRhID0gbnVsbDtcbiAgICB0aGlzLnNlbGVjdGVkRXhlcmNpc2UgPSBudWxsO1xuICAgIHRoaXMuc2VsZWN0ZWRNdXNjbGVHcm91cCA9IG51bGw7XG4gICAgdGhpcy5hbmFseXNpc1BlcmlvZCA9IDkwOyAvLyDjg4fjg5Xjgqnjg6vjg4g5MOaXpVxuICB9XG5cbiAgLyoqXG4gICAqIOWIhuaekOODmuODvOOCuOOCkuWIneacn+WMllxuICAgKi9cbiAgYXN5bmMgaW5pdGlhbGl6ZSgpIHtcbiAgICBjb25zb2xlLmxvZygnQW5hbHlzaXMgcGFnZSBpbml0aWFsaXplZCcpO1xuXG4gICAgLy8g6KqN6Ki844OB44Kn44OD44Kv44KS44K544Kt44OD44OX44GX44Gm5YiG5p6Q44Oa44O844K444KS6KGo56S6XG4gICAgYXdhaXQgc2FmZUFzeW5jKFxuICAgICAgYXN5bmMgKCkgPT4ge1xuICAgICAgICAvLyDliIbmnpDjg5rjg7zjgrjjga7jgrPjg7Pjg4bjg7Pjg4TjgpLooajnpLpcbiAgICAgICAgdGhpcy5yZW5kZXJBbmFseXNpc1BhZ2UoKTtcblxuICAgICAgICBhd2FpdCB0aGlzLmxvYWRXb3Jrb3V0RGF0YSgpO1xuICAgICAgICBhd2FpdCB0aGlzLmxvYWRQcm9ncmVzc2l2ZU92ZXJsb2FkRGF0YSgpO1xuICAgICAgICB0aGlzLnJlbmRlclN0YXRpc3RpY3MoKTtcbiAgICAgICAgdGhpcy5yZW5kZXJQcm9ncmVzc2l2ZU92ZXJsb2FkU2VjdGlvbigpO1xuICAgICAgICB0aGlzLnJlbmRlckNoYXJ0cygpO1xuICAgICAgICB0aGlzLmdlbmVyYXRlQW5hbHlzaXNSZXBvcnQoKTtcbiAgICAgICAgdGhpcy5zZXR1cEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgICB9LFxuICAgICAgJ+WIhuaekOODmuODvOOCuOOBruWIneacn+WMlicsXG4gICAgICAoZXJyb3IpID0+IHtcbiAgICAgICAgaGFuZGxlRXJyb3IoZXJyb3IsIHtcbiAgICAgICAgICBjb250ZXh0OiAn5YiG5p6Q44Oa44O844K45Yid5pyf5YyWJyxcbiAgICAgICAgICBzaG93Tm90aWZpY2F0aW9uOiB0cnVlLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICApO1xuICB9XG5cbiAgLyoqXG4gICAqIOODreOCsOOCpOODs+ODl+ODreODs+ODl+ODiOOCkuihqOekulxuICAgKi9cbiAgc2hvd0xvZ2luUHJvbXB0KCkge1xuICAgIGNvbnN0IG1haW5Db250ZW50ID0gc2FmZUdldEVsZW1lbnQoJyNtYWluLWNvbnRlbnQnKTtcbiAgICBpZiAoIW1haW5Db250ZW50KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgbWFpbkNvbnRlbnQuaW5uZXJIVE1MID0gYFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1pbi1oLXNjcmVlbiBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBiZy1ncmF5LTUwXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1heC13LW1kIHctZnVsbCBiZy13aGl0ZSByb3VuZGVkLWxnIHNoYWRvdy1tZCBwLTYgdGV4dC1jZW50ZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1iLTZcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJteC1hdXRvIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIGgtMTIgdy0xMiByb3VuZGVkLWZ1bGwgYmctYmx1ZS0xMDAgbWItNFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9XCJoLTYgdy02IHRleHQtYmx1ZS02MDBcIiBmaWxsPVwibm9uZVwiIHN0cm9rZT1cImN1cnJlbnRDb2xvclwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiIHN0cm9rZS1saW5lam9pbj1cInJvdW5kXCIgc3Ryb2tlLXdpZHRoPVwiMlwiIGQ9XCJNMTIgMTV2Mm0tNiA0aDEyYTIgMiAwIDAwMi0ydi02YTIgMiAwIDAwLTItMkg2YTIgMiAwIDAwLTIgMnY2YTIgMiAwIDAwMiAyem0xMC0xMFY3YTQgNCAwIDAwLTggMHY0aDh6XCI+PC9wYXRoPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aDIgY2xhc3M9XCJ0ZXh0LTJ4bCBmb250LWJvbGQgdGV4dC1ncmF5LTkwMCBtYi0yXCI+44Ot44Kw44Kk44Oz44GM5b+F6KaB44Gn44GZPC9oMj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwidGV4dC1ncmF5LTYwMCBtYi02XCI+5YiG5p6Q5qmf6IO944KS5L2/55So44GZ44KL44Gr44Gv44Ot44Kw44Kk44Oz44GX44Gm44GP44Gg44GV44GE44CCPC9wPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNwYWNlLXktM1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBpZD1cImxvZ2luLWJ0blwiIGNsYXNzPVwidy1mdWxsIGJnLWJsdWUtNjAwIHRleHQtd2hpdGUgcHktMiBweC00IHJvdW5kZWQtbWQgaG92ZXI6YmctYmx1ZS03MDAgdHJhbnNpdGlvbi1jb2xvcnNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICDjg63jgrDjgqTjg7NcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbmNsaWNrPVwid2luZG93LmxvY2F0aW9uLmhyZWY9Jy9pbmRleC5odG1sJ1wiIGNsYXNzPVwidy1mdWxsIGJnLWdyYXktMjAwIHRleHQtZ3JheS04MDAgcHktMiBweC00IHJvdW5kZWQtbWQgaG92ZXI6YmctZ3JheS0zMDAgdHJhbnNpdGlvbi1jb2xvcnNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICDjg5vjg7zjg6DjgavmiLvjgotcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICBgO1xuXG4gICAgLy8g44Ot44Kw44Kk44Oz44Oc44K/44Oz44Gu44Kk44OZ44Oz44OI44Oq44K544OK44O844KS6Kit5a6aXG4gICAgY29uc3QgbG9naW5CdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbG9naW4tYnRuJyk7XG4gICAgaWYgKGxvZ2luQnRuKSB7XG4gICAgICBsb2dpbkJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgYXV0aE1hbmFnZXIuc2hvd0F1dGhNb2RhbCgnbG9naW4nKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDliIbmnpDjg5rjg7zjgrjjga7jgrPjg7Pjg4bjg7Pjg4TjgpLooajnpLpcbiAgICovXG4gIHJlbmRlckFuYWx5c2lzUGFnZSgpIHtcbiAgICBjb25zdCBtYWluQ29udGVudCA9IHNhZmVHZXRFbGVtZW50KCcjbWFpbi1jb250ZW50Jyk7XG4gICAgaWYgKCFtYWluQ29udGVudCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIG1haW5Db250ZW50LmlubmVySFRNTCA9IGBcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtYi04XCI+XG4gICAgICAgICAgICAgICAgPGgxIGNsYXNzPVwidGV4dC0zeGwgZm9udC1ib2xkIHRleHQtZ3JheS05MDBcIj7liIbmnpA8L2gxPlxuICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwibXQtMiB0ZXh0LWdyYXktNjAwXCI+44OI44Os44O844OL44Oz44Kw44OH44O844K/44KS5YiG5p6Q44GX44CB6YCy5o2X44KS5Y+v6KaW5YyW44GX44G+44GX44KH44GGPC9wPlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDwhLS0g57eP5ZCI57Wx6KiIIC0tPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdyaWQgZ3JpZC1jb2xzLTEgbWQ6Z3JpZC1jb2xzLTMgZ2FwLTYgbWItOFwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJiZy13aGl0ZSBvdmVyZmxvdy1oaWRkZW4gc2hhZG93IHJvdW5kZWQtbGdcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtNVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXggaXRlbXMtY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgtc2hyaW5rLTBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJmYXMgZmEtZHVtYmJlbGwgdGV4dC0yeGwgdGV4dC1ibHVlLTYwMFwiPjwvaT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWwtNSB3LTAgZmxleC0xXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkdCBjbGFzcz1cInRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1ncmF5LTUwMCB0cnVuY2F0ZVwiPue3j+ODr+ODvOOCr+OCouOCpuODiOaVsDwvZHQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGQgY2xhc3M9XCJ0ZXh0LWxnIGZvbnQtbWVkaXVtIHRleHQtZ3JheS05MDBcIiBpZD1cInRvdGFsLXdvcmtvdXRzXCI+MDwvZGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYmctd2hpdGUgb3ZlcmZsb3ctaGlkZGVuIHNoYWRvdyByb3VuZGVkLWxnXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLTVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4IGl0ZW1zLWNlbnRlclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LXNocmluay0wXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiZmFzIGZhLWNsb2NrIHRleHQtMnhsIHRleHQtZ3JlZW4tNjAwXCI+PC9pPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtbC01IHctMCBmbGV4LTFcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGR0IGNsYXNzPVwidGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LWdyYXktNTAwIHRydW5jYXRlXCI+57eP44OI44Os44O844OL44Oz44Kw5pmC6ZaTPC9kdD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkZCBjbGFzcz1cInRleHQtbGcgZm9udC1tZWRpdW0gdGV4dC1ncmF5LTkwMFwiIGlkPVwidG90YWwtaG91cnNcIj4w5pmC6ZaTPC9kZD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJiZy13aGl0ZSBvdmVyZmxvdy1oaWRkZW4gc2hhZG93IHJvdW5kZWQtbGdcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtNVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXggaXRlbXMtY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgtc2hyaW5rLTBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJmYXMgZmEtY2hhcnQtbGluZSB0ZXh0LTJ4bCB0ZXh0LXB1cnBsZS02MDBcIj48L2k+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1sLTUgdy0wIGZsZXgtMVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZHQgY2xhc3M9XCJ0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtZ3JheS01MDAgdHJ1bmNhdGVcIj7lubPlnYfjgrvjg4Pjgrfjg6fjg7PmmYLplpM8L2R0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRkIGNsYXNzPVwidGV4dC1sZyBmb250LW1lZGl1bSB0ZXh0LWdyYXktOTAwXCIgaWQ9XCJhdmctc2Vzc2lvbi10aW1lXCI+MOaZgumWkzwvZGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPCEtLSDnrYvogonpg6jkvY3liKXntbHoqIggLS0+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYmctd2hpdGUgc2hhZG93IHJvdW5kZWQtbGcgbWItOFwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJweC00IHB5LTUgc206cC02XCI+XG4gICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz1cInRleHQtbGcgbGVhZGluZy02IGZvbnQtbWVkaXVtIHRleHQtZ3JheS05MDAgbWItNFwiPueti+iCiemDqOS9jeWIpee1seioiDwvaDM+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9XCJtdXNjbGUtZ3JvdXAtc3RhdHNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0ZXh0LWNlbnRlciB0ZXh0LWdyYXktNTAwIHB5LTRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cImZhcyBmYS1zcGlubmVyIGZhLXNwaW4gdGV4dC14bCBtYi0yXCI+PC9pPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPue1seioiOODh+ODvOOCv+OCkuiqreOBv+i+vOOBv+S4rS4uLjwvcD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8IS0tIOODl+ODreOCsOODrOODg+OCt+ODluODu+OCquODvOODkOODvOODreODvOODieWIhuaekCAtLT5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJiZy13aGl0ZSBzaGFkb3cgcm91bmRlZC1sZyBtYi04XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInB4LTQgcHktNSBzbTpwLTZcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgganVzdGlmeS1iZXR3ZWVuIGl0ZW1zLWNlbnRlciBtYi00XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9XCJ0ZXh0LWxnIGxlYWRpbmctNiBmb250LW1lZGl1bSB0ZXh0LWdyYXktOTAwXCI+44OX44Ot44Kw44Os44OD44K344OW44O744Kq44O844OQ44O844Ot44O844OJ5YiG5p6QPC9oMz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJ0ZXh0LXNtIHRleHQtZ3JheS02MDBcIj7mnJ/plpM6PC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGlkPVwiYW5hbHlzaXMtcGVyaW9kXCIgY2xhc3M9XCJib3JkZXIgYm9yZGVyLWdyYXktMzAwIHJvdW5kZWQtbWQgcHgtMiBweS0xIHRleHQtc21cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjMwXCI+MzDml6U8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjYwXCI+NjDml6U8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjkwXCIgc2VsZWN0ZWQ+OTDml6U8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjE4MFwiPjE4MOaXpTwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPVwicHJvZ3Jlc3NpdmUtb3ZlcmxvYWQtY29udGVudFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRleHQtY2VudGVyIHRleHQtZ3JheS01MDAgcHktNFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiZmFzIGZhLXNwaW5uZXIgZmEtc3BpbiB0ZXh0LXhsIG1iLTJcIj48L2k+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+44OX44Ot44Kw44Os44OD44K344OW44O744Kq44O844OQ44O844Ot44O844OJ5YiG5p6Q44KS6Kqt44G/6L6844G/5LitLi4uPC9wPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDwhLS0g6YCy5q2p57Wx6KiIIC0tPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJnLXdoaXRlIHNoYWRvdyByb3VuZGVkLWxnIG1iLThcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicHgtNCBweS01IHNtOnAtNlwiPlxuICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9XCJ0ZXh0LWxnIGxlYWRpbmctNiBmb250LW1lZGl1bSB0ZXh0LWdyYXktOTAwIG1iLTRcIj7pgLLmranntbHoqIg8L2gzPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ3JpZCBncmlkLWNvbHMtMSBtZDpncmlkLWNvbHMtMyBnYXAtNFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRleHQtY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRleHQtMnhsIGZvbnQtYm9sZCB0ZXh0LWdyZWVuLTYwMFwiIGlkPVwic3RyZW5ndGgtcHJvZ3Jlc3NcIj4tPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRleHQtc20gdGV4dC1ncmF5LTUwMFwiPueti+WKm+WQkeS4iueOhzwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGV4dC1jZW50ZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGV4dC0yeGwgZm9udC1ib2xkIHRleHQtYmx1ZS02MDBcIiBpZD1cImVuZHVyYW5jZS1wcm9ncmVzc1wiPi08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGV4dC1zbSB0ZXh0LWdyYXktNTAwXCI+5oyB5LmF5Yqb5ZCR5LiK546HPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0ZXh0LWNlbnRlclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0ZXh0LTJ4bCBmb250LWJvbGQgdGV4dC1wdXJwbGUtNjAwXCIgaWQ9XCJvdmVyYWxsLXNjb3JlXCI+LTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0ZXh0LXNtIHRleHQtZ3JheS01MDBcIj7nt4/lkIjjgrnjgrPjgqI8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8IS0tIOmAsuaNl+OCsOODqeODlSAtLT5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJiZy13aGl0ZSBzaGFkb3cgcm91bmRlZC1sZyBtYi04XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInB4LTQgcHktNSBzbTpwLTZcIj5cbiAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzPVwidGV4dC1sZyBsZWFkaW5nLTYgZm9udC1tZWRpdW0gdGV4dC1ncmF5LTkwMCBtYi00XCI+6YCy5o2X44Kw44Op44OVPC9oMz5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdyaWQgZ3JpZC1jb2xzLTEgbGc6Z3JpZC1jb2xzLTIgZ2FwLTZcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g44OI44Os44O844OL44Oz44Kw6aC75bqm44Kw44Op44OVIC0tPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQgY2xhc3M9XCJ0ZXh0LW1kIGZvbnQtbWVkaXVtIHRleHQtZ3JheS03MDAgbWItM1wiPuODiOODrOODvOODi+ODs+OCsOmgu+W6pjwvaDQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImgtNjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNhbnZhcyBpZD1cImZyZXF1ZW5jeS1jaGFydFwiPjwvY2FudmFzPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g6YOo5L2N5Yil44Kw44Op44OVIC0tPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQgY2xhc3M9XCJ0ZXh0LW1kIGZvbnQtbWVkaXVtIHRleHQtZ3JheS03MDAgbWItM1wiPumDqOS9jeWIpeWIhuW4gzwvaDQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImgtNjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNhbnZhcyBpZD1cIm11c2NsZS1ncm91cC1jaGFydFwiPjwvY2FudmFzPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g6YeN6YeP6YCy5q2p44Kw44Op44OVIC0tPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQgY2xhc3M9XCJ0ZXh0LW1kIGZvbnQtbWVkaXVtIHRleHQtZ3JheS03MDAgbWItM1wiPumHjemHj+mAsuatqTwvaDQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImgtNjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNhbnZhcyBpZD1cIndlaWdodC1wcm9ncmVzcy1jaGFydFwiPjwvY2FudmFzPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g44K744OD44OI5pWw6YCy5q2p44Kw44Op44OVIC0tPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQgY2xhc3M9XCJ0ZXh0LW1kIGZvbnQtbWVkaXVtIHRleHQtZ3JheS03MDAgbWItM1wiPuOCu+ODg+ODiOaVsOmAsuatqTwvaDQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImgtNjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNhbnZhcyBpZD1cInNldHMtcHJvZ3Jlc3MtY2hhcnRcIj48L2NhbnZhcz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8IS0tIOips+e0sOe1seioiCAtLT5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJiZy13aGl0ZSBzaGFkb3cgcm91bmRlZC1sZ1wiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJweC00IHB5LTUgc206cC02XCI+XG4gICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz1cInRleHQtbGcgbGVhZGluZy02IGZvbnQtbWVkaXVtIHRleHQtZ3JheS05MDAgbWItNFwiPuips+e0sOe1seioiDwvaDM+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9XCJkZXRhaWxlZC1zdGF0c1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRleHQtY2VudGVyIHRleHQtZ3JheS01MDAgcHktNFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiZmFzIGZhLXNwaW5uZXIgZmEtc3BpbiB0ZXh0LXhsIG1iLTJcIj48L2k+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+6Kmz57Sw44OH44O844K/44KS6Kqt44G/6L6844G/5LitLi4uPC9wPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDwhLS0g5YiG5p6Q44Os44Od44O844OIIC0tPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJnLXdoaXRlIHNoYWRvdyByb3VuZGVkLWxnIG10LThcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicHgtNCBweS01IHNtOnAtNlwiPlxuICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9XCJ0ZXh0LWxnIGxlYWRpbmctNiBmb250LW1lZGl1bSB0ZXh0LWdyYXktOTAwIG1iLTRcIj7liIbmnpDjg6zjg53jg7zjg4g8L2gzPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPVwiYW5hbHlzaXMtcmVwb3J0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGV4dC1jZW50ZXIgdGV4dC1ncmF5LTUwMCBweS00XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJmYXMgZmEtc3Bpbm5lciBmYS1zcGluIHRleHQteGwgbWItMlwiPjwvaT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD7jg6zjg53jg7zjg4jjgpLnlJ/miJDkuK0uLi48L3A+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgYDtcbiAgfVxuXG4gIC8qKlxuICAgKiDjg6/jg7zjgq/jgqLjgqbjg4jjg4fjg7zjgr/jgpLoqq3jgb/ovrzjgb9cbiAgICovXG4gIGFzeW5jIGxvYWRXb3Jrb3V0RGF0YSgpIHtcbiAgICB0cnkge1xuICAgICAgdGhpcy5pc0xvYWRpbmcgPSB0cnVlO1xuXG4gICAgICAvLyDjg6/jg7zjgq/jgqLjgqbjg4jjg4fjg7zjgr/jgrXjg7zjg5PjgrnjgYvjgonoqq3jgb/ovrzjgb9cbiAgICAgIHRoaXMud29ya291dERhdGEgPSBhd2FpdCB3b3Jrb3V0RGF0YVNlcnZpY2UubG9hZFdvcmtvdXRzKHsgbGltaXQ6IDEwMDAgfSk7XG5cbiAgICAgIC8vIOOCteODs+ODl+ODq+ODh+ODvOOCv+OCkui/veWKoO+8iOODh+ODoueUqO+8iVxuICAgICAgaWYgKHRoaXMud29ya291dERhdGEubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHRoaXMud29ya291dERhdGEgPSB0aGlzLmdlbmVyYXRlU2FtcGxlV29ya291dERhdGEoKTtcblxuICAgICAgICAvLyDjgrXjg7Pjg5fjg6vjg4fjg7zjgr/jgpLkv53lrZhcbiAgICAgICAgZm9yIChjb25zdCB3b3Jrb3V0IG9mIHRoaXMud29ya291dERhdGEpIHtcbiAgICAgICAgICBhd2FpdCB3b3Jrb3V0RGF0YVNlcnZpY2Uuc2F2ZVdvcmtvdXQod29ya291dCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgY29uc29sZS5sb2coYExvYWRlZCAke3RoaXMud29ya291dERhdGEubGVuZ3RofSB3b3Jrb3V0cyBmb3IgYW5hbHlzaXNgKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgbG9hZGluZyB3b3Jrb3V0IGRhdGE6JywgZXJyb3IpO1xuICAgICAgdGhpcy53b3Jrb3V0RGF0YSA9IHRoaXMuZ2VuZXJhdGVTYW1wbGVXb3Jrb3V0RGF0YSgpO1xuICAgICAgc2hvd05vdGlmaWNhdGlvbign44Ov44O844Kv44Ki44Km44OI44OH44O844K/44Gu6Kqt44G/6L6844G/44Gr5aSx5pWX44GX44G+44GX44GfJywgJ2Vycm9yJyk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIOODl+ODreOCsOODrOODg+OCt+ODluODu+OCquODvOODkOODvOODreODvOODieODh+ODvOOCv+OCkuiqreOBv+i+vOOBv1xuICAgKi9cbiAgYXN5bmMgbG9hZFByb2dyZXNzaXZlT3ZlcmxvYWREYXRhKCkge1xuICAgIHRyeSB7XG4gICAgICBjb25zb2xlLmxvZygnTG9hZGluZyBwcm9ncmVzc2l2ZSBvdmVybG9hZCBkYXRhLi4uJyk7XG4gICAgICB0aGlzLnByb2dyZXNzaXZlT3ZlcmxvYWREYXRhID1cbiAgICAgICAgYXdhaXQgcHJvZ3Jlc3NpdmVPdmVybG9hZFNlcnZpY2UuZ2V0T3ZlcmFsbFByb2dyZXNzKFxuICAgICAgICAgIHRoaXMuYW5hbHlzaXNQZXJpb2RcbiAgICAgICAgKTtcbiAgICAgIGNvbnNvbGUubG9nKFxuICAgICAgICAnUHJvZ3Jlc3NpdmUgb3ZlcmxvYWQgZGF0YSBsb2FkZWQ6JyxcbiAgICAgICAgdGhpcy5wcm9ncmVzc2l2ZU92ZXJsb2FkRGF0YVxuICAgICAgKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgbG9hZGluZyBwcm9ncmVzc2l2ZSBvdmVybG9hZCBkYXRhOicsIGVycm9yKTtcbiAgICAgIHNob3dOb3RpZmljYXRpb24oXG4gICAgICAgICfjg5fjg63jgrDjg6zjg4Pjgrfjg5bjg7vjgqrjg7zjg5Djg7zjg63jg7zjg4njg4fjg7zjgr/jga7oqq3jgb/ovrzjgb/jgavlpLHmlZfjgZfjgb7jgZfjgZ8nLFxuICAgICAgICAnZXJyb3InXG4gICAgICApO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDjgrXjg7Pjg5fjg6vjg6/jg7zjgq/jgqLjgqbjg4jjg4fjg7zjgr/jgpLnlJ/miJBcbiAgICogQHJldHVybnMge0FycmF5fSDjgrXjg7Pjg5fjg6vjg6/jg7zjgq/jgqLjgqbjg4jjg4fjg7zjgr/phY3liJdcbiAgICovXG4gIGdlbmVyYXRlU2FtcGxlV29ya291dERhdGEoKSB7XG4gICAgY29uc3QgdG9kYXkgPSBuZXcgRGF0ZSgpO1xuICAgIGNvbnN0IHNhbXBsZURhdGEgPSBbXTtcblxuICAgIC8vIOmBjuWOuzkw5pel5YiG44Gu44K144Oz44OX44Or44OH44O844K/44KS55Sf5oiQXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCA5MDsgaSsrKSB7XG4gICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUodG9kYXkpO1xuICAgICAgZGF0ZS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpIC0gaSk7XG5cbiAgICAgIC8vIDItM+aXpeOBqzHlm57jga7poLvluqbjgafjg6/jg7zjgq/jgqLjgqbjg4jjgpLnlJ/miJBcbiAgICAgIGlmIChpICUgMiA9PT0gMCB8fCBpICUgMyA9PT0gMCkge1xuICAgICAgICBjb25zdCBtdXNjbGVHcm91cHMgPSBbJ+iDuCcsICfog4zkuK0nLCAn6IKpJywgJ+iFlScsICfohJonLCAn6IW5562LJ107XG4gICAgICAgIGNvbnN0IHJhbmRvbU11c2NsZXMgPSBtdXNjbGVHcm91cHNcbiAgICAgICAgICAuc29ydCgoKSA9PiAwLjUgLSBNYXRoLnJhbmRvbSgpKVxuICAgICAgICAgIC5zbGljZSgwLCAyKTtcblxuICAgICAgICAvLyDph43ph4/jga7pgLLmranjgpLjgrfjg5/jg6Xjg6zjg7zjg4hcbiAgICAgICAgY29uc3QgYmFzZVdlaWdodCA9IDgwO1xuICAgICAgICBjb25zdCBwcm9ncmVzc0ZhY3RvciA9IE1hdGgubWF4KDAsICg5MCAtIGkpIC8gOTApOyAvLyDmmYLplpPjgajjgajjgoLjgavph43ph4/jgYzlopfliqBcbiAgICAgICAgY29uc3Qgd2VpZ2h0ID0gTWF0aC5mbG9vcihiYXNlV2VpZ2h0ICsgcHJvZ3Jlc3NGYWN0b3IgKiAyMCk7XG5cbiAgICAgICAgc2FtcGxlRGF0YS5wdXNoKHtcbiAgICAgICAgICBpZDogYHNhbXBsZS0ke2l9YCxcbiAgICAgICAgICBkYXRlOiBkYXRlLnRvSVNPU3RyaW5nKCkuc3BsaXQoJ1QnKVswXSxcbiAgICAgICAgICBtdXNjbGVfZ3JvdXBzOiByYW5kb21NdXNjbGVzLFxuICAgICAgICAgIGV4ZXJjaXNlczogW1xuICAgICAgICAgICAgeyBuYW1lOiAn44OZ44Oz44OB44OX44Os44K5Jywgc2V0czogMywgcmVwczogMTAsIHdlaWdodCB9LFxuICAgICAgICAgICAgeyBuYW1lOiAn44OX44OD44K344Ol44Ki44OD44OXJywgc2V0czogMywgcmVwczogMTUsIHdlaWdodDogMCB9LFxuICAgICAgICAgIF0sXG4gICAgICAgICAgZHVyYXRpb246IDQ1ICsgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMzApLCAvLyA0NS03NeWIhlxuICAgICAgICAgIG5vdGVzOiAn44K144Oz44OX44Or44Ov44O844Kv44Ki44Km44OIJyxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHNhbXBsZURhdGE7XG4gIH1cblxuICAvKipcbiAgICog57Wx6KiI5oOF5aCx44KS44Os44Oz44OA44Oq44Oz44KwXG4gICAqL1xuICByZW5kZXJTdGF0aXN0aWNzKCkge1xuICAgIHRoaXMucmVuZGVyT3ZlcmFsbFN0YXRzKCk7XG4gICAgdGhpcy5yZW5kZXJNdXNjbGVHcm91cFN0YXRzKCk7XG4gICAgdGhpcy5yZW5kZXJQcm9ncmVzc1N0YXRzKCk7XG4gIH1cblxuICAvKipcbiAgICog44OX44Ot44Kw44Os44OD44K344OW44O744Kq44O844OQ44O844Ot44O844OJ44K744Kv44K344On44Oz44KS44Os44Oz44OA44Oq44Oz44KwXG4gICAqL1xuICByZW5kZXJQcm9ncmVzc2l2ZU92ZXJsb2FkU2VjdGlvbigpIHtcbiAgICBjb25zdCBjb250YWluZXIgPSBzYWZlR2V0RWxlbWVudCgnI3Byb2dyZXNzaXZlLW92ZXJsb2FkLWNvbnRlbnQnKTtcbiAgICBpZiAoIWNvbnRhaW5lcikge1xuICAgICAgY29uc29sZS53YXJuKCdQcm9ncmVzc2l2ZSBvdmVybG9hZCBjb250YWluZXIgbm90IGZvdW5kJyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKCF0aGlzLnByb2dyZXNzaXZlT3ZlcmxvYWREYXRhKSB7XG4gICAgICBjb250YWluZXIuaW5uZXJIVE1MID0gYFxuICAgICAgICA8ZGl2IGNsYXNzPVwidGV4dC1jZW50ZXIgdGV4dC1ncmF5LTUwMCBweS00XCI+XG4gICAgICAgICAgPGkgY2xhc3M9XCJmYXMgZmEtZXhjbGFtYXRpb24tdHJpYW5nbGUgdGV4dC14bCBtYi0yXCI+PC9pPlxuICAgICAgICAgIDxwPuODl+ODreOCsOODrOODg+OCt+ODluODu+OCquODvOODkOODvOODreODvOODieODh+ODvOOCv+OBjOOBguOCiuOBvuOBm+OCkzwvcD5cbiAgICAgICAgPC9kaXY+XG4gICAgICBgO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGRhdGEgPSB0aGlzLnByb2dyZXNzaXZlT3ZlcmxvYWREYXRhO1xuXG4gICAgY29udGFpbmVyLmlubmVySFRNTCA9IGBcbiAgICAgIDwhLS0g57eP5ZCI44Oh44OI44Oq44Kv44K5IC0tPlxuICAgICAgPGRpdiBjbGFzcz1cImdyaWQgZ3JpZC1jb2xzLTEgbWQ6Z3JpZC1jb2xzLTQgZ2FwLTQgbWItNlwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwidGV4dC1jZW50ZXIgcC00IGJnLWJsdWUtNTAgcm91bmRlZC1sZyByZWxhdGl2ZSBncm91cFwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0ZXh0LTJ4bCBmb250LWJvbGQgdGV4dC1ibHVlLTYwMFwiPiR7ZGF0YS50b3RhbFdvcmtvdXRzfTwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0ZXh0LXNtIHRleHQtZ3JheS02MDAgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXJcIj5cbiAgICAgICAgICAgIOe3j+ODr+ODvOOCr+OCouOCpuODiOaVsFxuICAgICAgICAgICAgPGkgY2xhc3M9XCJmYXMgZmEtaW5mby1jaXJjbGUgbWwtMSB0ZXh0LWdyYXktNDAwIGN1cnNvci1oZWxwXCIgXG4gICAgICAgICAgICAgICB0aXRsZT1cIuiomOmMsuOBleOCjOOBn+ODr+ODvOOCr+OCouOCpuODiOOBrue3j+aVsOOBp+OBmeOAgue2mee2mueahOOBquODiOODrOODvOODi+ODs+OCsOOBruaMh+aomeOBqOOBl+OBpuS9v+eUqOOBleOCjOOBvuOBmeOAglwiPjwvaT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJ0ZXh0LWNlbnRlciBwLTQgYmctZ3JlZW4tNTAgcm91bmRlZC1sZyByZWxhdGl2ZSBncm91cFwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0ZXh0LTJ4bCBmb250LWJvbGQgdGV4dC1ncmVlbi02MDBcIj4ke3RoaXMuZm9ybWF0Vm9sdW1lKGRhdGEub3ZlcmFsbE1ldHJpY3MudG90YWxWb2x1bWUpfTwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0ZXh0LXNtIHRleHQtZ3JheS02MDAgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXJcIj5cbiAgICAgICAgICAgIOe3j+ODnOODquODpeODvOODoFxuICAgICAgICAgICAgPGkgY2xhc3M9XCJmYXMgZmEtaW5mby1jaXJjbGUgbWwtMSB0ZXh0LWdyYXktNDAwIGN1cnNvci1oZWxwXCIgXG4gICAgICAgICAgICAgICB0aXRsZT1cIuWFqOOBpuOBruOCqOOCr+OCteOCteOCpOOCuuOBrumHjemHj8OX5Zue5pWww5fjgrvjg4Pjg4jmlbDjga7lkIjoqIjjgafjgZnjgILnrYvlipvlkJHkuIrjga7mjIfmqJnjgajjgZfjgabkvb/nlKjjgZXjgozjgb7jgZnjgIJcIj48L2k+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwidGV4dC1jZW50ZXIgcC00IGJnLXB1cnBsZS01MCByb3VuZGVkLWxnIHJlbGF0aXZlIGdyb3VwXCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cInRleHQtMnhsIGZvbnQtYm9sZCB0ZXh0LXB1cnBsZS02MDBcIj4ke2RhdGEuY29uc2lzdGVuY3lTY29yZX0lPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cInRleHQtc20gdGV4dC1ncmF5LTYwMCBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlclwiPlxuICAgICAgICAgICAg5LiA6LKr5oCn44K544Kz44KiXG4gICAgICAgICAgICA8aSBjbGFzcz1cImZhcyBmYS1pbmZvLWNpcmNsZSBtbC0xIHRleHQtZ3JheS00MDAgY3Vyc29yLWhlbHBcIiBcbiAgICAgICAgICAgICAgIHRpdGxlPVwi44OI44Os44O844OL44Oz44Kw44Gu57aZ57aa5oCn44KS6KGo44GZ44K544Kz44Ki44Gn44GZ44CC6auY44GE44G744Gp5a6a5pyf55qE44Gr44OI44Os44O844OL44Oz44Kw44KS6KGM44Gj44Gm44GE44G+44GZ44CCXCI+PC9pPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInRleHQtY2VudGVyIHAtNCBiZy1vcmFuZ2UtNTAgcm91bmRlZC1sZyByZWxhdGl2ZSBncm91cFwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0ZXh0LTJ4bCBmb250LWJvbGQgdGV4dC1vcmFuZ2UtNjAwXCI+JHt0aGlzLmZvcm1hdFZvbHVtZShkYXRhLm92ZXJhbGxNZXRyaWNzLmF2ZXJhZ2VWb2x1bWVQZXJXb3Jrb3V0KX08L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwidGV4dC1zbSB0ZXh0LWdyYXktNjAwIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyXCI+XG4gICAgICAgICAgICDlubPlnYfjg5zjg6rjg6Xjg7zjg6BcbiAgICAgICAgICAgIDxpIGNsYXNzPVwiZmFzIGZhLWluZm8tY2lyY2xlIG1sLTEgdGV4dC1ncmF5LTQwMCBjdXJzb3ItaGVscFwiIFxuICAgICAgICAgICAgICAgdGl0bGU9XCIx5Zue44Gu44Ov44O844Kv44Ki44Km44OI44GC44Gf44KK44Gu5bmz5Z2H44Oc44Oq44Ol44O844Og44Gn44GZ44CC44OI44Os44O844OL44Oz44Kw5by35bqm44Gu5oyH5qiZ44Go44GX44Gm5L2/55So44GV44KM44G+44GZ44CCXCI+PC9pPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8IS0tIOeti+iCiemDqOS9jeWIpemAsuatqSAtLT5cbiAgICAgIDxkaXYgY2xhc3M9XCJtYi02XCI+XG4gICAgICAgIDxoNCBjbGFzcz1cInRleHQtbWQgZm9udC1tZWRpdW0gdGV4dC1ncmF5LTcwMCBtYi0zXCI+562L6IKJ6YOo5L2N5Yil6YCy5q2pPC9oND5cbiAgICAgICAgPGRpdiBjbGFzcz1cImdyaWQgZ3JpZC1jb2xzLTEgbWQ6Z3JpZC1jb2xzLTIgbGc6Z3JpZC1jb2xzLTMgZ2FwLTRcIj5cbiAgICAgICAgICAke09iamVjdC5lbnRyaWVzKGRhdGEubXVzY2xlR3JvdXBQcm9ncmVzcylcbiAgICAgICAgICAgIC5tYXAoKFttdXNjbGUsIHByb2dyZXNzXSkgPT4ge1xuICAgICAgICAgICAgICBpZiAoIXByb2dyZXNzKSByZXR1cm4gJyc7XG4gICAgICAgICAgICAgIHJldHVybiBgXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJib3JkZXIgYm9yZGVyLWdyYXktMjAwIHJvdW5kZWQtbGcgcC00XCI+XG4gICAgICAgICAgICAgICAgPGg1IGNsYXNzPVwiZm9udC1tZWRpdW0gdGV4dC1ncmF5LTgwMCBtYi0yXCI+JHt0aGlzLmdldE11c2NsZUdyb3VwTmFtZShtdXNjbGUpfTwvaDU+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNwYWNlLXktMlwiPlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgganVzdGlmeS1iZXR3ZWVuIHRleHQtc21cIj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ0ZXh0LWdyYXktNjAwXCI+44K744OD44K344On44Oz5pWwOjwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJmb250LW1lZGl1bVwiPiR7cHJvZ3Jlc3MudG90YWxTZXNzaW9uc308L3NwYW4+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4IGp1c3RpZnktYmV0d2VlbiB0ZXh0LXNtXCI+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwidGV4dC1ncmF5LTYwMFwiPumgu+W6puOCueOCs+OCojo8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiZm9udC1tZWRpdW1cIj4ke3Byb2dyZXNzLmZyZXF1ZW5jeUFuYWx5c2lzLmZyZXF1ZW5jeVNjb3JlfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgganVzdGlmeS1iZXR3ZWVuIHRleHQtc21cIj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ0ZXh0LWdyYXktNjAwXCI+5bmz5Z2H6ZaT6ZqUOjwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJmb250LW1lZGl1bVwiPiR7cHJvZ3Jlc3MuZnJlcXVlbmN5QW5hbHlzaXMuYXZlcmFnZURheXNCZXR3ZWVufeaXpTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIGA7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmpvaW4oJycpfVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8IS0tIOaOqOWlqOS6i+mghSAtLT5cbiAgICAgIDxkaXYgY2xhc3M9XCJtYi02XCI+XG4gICAgICAgIDxoNCBjbGFzcz1cInRleHQtbWQgZm9udC1tZWRpdW0gdGV4dC1ncmF5LTcwMCBtYi0zXCI+5o6o5aWo5LqL6aCFPC9oND5cbiAgICAgICAgPGRpdiBjbGFzcz1cInNwYWNlLXktM1wiPlxuICAgICAgICAgICR7ZGF0YS5yZWNvbW1lbmRhdGlvbnNcbiAgICAgICAgICAgIC5tYXAoXG4gICAgICAgICAgICAgIChyZWMpID0+IGBcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLTQgcm91bmRlZC1sZyAke1xuICAgICAgICAgICAgICByZWMucHJpb3JpdHkgPT09ICdoaWdoJ1xuICAgICAgICAgICAgICAgID8gJ2JnLXJlZC01MCBib3JkZXItbC00IGJvcmRlci1yZWQtNDAwJ1xuICAgICAgICAgICAgICAgIDogcmVjLnByaW9yaXR5ID09PSAnbWVkaXVtJ1xuICAgICAgICAgICAgICAgICAgPyAnYmcteWVsbG93LTUwIGJvcmRlci1sLTQgYm9yZGVyLXllbGxvdy00MDAnXG4gICAgICAgICAgICAgICAgICA6ICdiZy1ncmVlbi01MCBib3JkZXItbC00IGJvcmRlci1ncmVlbi00MDAnXG4gICAgICAgICAgICB9XCI+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4IGl0ZW1zLXN0YXJ0XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgtc2hyaW5rLTBcIj5cbiAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiZmFzICR7XG4gICAgICAgICAgICAgICAgICAgIHJlYy5wcmlvcml0eSA9PT0gJ2hpZ2gnXG4gICAgICAgICAgICAgICAgICAgICAgPyAnZmEtZXhjbGFtYXRpb24tdHJpYW5nbGUgdGV4dC1yZWQtNDAwJ1xuICAgICAgICAgICAgICAgICAgICAgIDogcmVjLnByaW9yaXR5ID09PSAnbWVkaXVtJ1xuICAgICAgICAgICAgICAgICAgICAgICAgPyAnZmEtaW5mby1jaXJjbGUgdGV4dC15ZWxsb3ctNDAwJ1xuICAgICAgICAgICAgICAgICAgICAgICAgOiAnZmEtY2hlY2stY2lyY2xlIHRleHQtZ3JlZW4tNDAwJ1xuICAgICAgICAgICAgICAgICAgfVwiPjwvaT5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWwtM1wiPlxuICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJ0ZXh0LXNtIGZvbnQtbWVkaXVtICR7XG4gICAgICAgICAgICAgICAgICAgIHJlYy5wcmlvcml0eSA9PT0gJ2hpZ2gnXG4gICAgICAgICAgICAgICAgICAgICAgPyAndGV4dC1yZWQtODAwJ1xuICAgICAgICAgICAgICAgICAgICAgIDogcmVjLnByaW9yaXR5ID09PSAnbWVkaXVtJ1xuICAgICAgICAgICAgICAgICAgICAgICAgPyAndGV4dC15ZWxsb3ctODAwJ1xuICAgICAgICAgICAgICAgICAgICAgICAgOiAndGV4dC1ncmVlbi04MDAnXG4gICAgICAgICAgICAgICAgICB9XCI+XG4gICAgICAgICAgICAgICAgICAgICR7cmVjLm1lc3NhZ2V9XG4gICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgICA8cCBjbGFzcz1cInRleHQtc20gJHtcbiAgICAgICAgICAgICAgICAgICAgcmVjLnByaW9yaXR5ID09PSAnaGlnaCdcbiAgICAgICAgICAgICAgICAgICAgICA/ICd0ZXh0LXJlZC03MDAnXG4gICAgICAgICAgICAgICAgICAgICAgOiByZWMucHJpb3JpdHkgPT09ICdtZWRpdW0nXG4gICAgICAgICAgICAgICAgICAgICAgICA/ICd0ZXh0LXllbGxvdy03MDAnXG4gICAgICAgICAgICAgICAgICAgICAgICA6ICd0ZXh0LWdyZWVuLTcwMCdcbiAgICAgICAgICAgICAgICAgIH0gbXQtMVwiPlxuICAgICAgICAgICAgICAgICAgICA8c3Ryb25nPuaOqOWlqOOCouOCr+OCt+ODp+ODszo8L3N0cm9uZz4gJHtyZWMuYWN0aW9ufVxuICAgICAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIGBcbiAgICAgICAgICAgIClcbiAgICAgICAgICAgIC5qb2luKCcnKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPCEtLSDjgqjjgq/jgrXjgrXjgqTjgrrliKXpgLLmrakgLS0+XG4gICAgICA8ZGl2PlxuICAgICAgICA8aDQgY2xhc3M9XCJ0ZXh0LW1kIGZvbnQtbWVkaXVtIHRleHQtZ3JheS03MDAgbWItM1wiPuOCqOOCr+OCteOCteOCpOOCuuWIpemAsuatqTwvaDQ+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJncmlkIGdyaWQtY29scy0xIG1kOmdyaWQtY29scy0yIGdhcC00XCI+XG4gICAgICAgICAgJHtPYmplY3QuZW50cmllcyhkYXRhLmV4ZXJjaXNlUHJvZ3Jlc3MpXG4gICAgICAgICAgICAuc2xpY2UoMCwgNilcbiAgICAgICAgICAgIC5tYXAoKFtleGVyY2lzZSwgcHJvZ3Jlc3NdKSA9PiB7XG4gICAgICAgICAgICAgIGlmICghcHJvZ3Jlc3MpIHJldHVybiAnJztcbiAgICAgICAgICAgICAgcmV0dXJuIGBcbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJvcmRlciBib3JkZXItZ3JheS0yMDAgcm91bmRlZC1sZyBwLTRcIj5cbiAgICAgICAgICAgICAgICA8aDUgY2xhc3M9XCJmb250LW1lZGl1bSB0ZXh0LWdyYXktODAwIG1iLTJcIj4ke2V4ZXJjaXNlfTwvaDU+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNwYWNlLXktMlwiPlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgganVzdGlmeS1iZXR3ZWVuIHRleHQtc21cIj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ0ZXh0LWdyYXktNjAwXCI+44K744OD44K344On44Oz5pWwOjwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJmb250LW1lZGl1bVwiPiR7cHJvZ3Jlc3MudG90YWxTZXNzaW9uc308L3NwYW4+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4IGp1c3RpZnktYmV0d2VlbiB0ZXh0LXNtXCI+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwidGV4dC1ncmF5LTYwMFwiPuODnOODquODpeODvOODoOmAsuatqTo8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiZm9udC1tZWRpdW0gJHtwcm9ncmVzcy5wcm9ncmVzc01ldHJpY3Mudm9sdW1lUHJvZ3Jlc3Npb24gPiAwID8gJ3RleHQtZ3JlZW4tNjAwJyA6ICd0ZXh0LXJlZC02MDAnfVwiPlxuICAgICAgICAgICAgICAgICAgICAgICR7cHJvZ3Jlc3MucHJvZ3Jlc3NNZXRyaWNzLnZvbHVtZVByb2dyZXNzaW9uID4gMCA/ICcrJyA6ICcnfSR7cHJvZ3Jlc3MucHJvZ3Jlc3NNZXRyaWNzLnZvbHVtZVByb2dyZXNzaW9ufSVcbiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleCBqdXN0aWZ5LWJldHdlZW4gdGV4dC1zbVwiPlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInRleHQtZ3JheS02MDBcIj7lvLfluqbpgLLmrak6PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImZvbnQtbWVkaXVtICR7cHJvZ3Jlc3MucHJvZ3Jlc3NNZXRyaWNzLmludGVuc2l0eVByb2dyZXNzaW9uID4gMCA/ICd0ZXh0LWdyZWVuLTYwMCcgOiAndGV4dC1yZWQtNjAwJ31cIj5cbiAgICAgICAgICAgICAgICAgICAgICAke3Byb2dyZXNzLnByb2dyZXNzTWV0cmljcy5pbnRlbnNpdHlQcm9ncmVzc2lvbiA+IDAgPyAnKycgOiAnJ30ke3Byb2dyZXNzLnByb2dyZXNzTWV0cmljcy5pbnRlbnNpdHlQcm9ncmVzc2lvbn0lXG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgganVzdGlmeS1iZXR3ZWVuIHRleHQtc21cIj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ0ZXh0LWdyYXktNjAwXCI+5bmz5Z2H6YeN6YePOjwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJmb250LW1lZGl1bVwiPiR7cHJvZ3Jlc3MucHJvZ3Jlc3NNZXRyaWNzLmF2ZXJhZ2VXZWlnaHR9a2c8L3NwYW4+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICBgO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5qb2luKCcnKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICBgO1xuICB9XG5cbiAgLyoqXG4gICAqIOe3j+WQiOe1seioiOOCkuODrOODs+ODgOODquODs+OCsFxuICAgKi9cbiAgcmVuZGVyT3ZlcmFsbFN0YXRzKCkge1xuICAgIGNvbnN0IHRvdGFsV29ya291dHMgPSB0aGlzLndvcmtvdXREYXRhLmxlbmd0aDtcbiAgICBjb25zdCB0b3RhbEhvdXJzID1cbiAgICAgIHRoaXMud29ya291dERhdGEucmVkdWNlKFxuICAgICAgICAoc3VtLCB3b3Jrb3V0KSA9PiBzdW0gKyAod29ya291dC5kdXJhdGlvbiB8fCAwKSxcbiAgICAgICAgMFxuICAgICAgKSAvIDM2MDA7XG4gICAgY29uc3QgYXZnU2Vzc2lvblRpbWUgPSB0b3RhbFdvcmtvdXRzID4gMCA/IHRvdGFsSG91cnMgLyB0b3RhbFdvcmtvdXRzIDogMDtcblxuICAgIC8vIOimgee0oOOBruWtmOWcqOeiuuiqjeOCkui/veWKoFxuICAgIGNvbnN0IHRvdGFsV29ya291dHNFbCA9IHNhZmVHZXRFbGVtZW50KCcjdG90YWwtd29ya291dHMnKTtcbiAgICBjb25zdCB0b3RhbEhvdXJzRWwgPSBzYWZlR2V0RWxlbWVudCgnI3RvdGFsLWhvdXJzJyk7XG4gICAgY29uc3QgYXZnU2Vzc2lvblRpbWVFbCA9IHNhZmVHZXRFbGVtZW50KCcjYXZnLXNlc3Npb24tdGltZScpO1xuXG4gICAgaWYgKHRvdGFsV29ya291dHNFbCkge1xuICAgICAgdG90YWxXb3Jrb3V0c0VsLnRleHRDb250ZW50ID0gdG90YWxXb3Jrb3V0cztcbiAgICB9XG4gICAgaWYgKHRvdGFsSG91cnNFbCkge1xuICAgICAgdG90YWxIb3Vyc0VsLnRleHRDb250ZW50ID0gYCR7dG90YWxIb3Vycy50b0ZpeGVkKDEpfeaZgumWk2A7XG4gICAgfVxuICAgIGlmIChhdmdTZXNzaW9uVGltZUVsKSB7XG4gICAgICBhdmdTZXNzaW9uVGltZUVsLnRleHRDb250ZW50ID0gYCR7YXZnU2Vzc2lvblRpbWUudG9GaXhlZCgxKX3mmYLplpNgO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDpg6jkvY3liKXntbHoqIjjgpLjg6zjg7Pjg4Djg6rjg7PjgrBcbiAgICovXG4gIHJlbmRlck11c2NsZUdyb3VwU3RhdHMoKSB7XG4gICAgY29uc3QgbXVzY2xlR3JvdXBDb3VudHMgPSB7fTtcblxuICAgIHRoaXMud29ya291dERhdGEuZm9yRWFjaCgod29ya291dCkgPT4ge1xuICAgICAgY29uc3QgbXVzY2xlR3JvdXBzID0gd29ya291dC5tdXNjbGVfZ3JvdXBzIHx8IHdvcmtvdXQubXVzY2xlR3JvdXBzIHx8IFtdO1xuICAgICAgbXVzY2xlR3JvdXBzLmZvckVhY2goKG11c2NsZSkgPT4ge1xuICAgICAgICBtdXNjbGVHcm91cENvdW50c1ttdXNjbGVdID0gKG11c2NsZUdyb3VwQ291bnRzW211c2NsZV0gfHwgMCkgKyAxO1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBjb25zdCBjb250YWluZXIgPSBzYWZlR2V0RWxlbWVudCgnI211c2NsZS1ncm91cC1zdGF0cycpO1xuICAgIGlmICghY29udGFpbmVyKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29udGFpbmVyLmlubmVySFRNTCA9IE9iamVjdC5lbnRyaWVzKG11c2NsZUdyb3VwQ291bnRzKVxuICAgICAgLnNvcnQoKFssIGFdLCBbLCBiXSkgPT4gYiAtIGEpXG4gICAgICAuc2xpY2UoMCwgNSlcbiAgICAgIC5tYXAoXG4gICAgICAgIChbbXVzY2xlLCBjb3VudF0pID0+IGBcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleCBqdXN0aWZ5LWJldHdlZW5cIj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ0ZXh0LWdyYXktNjAwXCI+JHt0aGlzLmdldE11c2NsZUdyb3VwTmFtZShtdXNjbGUpfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJmb250LWJvbGQgdGV4dC1ibHVlLTYwMFwiPiR7Y291bnR95ZuePC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgYFxuICAgICAgKVxuICAgICAgLmpvaW4oJycpO1xuICB9XG5cbiAgLyoqXG4gICAqIOeti+iCiemDqOS9jeWQjeOCkuWPluW+l1xuICAgKi9cbiAgZ2V0TXVzY2xlR3JvdXBOYW1lKG11c2NsZUlkKSB7XG4gICAgLy8g562L6IKJ6YOo5L2N5ZCN44Gu44Oe44OD44OU44Oz44KwXG4gICAgY29uc3QgbXVzY2xlR3JvdXBOYW1lcyA9IHtcbiAgICAgIGNoZXN0OiAn6IO4JyxcbiAgICAgIGJhY2s6ICfog4zkuK0nLFxuICAgICAgc2hvdWxkZXJzOiAn6IKpJyxcbiAgICAgIGFybXM6ICfohZUnLFxuICAgICAgbGVnczogJ+iEmicsXG4gICAgICBjb3JlOiAn6IW5562LJyxcbiAgICAgIOiDuDogJ+iDuCcsXG4gICAgICDog4zkuK06ICfog4zkuK0nLFxuICAgICAg6IKpOiAn6IKpJyxcbiAgICAgIOiFlTogJ+iFlScsXG4gICAgICDohJo6ICfohJonLFxuICAgICAg6IW5562LOiAn6IW5562LJyxcbiAgICB9O1xuXG4gICAgcmV0dXJuIG11c2NsZUdyb3VwTmFtZXNbbXVzY2xlSWRdIHx8IG11c2NsZUlkO1xuICB9XG5cbiAgLyoqXG4gICAqIOmAsuatqee1seioiOOCkuODrOODs+ODgOODquODs+OCsFxuICAgKi9cbiAgcmVuZGVyUHJvZ3Jlc3NTdGF0cygpIHtcbiAgICAvLyDnsKHmmJPnmoTjgarpgLLmrannjofoqIjnrpdcbiAgICBjb25zdCByZWNlbnRXb3Jrb3V0cyA9IHRoaXMud29ya291dERhdGEuc2xpY2UoLTEwKTtcbiAgICBjb25zdCBvbGRlcldvcmtvdXRzID0gdGhpcy53b3Jrb3V0RGF0YS5zbGljZSgtMjAsIC0xMCk7XG5cbiAgICBjb25zdCByZWNlbnRBdmdXZWlnaHQgPSB0aGlzLmNhbGN1bGF0ZUF2ZXJhZ2VXZWlnaHQocmVjZW50V29ya291dHMpO1xuICAgIGNvbnN0IG9sZGVyQXZnV2VpZ2h0ID0gdGhpcy5jYWxjdWxhdGVBdmVyYWdlV2VpZ2h0KG9sZGVyV29ya291dHMpO1xuXG4gICAgY29uc3Qgc3RyZW5ndGhQcm9ncmVzcyA9XG4gICAgICBvbGRlckF2Z1dlaWdodCA+IDBcbiAgICAgICAgPyAoKChyZWNlbnRBdmdXZWlnaHQgLSBvbGRlckF2Z1dlaWdodCkgLyBvbGRlckF2Z1dlaWdodCkgKiAxMDApLnRvRml4ZWQoXG4gICAgICAgICAgICAxXG4gICAgICAgICAgKVxuICAgICAgICA6IDA7XG5cbiAgICAvLyDopoHntKDjga7lrZjlnKjnorroqo3jgpLov73liqBcbiAgICBjb25zdCBzdHJlbmd0aFByb2dyZXNzRWwgPSBzYWZlR2V0RWxlbWVudCgnI3N0cmVuZ3RoLXByb2dyZXNzJyk7XG4gICAgY29uc3QgZW5kdXJhbmNlUHJvZ3Jlc3NFbCA9IHNhZmVHZXRFbGVtZW50KCcjZW5kdXJhbmNlLXByb2dyZXNzJyk7XG4gICAgY29uc3Qgb3ZlcmFsbFNjb3JlRWwgPSBzYWZlR2V0RWxlbWVudCgnI292ZXJhbGwtc2NvcmUnKTtcblxuICAgIGlmIChzdHJlbmd0aFByb2dyZXNzRWwpIHtcbiAgICAgIHN0cmVuZ3RoUHJvZ3Jlc3NFbC50ZXh0Q29udGVudCA9IGAke3N0cmVuZ3RoUHJvZ3Jlc3N9JWA7XG4gICAgfVxuICAgIGlmIChlbmR1cmFuY2VQcm9ncmVzc0VsKSB7XG4gICAgICBlbmR1cmFuY2VQcm9ncmVzc0VsLnRleHRDb250ZW50ID0gJ+ioiOeul+S4rS4uLic7XG4gICAgfVxuICAgIGlmIChvdmVyYWxsU2NvcmVFbCkge1xuICAgICAgb3ZlcmFsbFNjb3JlRWwudGV4dENvbnRlbnQgPSB0aGlzLmNhbGN1bGF0ZU92ZXJhbGxTY29yZSgpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDlubPlnYfph43ph4/jgpLoqIjnrpdcbiAgICovXG4gIGNhbGN1bGF0ZUF2ZXJhZ2VXZWlnaHQod29ya291dHMpIHtcbiAgICBpZiAod29ya291dHMubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gMDtcbiAgICB9XG5cbiAgICBsZXQgdG90YWxXZWlnaHQgPSAwO1xuICAgIGxldCBjb3VudCA9IDA7XG5cbiAgICB3b3Jrb3V0cy5mb3JFYWNoKCh3b3Jrb3V0KSA9PiB7XG4gICAgICBpZiAod29ya291dC5leGVyY2lzZXMgfHwgd29ya291dC50cmFpbmluZ19sb2dzKSB7XG4gICAgICAgIGNvbnN0IGV4ZXJjaXNlcyA9IHdvcmtvdXQuZXhlcmNpc2VzIHx8IHdvcmtvdXQudHJhaW5pbmdfbG9ncyB8fCBbXTtcbiAgICAgICAgZXhlcmNpc2VzLmZvckVhY2goKGV4ZXJjaXNlKSA9PiB7XG4gICAgICAgICAgaWYgKGV4ZXJjaXNlLndlaWdodHMgJiYgQXJyYXkuaXNBcnJheShleGVyY2lzZS53ZWlnaHRzKSkge1xuICAgICAgICAgICAgZXhlcmNpc2Uud2VpZ2h0cy5mb3JFYWNoKCh3ZWlnaHQpID0+IHtcbiAgICAgICAgICAgICAgaWYgKHdlaWdodCA+IDApIHtcbiAgICAgICAgICAgICAgICB0b3RhbFdlaWdodCArPSB3ZWlnaHQ7XG4gICAgICAgICAgICAgICAgY291bnQrKztcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBjb3VudCA+IDAgPyB0b3RhbFdlaWdodCAvIGNvdW50IDogMDtcbiAgfVxuXG4gIC8qKlxuICAgKiDnt4/lkIjjgrnjgrPjgqLjgpLoqIjnrpdcbiAgICovXG4gIGNhbGN1bGF0ZU92ZXJhbGxTY29yZSgpIHtcbiAgICBjb25zdCB0b3RhbFdvcmtvdXRzID0gdGhpcy53b3Jrb3V0RGF0YS5sZW5ndGg7XG4gICAgY29uc3QgY29uc2lzdGVuY3kgPSBNYXRoLm1pbih0b3RhbFdvcmtvdXRzIC8gMzAsIDEpICogMTAwOyAvLyAzMOaXpeOBp+ato+imj+WMllxuICAgIGNvbnN0IGZyZXF1ZW5jeSA9IE1hdGgubWluKHRvdGFsV29ya291dHMgLyAxMCwgMSkgKiAxMDA7IC8vIDEw5Zue44Gn5q2j6KaP5YyWXG5cbiAgICByZXR1cm4gTWF0aC5yb3VuZCgoY29uc2lzdGVuY3kgKyBmcmVxdWVuY3kpIC8gMik7XG4gIH1cblxuICAvKipcbiAgICog44OB44Oj44O844OI44KS44Os44Oz44OA44Oq44Oz44KwXG4gICAqL1xuICBhc3luYyByZW5kZXJDaGFydHMoKSB7XG4gICAgdHJ5IHtcbiAgICAgIC8vIENoYXJ0Lmpz44GM6Kqt44G/6L6844G+44KM44Gm44GE44KL44GL44OB44Kn44OD44KvXG4gICAgICBpZiAodHlwZW9mIENoYXJ0ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdDaGFydC5qcyBpcyBub3QgbG9hZGVkJyk7XG4gICAgICAgIHNob3dOb3RpZmljYXRpb24oJ+OCsOODqeODleODqeOCpOODluODqeODquOBruiqreOBv+i+vOOBv+OBq+WkseaVl+OBl+OBvuOBl+OBnycsICdlcnJvcicpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIOODgeODo+ODvOODiOOBruaPj+eUu+OCkumghuasoeWun+ihjFxuICAgICAgYXdhaXQgdGhpcy5yZW5kZXJGcmVxdWVuY3lDaGFydCgpO1xuICAgICAgYXdhaXQgdGhpcy5yZW5kZXJNdXNjbGVHcm91cENoYXJ0KCk7XG4gICAgICBhd2FpdCB0aGlzLnJlbmRlcldlaWdodFByb2dyZXNzQ2hhcnQoKTtcbiAgICAgIGF3YWl0IHRoaXMucmVuZGVyU2V0c1Byb2dyZXNzQ2hhcnQoKTtcblxuICAgICAgY29uc29sZS5sb2coJ0FsbCBjaGFydHMgcmVuZGVyZWQgc3VjY2Vzc2Z1bGx5Jyk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHJlbmRlcmluZyBjaGFydHM6JywgZXJyb3IpO1xuICAgICAgaGFuZGxlRXJyb3IoZXJyb3IsIHtcbiAgICAgICAgY29udGV4dDogJ+ODgeODo+ODvOODiOaPj+eUuycsXG4gICAgICAgIHNob3dOb3RpZmljYXRpb246IHRydWUsXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog44OI44Os44O844OL44Oz44Kw6aC75bqm44OB44Oj44O844OI44KS44Os44Oz44OA44Oq44Oz44KwXG4gICAqL1xuICBhc3luYyByZW5kZXJGcmVxdWVuY3lDaGFydCgpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgY2FudmFzID0gc2FmZUdldEVsZW1lbnQoJyNmcmVxdWVuY3ktY2hhcnQnKTtcbiAgICAgIGlmICghY2FudmFzKSB7XG4gICAgICAgIGNvbnNvbGUud2FybignRnJlcXVlbmN5IGNoYXJ0IGNhbnZhcyBub3QgZm91bmQnKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBmcmVxdWVuY3lEYXRhID0gdGhpcy5jYWxjdWxhdGVGcmVxdWVuY3lEYXRhKCk7XG5cbiAgICAgIHRoaXMuY2hhcnRzLmZyZXF1ZW5jeSA9IG5ldyBDaGFydChjYW52YXMsIHtcbiAgICAgICAgdHlwZTogJ2xpbmUnLFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgbGFiZWxzOiBmcmVxdWVuY3lEYXRhLmxhYmVscyxcbiAgICAgICAgICBkYXRhc2V0czogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBsYWJlbDogJ+ODiOODrOODvOODi+ODs+OCsOWbnuaVsCcsXG4gICAgICAgICAgICAgIGRhdGE6IGZyZXF1ZW5jeURhdGEuZGF0YSxcbiAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICcjM2I4MmY2JyxcbiAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSg1OSwgMTMwLCAyNDYsIDAuMSknLFxuICAgICAgICAgICAgICB0ZW5zaW9uOiAwLjQsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIF0sXG4gICAgICAgIH0sXG4gICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICByZXNwb25zaXZlOiB0cnVlLFxuICAgICAgICAgIG1haW50YWluQXNwZWN0UmF0aW86IGZhbHNlLFxuICAgICAgICAgIHBsdWdpbnM6IHtcbiAgICAgICAgICAgIGxlZ2VuZDoge1xuICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgICBzY2FsZXM6IHtcbiAgICAgICAgICAgIHk6IHtcbiAgICAgICAgICAgICAgYmVnaW5BdFplcm86IHRydWUsXG4gICAgICAgICAgICAgIHRpY2tzOiB7XG4gICAgICAgICAgICAgICAgc3RlcFNpemU6IDEsXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICAgIGNvbnNvbGUubG9nKCdGcmVxdWVuY3kgY2hhcnQgcmVuZGVyZWQgc3VjY2Vzc2Z1bGx5Jyk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHJlbmRlcmluZyBmcmVxdWVuY3kgY2hhcnQ6JywgZXJyb3IpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDpg6jkvY3liKXjg4Hjg6Pjg7zjg4jjgpLjg6zjg7Pjg4Djg6rjg7PjgrBcbiAgICovXG4gIGFzeW5jIHJlbmRlck11c2NsZUdyb3VwQ2hhcnQoKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGNhbnZhcyA9IHNhZmVHZXRFbGVtZW50KCcjbXVzY2xlLWdyb3VwLWNoYXJ0Jyk7XG4gICAgICBpZiAoIWNhbnZhcykge1xuICAgICAgICBjb25zb2xlLndhcm4oJ011c2NsZSBncm91cCBjaGFydCBjYW52YXMgbm90IGZvdW5kJyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY29uc3QgbXVzY2xlR3JvdXBEYXRhID0gdGhpcy5jYWxjdWxhdGVNdXNjbGVHcm91cERhdGEoKTtcblxuICAgICAgdGhpcy5jaGFydHMubXVzY2xlR3JvdXAgPSBuZXcgQ2hhcnQoY2FudmFzLCB7XG4gICAgICAgIHR5cGU6ICdkb3VnaG51dCcsXG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICBsYWJlbHM6IG11c2NsZUdyb3VwRGF0YS5sYWJlbHMsXG4gICAgICAgICAgZGF0YXNldHM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgZGF0YTogbXVzY2xlR3JvdXBEYXRhLmRhdGEsXG4gICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogW1xuICAgICAgICAgICAgICAgICcjZWY0NDQ0JyxcbiAgICAgICAgICAgICAgICAnIzNiODJmNicsXG4gICAgICAgICAgICAgICAgJyMxMGI5ODEnLFxuICAgICAgICAgICAgICAgICcjZjU5ZTBiJyxcbiAgICAgICAgICAgICAgICAnIzhiNWNmNicsXG4gICAgICAgICAgICAgICAgJyNlYzQ4OTknLFxuICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICBdLFxuICAgICAgICB9LFxuICAgICAgICBvcHRpb25zOiB7XG4gICAgICAgICAgcmVzcG9uc2l2ZTogdHJ1ZSxcbiAgICAgICAgICBtYWludGFpbkFzcGVjdFJhdGlvOiBmYWxzZSxcbiAgICAgICAgICBwbHVnaW5zOiB7XG4gICAgICAgICAgICBsZWdlbmQ6IHtcbiAgICAgICAgICAgICAgcG9zaXRpb246ICdib3R0b20nLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgfSk7XG4gICAgICBjb25zb2xlLmxvZygnTXVzY2xlIGdyb3VwIGNoYXJ0IHJlbmRlcmVkIHN1Y2Nlc3NmdWxseScpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciByZW5kZXJpbmcgbXVzY2xlIGdyb3VwIGNoYXJ0OicsIGVycm9yKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog6YeN6YeP5o6o56e744OB44Oj44O844OI44KS44Os44Oz44OA44Oq44Oz44KwXG4gICAqL1xuICBhc3luYyByZW5kZXJXZWlnaHRQcm9ncmVzc0NoYXJ0KCkge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBjYW52YXMgPSBzYWZlR2V0RWxlbWVudCgnI3dlaWdodC1wcm9ncmVzcy1jaGFydCcpO1xuICAgICAgaWYgKCFjYW52YXMpIHtcbiAgICAgICAgY29uc29sZS53YXJuKCdXZWlnaHQgcHJvZ3Jlc3MgY2hhcnQgY2FudmFzIG5vdCBmb3VuZCcpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHdlaWdodERhdGEgPSB0aGlzLmNhbGN1bGF0ZVdlaWdodFByb2dyZXNzRGF0YSgpO1xuXG4gICAgICB0aGlzLmNoYXJ0cy53ZWlnaHRQcm9ncmVzcyA9IG5ldyBDaGFydChjYW52YXMsIHtcbiAgICAgICAgdHlwZTogJ2xpbmUnLFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgbGFiZWxzOiB3ZWlnaHREYXRhLmxhYmVscyxcbiAgICAgICAgICBkYXRhc2V0czogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBsYWJlbDogJ+W5s+Wdh+mHjemHjyAoa2cpJyxcbiAgICAgICAgICAgICAgZGF0YTogd2VpZ2h0RGF0YS5kYXRhLFxuICAgICAgICAgICAgICBib3JkZXJDb2xvcjogJyNmNTllMGInLFxuICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDI0NSwgMTU4LCAxMSwgMC4xKScsXG4gICAgICAgICAgICAgIHRlbnNpb246IDAuNCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgXSxcbiAgICAgICAgfSxcbiAgICAgICAgb3B0aW9uczoge1xuICAgICAgICAgIHJlc3BvbnNpdmU6IHRydWUsXG4gICAgICAgICAgbWFpbnRhaW5Bc3BlY3RSYXRpbzogZmFsc2UsXG4gICAgICAgICAgcGx1Z2luczoge1xuICAgICAgICAgICAgbGVnZW5kOiB7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9LFxuICAgICAgICAgIHNjYWxlczoge1xuICAgICAgICAgICAgeToge1xuICAgICAgICAgICAgICBiZWdpbkF0WmVybzogdHJ1ZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIH0pO1xuICAgICAgY29uc29sZS5sb2coJ1dlaWdodCBwcm9ncmVzcyBjaGFydCByZW5kZXJlZCBzdWNjZXNzZnVsbHknKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgcmVuZGVyaW5nIHdlaWdodCBwcm9ncmVzcyBjaGFydDonLCBlcnJvcik7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIOOCu+ODg+ODiOaVsOaOqOenu+ODgeODo+ODvOODiOOCkuODrOODs+ODgOODquODs+OCsFxuICAgKi9cbiAgYXN5bmMgcmVuZGVyU2V0c1Byb2dyZXNzQ2hhcnQoKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGNhbnZhcyA9IHNhZmVHZXRFbGVtZW50KCcjc2V0cy1wcm9ncmVzcy1jaGFydCcpO1xuICAgICAgaWYgKCFjYW52YXMpIHtcbiAgICAgICAgY29uc29sZS53YXJuKCdTZXRzIHByb2dyZXNzIGNoYXJ0IGNhbnZhcyBub3QgZm91bmQnKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBzZXRzRGF0YSA9IHRoaXMuY2FsY3VsYXRlU2V0c1Byb2dyZXNzRGF0YSgpO1xuXG4gICAgICB0aGlzLmNoYXJ0cy5zZXRzUHJvZ3Jlc3MgPSBuZXcgQ2hhcnQoY2FudmFzLCB7XG4gICAgICAgIHR5cGU6ICdiYXInLFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgbGFiZWxzOiBzZXRzRGF0YS5sYWJlbHMsXG4gICAgICAgICAgZGF0YXNldHM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgbGFiZWw6ICfjgrvjg4Pjg4jmlbAnLFxuICAgICAgICAgICAgICBkYXRhOiBzZXRzRGF0YS5kYXRhLFxuICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjOGI1Y2Y2JyxcbiAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICcjN2MzYWVkJyxcbiAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDEsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIF0sXG4gICAgICAgIH0sXG4gICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICByZXNwb25zaXZlOiB0cnVlLFxuICAgICAgICAgIG1haW50YWluQXNwZWN0UmF0aW86IGZhbHNlLFxuICAgICAgICAgIHBsdWdpbnM6IHtcbiAgICAgICAgICAgIGxlZ2VuZDoge1xuICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgICBzY2FsZXM6IHtcbiAgICAgICAgICAgIHk6IHtcbiAgICAgICAgICAgICAgYmVnaW5BdFplcm86IHRydWUsXG4gICAgICAgICAgICAgIHRpY2tzOiB7XG4gICAgICAgICAgICAgICAgc3RlcFNpemU6IDEsXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICAgIGNvbnNvbGUubG9nKCdTZXRzIHByb2dyZXNzIGNoYXJ0IHJlbmRlcmVkIHN1Y2Nlc3NmdWxseScpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciByZW5kZXJpbmcgc2V0cyBwcm9ncmVzcyBjaGFydDonLCBlcnJvcik7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIOmgu+W6puODh+ODvOOCv+OCkuioiOeul1xuICAgKi9cbiAgY2FsY3VsYXRlRnJlcXVlbmN5RGF0YSgpIHtcbiAgICBjb25zdCBsYXN0MzBEYXlzID0gW107XG4gICAgY29uc3QgdG9kYXkgPSBuZXcgRGF0ZSgpO1xuXG4gICAgZm9yIChsZXQgaSA9IDI5OyBpID49IDA7IGktLSkge1xuICAgICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKHRvZGF5KTtcbiAgICAgIGRhdGUuc2V0RGF0ZShkYXRlLmdldERhdGUoKSAtIGkpO1xuICAgICAgbGFzdDMwRGF5cy5wdXNoKGRhdGUudG9JU09TdHJpbmcoKS5zcGxpdCgnVCcpWzBdKTtcbiAgICB9XG5cbiAgICBjb25zdCBmcmVxdWVuY3lNYXAgPSB7fTtcbiAgICBsYXN0MzBEYXlzLmZvckVhY2goKGRhdGUpID0+IHtcbiAgICAgIGZyZXF1ZW5jeU1hcFtkYXRlXSA9IDA7XG4gICAgfSk7XG5cbiAgICB0aGlzLndvcmtvdXREYXRhLmZvckVhY2goKHdvcmtvdXQpID0+IHtcbiAgICAgIGNvbnN0IHdvcmtvdXREYXRlID0gbmV3IERhdGUod29ya291dC5kYXRlIHx8IHdvcmtvdXQuc3RhcnRUaW1lKVxuICAgICAgICAudG9JU09TdHJpbmcoKVxuICAgICAgICAuc3BsaXQoJ1QnKVswXTtcbiAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZnJlcXVlbmN5TWFwLCB3b3Jrb3V0RGF0ZSkpIHtcbiAgICAgICAgZnJlcXVlbmN5TWFwW3dvcmtvdXREYXRlXSsrO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGxhYmVsczogbGFzdDMwRGF5cy5tYXAoKGRhdGUpID0+XG4gICAgICAgIG5ldyBEYXRlKGRhdGUpLnRvTG9jYWxlRGF0ZVN0cmluZygnamEtSlAnLCB7XG4gICAgICAgICAgbW9udGg6ICdzaG9ydCcsXG4gICAgICAgICAgZGF5OiAnbnVtZXJpYycsXG4gICAgICAgIH0pXG4gICAgICApLFxuICAgICAgZGF0YTogT2JqZWN0LnZhbHVlcyhmcmVxdWVuY3lNYXApLFxuICAgIH07XG4gIH1cblxuICAvKipcbiAgICog6YOo5L2N5Yil44OH44O844K/44KS6KiI566XXG4gICAqL1xuICBjYWxjdWxhdGVNdXNjbGVHcm91cERhdGEoKSB7XG4gICAgY29uc3QgbXVzY2xlR3JvdXBDb3VudHMgPSB7fTtcblxuICAgIHRoaXMud29ya291dERhdGEuZm9yRWFjaCgod29ya291dCkgPT4ge1xuICAgICAgY29uc3QgbXVzY2xlR3JvdXBzID0gd29ya291dC5tdXNjbGVfZ3JvdXBzIHx8IHdvcmtvdXQubXVzY2xlR3JvdXBzIHx8IFtdO1xuICAgICAgbXVzY2xlR3JvdXBzLmZvckVhY2goKG11c2NsZSkgPT4ge1xuICAgICAgICBtdXNjbGVHcm91cENvdW50c1ttdXNjbGVdID0gKG11c2NsZUdyb3VwQ291bnRzW211c2NsZV0gfHwgMCkgKyAxO1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBjb25zdCBzb3J0ZWQgPSBPYmplY3QuZW50cmllcyhtdXNjbGVHcm91cENvdW50cylcbiAgICAgIC5zb3J0KChbLCBhXSwgWywgYl0pID0+IGIgLSBhKVxuICAgICAgLnNsaWNlKDAsIDYpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGxhYmVsczogc29ydGVkLm1hcCgoW211c2NsZV0pID0+IHRoaXMuZ2V0TXVzY2xlR3JvdXBOYW1lKG11c2NsZSkpLFxuICAgICAgZGF0YTogc29ydGVkLm1hcCgoWywgY291bnRdKSA9PiBjb3VudCksXG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiDph43ph4/pgLLmranjg4fjg7zjgr/jgpLoqIjnrpdcbiAgICovXG4gIGNhbGN1bGF0ZVdlaWdodFByb2dyZXNzRGF0YSgpIHtcbiAgICAvLyDnsKHmmJPnmoTjgarph43ph4/pgLLmranjg4fjg7zjgr9cbiAgICBjb25zdCBsYXN0MTBXb3Jrb3V0cyA9IHRoaXMud29ya291dERhdGEuc2xpY2UoLTEwKTtcbiAgICBjb25zdCBsYWJlbHMgPSBsYXN0MTBXb3Jrb3V0cy5tYXAoKF8sIGluZGV4KSA9PiBg44K744OD44K344On44OzJHtpbmRleCArIDF9YCk7XG4gICAgY29uc3QgZGF0YSA9IGxhc3QxMFdvcmtvdXRzLm1hcCgod29ya291dCkgPT5cbiAgICAgIHRoaXMuY2FsY3VsYXRlQXZlcmFnZVdlaWdodChbd29ya291dF0pXG4gICAgKTtcblxuICAgIHJldHVybiB7IGxhYmVscywgZGF0YSB9O1xuICB9XG5cbiAgLyoqXG4gICAqIOOCu+ODg+ODiOaVsOmAsuatqeODh+ODvOOCv+OCkuioiOeul1xuICAgKi9cbiAgY2FsY3VsYXRlU2V0c1Byb2dyZXNzRGF0YSgpIHtcbiAgICBjb25zdCBsYXN0MTBXb3Jrb3V0cyA9IHRoaXMud29ya291dERhdGEuc2xpY2UoLTEwKTtcbiAgICBjb25zdCBsYWJlbHMgPSBsYXN0MTBXb3Jrb3V0cy5tYXAoKF8sIGluZGV4KSA9PiBg44K744OD44K344On44OzJHtpbmRleCArIDF9YCk7XG4gICAgY29uc3QgZGF0YSA9IGxhc3QxMFdvcmtvdXRzLm1hcCgod29ya291dCkgPT4ge1xuICAgICAgaWYgKHdvcmtvdXQuZXhlcmNpc2VzIHx8IHdvcmtvdXQudHJhaW5pbmdfbG9ncykge1xuICAgICAgICBjb25zdCBleGVyY2lzZXMgPSB3b3Jrb3V0LmV4ZXJjaXNlcyB8fCB3b3Jrb3V0LnRyYWluaW5nX2xvZ3MgfHwgW107XG4gICAgICAgIHJldHVybiBleGVyY2lzZXMucmVkdWNlKFxuICAgICAgICAgIChzdW0sIGV4ZXJjaXNlKSA9PiBzdW0gKyAoZXhlcmNpc2Uuc2V0cyB8fCAwKSxcbiAgICAgICAgICAwXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICByZXR1cm4gMDtcbiAgICB9KTtcblxuICAgIHJldHVybiB7IGxhYmVscywgZGF0YSB9O1xuICB9XG5cbiAgLyoqXG4gICAqIOWIhuaekOODrOODneODvOODiOOCkueUn+aIkFxuICAgKi9cbiAgZ2VuZXJhdGVBbmFseXNpc1JlcG9ydCgpIHtcbiAgICBjb25zdCBjb250YWluZXIgPSBzYWZlR2V0RWxlbWVudCgnI2FuYWx5c2lzLXJlcG9ydCcpO1xuICAgIGlmICghY29udGFpbmVyKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgcmVwb3J0ID0gdGhpcy5nZW5lcmF0ZVJlcG9ydCgpO1xuICAgIGNvbnRhaW5lci5pbm5lckhUTUwgPSByZXBvcnQ7XG4gIH1cblxuICAvKipcbiAgICog44Os44Od44O844OI44KS55Sf5oiQXG4gICAqL1xuICBnZW5lcmF0ZVJlcG9ydCgpIHtcbiAgICBjb25zdCB0b3RhbFdvcmtvdXRzID0gdGhpcy53b3Jrb3V0RGF0YS5sZW5ndGg7XG4gICAgY29uc3QgdG90YWxIb3VycyA9XG4gICAgICB0aGlzLndvcmtvdXREYXRhLnJlZHVjZShcbiAgICAgICAgKHN1bSwgd29ya291dCkgPT4gc3VtICsgKHdvcmtvdXQuZHVyYXRpb24gfHwgMCksXG4gICAgICAgIDBcbiAgICAgICkgLyAzNjAwO1xuXG4gICAgY29uc3QgbXVzY2xlR3JvdXBDb3VudHMgPSB7fTtcbiAgICB0aGlzLndvcmtvdXREYXRhLmZvckVhY2goKHdvcmtvdXQpID0+IHtcbiAgICAgIGNvbnN0IG11c2NsZUdyb3VwcyA9IHdvcmtvdXQubXVzY2xlX2dyb3VwcyB8fCB3b3Jrb3V0Lm11c2NsZUdyb3VwcyB8fCBbXTtcbiAgICAgIG11c2NsZUdyb3Vwcy5mb3JFYWNoKChtdXNjbGUpID0+IHtcbiAgICAgICAgbXVzY2xlR3JvdXBDb3VudHNbbXVzY2xlXSA9IChtdXNjbGVHcm91cENvdW50c1ttdXNjbGVdIHx8IDApICsgMTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgY29uc3QgbW9zdFRyYWluZWRNdXNjbGUgPSBPYmplY3QuZW50cmllcyhtdXNjbGVHcm91cENvdW50cykuc29ydChcbiAgICAgIChbLCBhXSwgWywgYl0pID0+IGIgLSBhXG4gICAgKVswXTtcblxuICAgIHJldHVybiBgXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwic3BhY2UteS00XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtNCBiZy1ibHVlLTUwIHJvdW5kZWQtbGdcIj5cbiAgICAgICAgICAgICAgICAgICAgPGg0IGNsYXNzPVwiZm9udC1zZW1pYm9sZCB0ZXh0LWJsdWUtODAwIG1iLTJcIj7nt4/lkIjoqZXkvqE8L2g0PlxuICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz1cInRleHQtYmx1ZS03MDBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIOOBk+OCjOOBvuOBp+OBqyR7dG90YWxXb3Jrb3V0c33lm57jga7jg4jjg6zjg7zjg4vjg7PjgrDjgpLlrp/mlr3jgZfjgIFcbiAgICAgICAgICAgICAgICAgICAgICAgIOWQiOioiCR7dG90YWxIb3Vycy50b0ZpeGVkKDEpfeaZgumWk+OBruODiOODrOODvOODi+ODs+OCsOOCkuihjOOBhOOBvuOBl+OBn+OAglxuICAgICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtNCBiZy1ncmVlbi01MCByb3VuZGVkLWxnXCI+XG4gICAgICAgICAgICAgICAgICAgIDxoNCBjbGFzcz1cImZvbnQtc2VtaWJvbGQgdGV4dC1ncmVlbi04MDAgbWItMlwiPuacgOOCgumNm+OBiOOBpuOBhOOCi+mDqOS9jTwvaDQ+XG4gICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwidGV4dC1ncmVlbi03MDBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICR7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG1vc3RUcmFpbmVkTXVzY2xlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBgJHt0aGlzLmdldE11c2NsZUdyb3VwTmFtZShtb3N0VHJhaW5lZE11c2NsZVswXSl977yIJHttb3N0VHJhaW5lZE11c2NsZVsxXX3lm57vvIlgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAn44OH44O844K/44GM5LiN6Laz44GX44Gm44GE44G+44GZJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtNCBiZy15ZWxsb3ctNTAgcm91bmRlZC1sZ1wiPlxuICAgICAgICAgICAgICAgICAgICA8aDQgY2xhc3M9XCJmb250LXNlbWlib2xkIHRleHQteWVsbG93LTgwMCBtYi0yXCI+5o6o5aWo5LqL6aCFPC9oND5cbiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJ0ZXh0LXllbGxvdy03MDBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIOe2mee2mueahOOBquODiOODrOODvOODi+ODs+OCsOOCkue2muOBkeOCi+OBk+OBqOOBp+OAgeOBleOCieOBquOCi+mAsuatqeOBjOacn+W+heOBp+OBjeOBvuOBmeOAglxuICAgICAgICAgICAgICAgICAgICAgICAg44OQ44Op44Oz44K544Gu5Y+W44KM44Gf44OI44Os44O844OL44Oz44Kw44KS5b+D44GM44GR44G+44GX44KH44GG44CCXG4gICAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICBgO1xuICB9XG5cbiAgLyoqXG4gICAqIOOCpOODmeODs+ODiOODquOCueODiuODvOOCkuioreWumlxuICAgKi9cbiAgc2V0dXBFdmVudExpc3RlbmVycygpIHtcbiAgICAvLyDliIbmnpDmnJ/plpPjga7lpInmm7RcbiAgICBjb25zdCBwZXJpb2RTZWxlY3QgPSBzYWZlR2V0RWxlbWVudCgnI2FuYWx5c2lzLXBlcmlvZCcpO1xuICAgIGlmIChwZXJpb2RTZWxlY3QpIHtcbiAgICAgIHBlcmlvZFNlbGVjdC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBhc3luYyAoZXZlbnQpID0+IHtcbiAgICAgICAgdGhpcy5hbmFseXNpc1BlcmlvZCA9IHBhcnNlSW50KGV2ZW50LnRhcmdldC52YWx1ZSk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdBbmFseXNpcyBwZXJpb2QgY2hhbmdlZCB0bzonLCB0aGlzLmFuYWx5c2lzUGVyaW9kKTtcblxuICAgICAgICAvLyDjg5fjg63jgrDjg6zjg4Pjgrfjg5bjg7vjgqrjg7zjg5Djg7zjg63jg7zjg4njg4fjg7zjgr/jgpLlho3oqq3jgb/ovrzjgb9cbiAgICAgICAgYXdhaXQgdGhpcy5sb2FkUHJvZ3Jlc3NpdmVPdmVybG9hZERhdGEoKTtcbiAgICAgICAgdGhpcy5yZW5kZXJQcm9ncmVzc2l2ZU92ZXJsb2FkU2VjdGlvbigpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIOODgeODo+ODvOODiOOCkuegtOajhFxuICAgKi9cbiAgZGVzdHJveSgpIHtcbiAgICBPYmplY3QudmFsdWVzKHRoaXMuY2hhcnRzKS5mb3JFYWNoKChjaGFydCkgPT4ge1xuICAgICAgaWYgKGNoYXJ0ICYmIHR5cGVvZiBjaGFydC5kZXN0cm95ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGNoYXJ0LmRlc3Ryb3koKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICB0aGlzLmNoYXJ0cyA9IHt9O1xuICB9XG5cbiAgLyoqXG4gICAqIOODnOODquODpeODvOODoOOCkuODleOCqeODvOODnuODg+ODiFxuICAgKiBAcGFyYW0ge251bWJlcn0gdm9sdW1lIC0g44Oc44Oq44Ol44O844Og5YCkXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9IOODleOCqeODvOODnuODg+ODiOOBleOCjOOBn+ODnOODquODpeODvOODoFxuICAgKi9cbiAgZm9ybWF0Vm9sdW1lKHZvbHVtZSkge1xuICAgIGlmICh2b2x1bWUgPj0gMTAwMDAwMCkge1xuICAgICAgcmV0dXJuIGAkeyh2b2x1bWUgLyAxMDAwMDAwKS50b0ZpeGVkKDEpfU1gO1xuICAgIH0gZWxzZSBpZiAodm9sdW1lID49IDEwMDApIHtcbiAgICAgIHJldHVybiBgJHsodm9sdW1lIC8gMTAwMCkudG9GaXhlZCgxKX1LYDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHZvbHVtZS50b1N0cmluZygpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDnrYvogonpg6jkvY3lkI3jgpLlj5blvpdcbiAgICogQHBhcmFtIHtzdHJpbmd9IG11c2NsZSAtIOeti+iCiemDqOS9jUlEXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9IOeti+iCiemDqOS9jeWQjVxuICAgKi9cbiAgZ2V0TXVzY2xlR3JvdXBOYW1lKG11c2NsZSkge1xuICAgIGNvbnN0IG5hbWVzID0ge1xuICAgICAgY2hlc3Q6ICfog7gnLFxuICAgICAgYmFjazogJ+iDjOS4rScsXG4gICAgICBzaG91bGRlcnM6ICfogqknLFxuICAgICAgYXJtczogJ+iFlScsXG4gICAgICBsZWdzOiAn6ISaJyxcbiAgICAgIGNvcmU6ICfohbnnrYsnLFxuICAgIH07XG4gICAgcmV0dXJuIG5hbWVzW211c2NsZV0gfHwgbXVzY2xlO1xuICB9XG59XG5cbi8vIOODh+ODleOCqeODq+ODiOOCqOOCr+OCueODneODvOODiFxuY29uc3QgYW5hbHlzaXNQYWdlID0gbmV3IEFuYWx5c2lzUGFnZSgpO1xuZXhwb3J0IGRlZmF1bHQgYW5hbHlzaXNQYWdlO1xuZXhwb3J0IHsgQW5hbHlzaXNQYWdlIH07XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVBLElBQUFBLFlBQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLG1CQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSwyQkFBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsUUFBQSxHQUFBSCxPQUFBO0FBS0EsSUFBQUksYUFBQSxHQUFBSixPQUFBO0FBQXVELFNBQUFLLFFBQUFDLENBQUEsc0NBQUFELE9BQUEsd0JBQUFFLE1BQUEsdUJBQUFBLE1BQUEsQ0FBQUMsUUFBQSxhQUFBRixDQUFBLGtCQUFBQSxDQUFBLGdCQUFBQSxDQUFBLFdBQUFBLENBQUEseUJBQUFDLE1BQUEsSUFBQUQsQ0FBQSxDQUFBRyxXQUFBLEtBQUFGLE1BQUEsSUFBQUQsQ0FBQSxLQUFBQyxNQUFBLENBQUFHLFNBQUEscUJBQUFKLENBQUEsS0FBQUQsT0FBQSxDQUFBQyxDQUFBO0FBQUEsU0FBQUssZUFBQUMsQ0FBQSxFQUFBQyxDQUFBLFdBQUFDLGVBQUEsQ0FBQUYsQ0FBQSxLQUFBRyxxQkFBQSxDQUFBSCxDQUFBLEVBQUFDLENBQUEsS0FBQUcsMkJBQUEsQ0FBQUosQ0FBQSxFQUFBQyxDQUFBLEtBQUFJLGdC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L0Q7a0JBQUE2UCxTQUFBLENBQUF6VSxDQUFBO2tCQUFBLE9BQ01vVSxNQUFJLENBQUM1TywyQkFBMkIsQ0FBQyxDQUFDO2dCQUFBO2tCQUN4QzRPLE1BQUksQ0FBQzFPLGdDQUFnQyxDQUFDLENBQUM7Z0JBQUM7a0JBQUEsT0FBQStPLFNBQUEsQ0FBQXRVLENBQUE7Y0FBQTtZQUFBLEdBQUFvVSxRQUFBO1VBQUEsQ0FDekM7VUFBQSxpQkFBQUssRUFBQTtZQUFBLE9BQUFOLE1BQUEsQ0FBQTlRLEtBQUEsT0FBQUQsU0FBQTtVQUFBO1FBQUEsSUFBQztNQUNKO0lBQ0Y7O0lBRUE7QUFDRjtBQUNBO0VBRkU7SUFBQU8sR0FBQTtJQUFBcEQsS0FBQSxFQUdBLFNBQUFtVSxPQUFPQSxDQUFBLEVBQUc7TUFDUnRVLE1BQU0sQ0FBQ3VTLE1BQU0sQ0FBQyxJQUFJLENBQUN2TyxNQUFNLENBQUMsQ0FBQ3FJLE9BQU8sQ0FBQyxVQUFDa0ksS0FBSyxFQUFLO1FBQzVDLElBQUlBLEtBQUssSUFBSSxPQUFPQSxLQUFLLENBQUNELE9BQU8sS0FBSyxVQUFVLEVBQUU7VUFDaERDLEtBQUssQ0FBQ0QsT0FBTyxDQUFDLENBQUM7UUFDakI7TUFDRixDQUFDLENBQUM7TUFDRixJQUFJLENBQUN0USxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQ2xCOztJQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7RUFKRTtJQUFBVCxHQUFBO0lBQUFwRCxLQUFBLEVBS0EsU0FBQXdKLFlBQVlBLENBQUM2SyxNQUFNLEVBQUU7TUFDbkIsSUFBSUEsTUFBTSxJQUFJLE9BQU8sRUFBRTtRQUNyQixVQUFBck4sTUFBQSxDQUFVLENBQUNxTixNQUFNLEdBQUcsT0FBTyxFQUFFdEksT0FBTyxDQUFDLENBQUMsQ0FBQztNQUN6QyxDQUFDLE1BQU0sSUFBSXNJLE1BQU0sSUFBSSxJQUFJLEVBQUU7UUFDekIsVUFBQXJOLE1BQUEsQ0FBVSxDQUFDcU4sTUFBTSxHQUFHLElBQUksRUFBRXRJLE9BQU8sQ0FBQyxDQUFDLENBQUM7TUFDdEMsQ0FBQyxNQUFNO1FBQ0wsT0FBT3NJLE1BQU0sQ0FBQzVULFFBQVEsQ0FBQyxDQUFDO01BQzFCO0lBQ0Y7RUFBQztBQUFBLEtBb0JIO0FBQ0EsSUFBTTZULFlBQVksR0FBRyxJQUFJNVEsWUFBWSxDQUFDLENBQUM7QUFBQyxJQUFBNlEsUUFBQSxHQUFBNVEsT0FBQSxjQUN6QjJRLFlBQVkiLCJpZ25vcmVMaXN0IjpbXX0=